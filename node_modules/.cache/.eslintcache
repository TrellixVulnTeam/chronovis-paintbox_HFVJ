[{"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/index.js":"1","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js":"2","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/reportWebVitals.js":"3","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/useResizeObserver.js":"4","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js":"5","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Image.js":"6","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js":"7","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/ExportDataForm.js":"8","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Layers.js":"9","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Scrubber.js":"10","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/ImportDataForm.js":"11","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewZoneForm.js":"12","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewInstantForm.js":"13","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Legend.js":"14","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Certainty.js":"15","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Importance.js":"16","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Connection.js":"17","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/SelectedDisplay.js":"18","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewScaleForm.js":"19","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateIntervals.js":"20","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/deleteInstant.js":"21","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js":"22","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditScaleForm.js":"23","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditForm.js":"24","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/deleteInterval.js":"25","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/WelcomeMessage.js":"26","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NavBar.js":"27","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js":"28","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EmptyProj.js":"29","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic_optimized.js":"30","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InputFormText.js":"31","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InputFormNum.js":"32","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InputFormScale.js":"33","/Users/skye/Desktop/Portfolio/chronovis/src/index.js":"34","/Users/skye/Desktop/Portfolio/chronovis/src/App.js":"35","/Users/skye/Desktop/Portfolio/chronovis/src/reportWebVitals.js":"36","/Users/skye/Desktop/Portfolio/chronovis/src/components/NewInstantForm.js":"37","/Users/skye/Desktop/Portfolio/chronovis/src/components/Graphic.js":"38","/Users/skye/Desktop/Portfolio/chronovis/src/components/InfoBox.js":"39","/Users/skye/Desktop/Portfolio/chronovis/src/components/NewScaleForm.js":"40","/Users/skye/Desktop/Portfolio/chronovis/src/components/ExportDataForm.js":"41","/Users/skye/Desktop/Portfolio/chronovis/src/components/NewIntervalForm.js":"42","/Users/skye/Desktop/Portfolio/chronovis/src/components/ImportDataForm.js":"43","/Users/skye/Desktop/Portfolio/chronovis/src/components/EditScaleForm.js":"44","/Users/skye/Desktop/Portfolio/chronovis/src/components/Layers.js":"45","/Users/skye/Desktop/Portfolio/chronovis/src/components/NavBar.js":"46","/Users/skye/Desktop/Portfolio/chronovis/src/components/Scrubber.js":"47","/Users/skye/Desktop/Portfolio/chronovis/src/components/Legend.js":"48","/Users/skye/Desktop/Portfolio/chronovis/src/components/EmptyProj.js":"49","/Users/skye/Desktop/Portfolio/chronovis/src/components/WelcomeMessage.js":"50","/Users/skye/Desktop/Portfolio/chronovis/src/components/Connection.js":"51","/Users/skye/Desktop/Portfolio/chronovis/src/components/Certainty.js":"52","/Users/skye/Desktop/Portfolio/chronovis/src/components/generateIntervals.js":"53","/Users/skye/Desktop/Portfolio/chronovis/src/components/Image.js":"54","/Users/skye/Desktop/Portfolio/chronovis/src/components/Importance.js":"55","/Users/skye/Desktop/Portfolio/chronovis/src/components/NewZoneForm.js":"56","/Users/skye/Desktop/Portfolio/chronovis/src/components/useResizeObserver.js":"57","/Users/skye/Desktop/Portfolio/chronovis/src/components/InputFormScale.js":"58","/Users/skye/Desktop/Portfolio/chronovis/src/components/deleteInstant.js":"59","/Users/skye/Desktop/Portfolio/chronovis/src/components/InputFormText.js":"60","/Users/skye/Desktop/Portfolio/chronovis/src/components/EditForm.js":"61","/Users/skye/Desktop/Portfolio/chronovis/src/components/deleteInterval.js":"62","/Users/skye/Desktop/Portfolio/chronovis/src/components/InputFormNum.js":"63","/Users/skye/Desktop/Portfolio/chronovis/src/components/SelectedDisplay.js":"64","/Users/skye/Desktop/Portfolio/chronovis/src/components/Hands.js":"65"},{"size":516,"mtime":1630537364686,"results":"66","hashOfConfig":"67"},{"size":12563,"mtime":1651800587278,"results":"68","hashOfConfig":"67"},{"size":362,"mtime":1622221211501,"results":"69","hashOfConfig":"67"},{"size":959,"mtime":1630537364684,"results":"70","hashOfConfig":"67"},{"size":31230,"mtime":1651730369612,"results":"71","hashOfConfig":"67"},{"size":185,"mtime":1630537364680,"results":"72","hashOfConfig":"67"},{"size":14234,"mtime":1651107036961,"results":"73","hashOfConfig":"67"},{"size":1408,"mtime":1648184354960,"results":"74","hashOfConfig":"67"},{"size":905,"mtime":1630537364681,"results":"75","hashOfConfig":"67"},{"size":1896,"mtime":1638810210000,"results":"76","hashOfConfig":"67"},{"size":1909,"mtime":1651074963646,"results":"77","hashOfConfig":"67"},{"size":4562,"mtime":1651106881625,"results":"78","hashOfConfig":"67"},{"size":4791,"mtime":1651069027354,"results":"79","hashOfConfig":"67"},{"size":424,"mtime":1639452582257,"results":"80","hashOfConfig":"67"},{"size":1622,"mtime":1651077336203,"results":"81","hashOfConfig":"67"},{"size":1774,"mtime":1639452941088,"results":"82","hashOfConfig":"67"},{"size":2559,"mtime":1639452937505,"results":"83","hashOfConfig":"67"},{"size":582,"mtime":1639452643342,"results":"84","hashOfConfig":"67"},{"size":5001,"mtime":1651017029987,"results":"85","hashOfConfig":"67"},{"size":1425,"mtime":1648186189388,"results":"86","hashOfConfig":"67"},{"size":760,"mtime":1649578281895,"results":"87","hashOfConfig":"67"},{"size":6002,"mtime":1650917378180,"results":"88","hashOfConfig":"67"},{"size":5091,"mtime":1650867794566,"results":"89","hashOfConfig":"67"},{"size":543,"mtime":1650185374777,"results":"90","hashOfConfig":"67"},{"size":875,"mtime":1649578327019,"results":"91","hashOfConfig":"67"},{"size":1557,"mtime":1651706763071,"results":"92","hashOfConfig":"67"},{"size":9058,"mtime":1651483384733,"results":"93","hashOfConfig":"67"},{"size":5241,"mtime":1651799845827,"results":"94","hashOfConfig":"67"},{"size":373,"mtime":1650186976005,"results":"95","hashOfConfig":"67"},{"size":26535,"mtime":1650244536635,"results":"96","hashOfConfig":"97"},{"size":458,"mtime":1650866887491,"results":"98","hashOfConfig":"67"},{"size":449,"mtime":1651016780859,"results":"99","hashOfConfig":"67"},{"size":425,"mtime":1650866488417,"results":"100","hashOfConfig":"67"},{"size":516,"mtime":1630537364686,"results":"101","hashOfConfig":"102"},{"size":12516,"mtime":1652055958407,"results":"103","hashOfConfig":"102"},{"size":362,"mtime":1622221211501,"results":"104","hashOfConfig":"102"},{"size":4791,"mtime":1651069027354,"results":"105","hashOfConfig":"102"},{"size":31230,"mtime":1651730369612,"results":"106","hashOfConfig":"102"},{"size":14234,"mtime":1651107036961,"results":"107","hashOfConfig":"102"},{"size":5001,"mtime":1651017029987,"results":"108","hashOfConfig":"102"},{"size":1408,"mtime":1648184354960,"results":"109","hashOfConfig":"102"},{"size":6002,"mtime":1650917378180,"results":"110","hashOfConfig":"102"},{"size":1909,"mtime":1651074963646,"results":"111","hashOfConfig":"102"},{"size":5091,"mtime":1650867794566,"results":"112","hashOfConfig":"102"},{"size":905,"mtime":1630537364681,"results":"113","hashOfConfig":"102"},{"size":9058,"mtime":1651483384733,"results":"114","hashOfConfig":"102"},{"size":1896,"mtime":1638810210000,"results":"115","hashOfConfig":"102"},{"size":424,"mtime":1639452582257,"results":"116","hashOfConfig":"102"},{"size":373,"mtime":1650186976005,"results":"117","hashOfConfig":"102"},{"size":1557,"mtime":1651706763071,"results":"118","hashOfConfig":"102"},{"size":2559,"mtime":1639452937505,"results":"119","hashOfConfig":"102"},{"size":1622,"mtime":1651077336203,"results":"120","hashOfConfig":"102"},{"size":1425,"mtime":1648186189388,"results":"121","hashOfConfig":"102"},{"size":185,"mtime":1630537364680,"results":"122","hashOfConfig":"102"},{"size":1774,"mtime":1639452941088,"results":"123","hashOfConfig":"102"},{"size":4562,"mtime":1651106881625,"results":"124","hashOfConfig":"102"},{"size":959,"mtime":1630537364684,"results":"125","hashOfConfig":"102"},{"size":425,"mtime":1650866488417,"results":"126","hashOfConfig":"102"},{"size":760,"mtime":1649578281895,"results":"127","hashOfConfig":"102"},{"size":458,"mtime":1650866887491,"results":"128","hashOfConfig":"102"},{"size":543,"mtime":1650185374777,"results":"129","hashOfConfig":"102"},{"size":875,"mtime":1649578327019,"results":"130","hashOfConfig":"102"},{"size":449,"mtime":1651016780859,"results":"131","hashOfConfig":"102"},{"size":582,"mtime":1639452643342,"results":"132","hashOfConfig":"102"},{"size":6368,"mtime":1652055226810,"results":"133","hashOfConfig":"102"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"rn2l83",{"filePath":"137","messages":"138","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"136"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"136"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"136"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"136"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1b3hpy6",{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},"6ilu8o",{"filePath":"213","messages":"214","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"212"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"212"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"212"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"212"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"212"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"212"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"212"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"212"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"212"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"212"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/index.js",[],["276","277"],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/App.js",["278","279","280","281","282","283","284","285","286","287","288","289"],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/reportWebVitals.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/useResizeObserver.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic.js",["290","291","292","293","294","295","296","297","298"],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Image.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InfoBox.js",["299","300","301"],"import deleteInstant from \"./deleteInstant\";\nimport deleteInterval from \"./deleteInterval\";\nimport EditForm from \"./EditForm\";\nimport React, { useState } from 'react';\n\n/*\n  - pass object info and mouseclick position to component\n  - component is a div set at mouseclick position and displays object info as text\n*/\n\nfunction InfoBox({info, setInfo, history, setHistory, data, zones, updateSrc, radius}) {\n  //init\n  var content = null;\n  const target = Array.isArray(info.target)?info.target[1]:info.target;\n  /*\n    - structure of instant targets:\n      {\n        \"text\": \"Lorem\",\n        \"x\": 1620,\n        \"y\": 15,\n        \"target\": [\n            \"1\"\n        ],\n        \"color\": \"#4DA6FF\",\n        \"opacity\": 0.5,\n        \"radius\": 8,\n        \"intervalText\": \"evolution of terrestrial vegetation\",\n        \"intervalColor\": \"red\",\n        \"intervalWidth\": 5,\n        \"intervalOpacity\": 0.8,\n        \"intervalDashed\": \"5 2\",\n        \"layer\": 1,\n        \"scale\": \"smalls\"\n      }\n    - structure of interval targets:\n      {\n        \"source\": [\n            \"0\",\n            {\n                \"text\": \"Lorem\",\n                \"x\": 1620,\n                \"y\": 15,\n                .\n                .\n                .\n            }\n        ],\n        \"target\": [\n            \"1\",\n            {\n                \"text\": \"Ipsum\",\n                \"x\": 1623,\n                \"y\": 15,\n                .\n                .\n                .\n            }\n        ],\n        \"text\": \"evolution of terrestrial vegetation\",\n        \"color\": \"red\",\n        \"width\": 5,\n        \"opacity\": 0.8,\n        \"dashed\": \"5 2\"\n      }\n    - structure of zone targets:\n      {\n        \"id\": 1,\n        \"text\": \"zone2\",\n        \"start\": 1623,\n        \"end\": 1630,\n        \"yStart\": 10,\n        \"yEnd\": 30,\n        \"color\": \"green\",\n        \"opacity\": 0.25,\n        \"scale\": \"smalls\",\n        \"importance\": 2\n      }\n  */\n\n  //states\n  const [editMode, setEditMode] = useState(false);\n\n  //values directly from data, immutable by onChange\n  const dataValues = {\n    //instant specific\n    time: target.x,\n    yPos: target.y,\n    radius: target.radius,\n    //interval specific\n    sourceX: target.source?target.source[1].x:null,\n    sourceY: target.source?target.source[1].y:null,\n    targetX: target.source?target.target[1].x:null, //target.target for both instant and interval, but target.source interval only\n    targetY: target.source?target.target[1].y:null,\n    //zone specific\n    timeStart: target.start,\n    timeEnd: target.end,\n    yStart: target.yStart,\n    yEnd: target.yEnd,\n    //all\n    text: target.text,\n    color: target.color,\n    opacity: target.opacity,\n    width: target.width,\n    importance: target.importance\n  };\n\n  //turn null values into empty string for controlled input forms\n  Object.entries(dataValues).forEach((k) => {\n    if (!k[1]) { //check for null value\n      dataValues[k[0]] = \"\";\n    }\n  });\n\n  //values for input forms, mutable\n  const [values, setValues] = useState(dataValues);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    const { value, name } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  const handleCancel = (e) => {\n    e.preventDefault();\n    //reset all values to json data version\n    setValues(dataValues);\n    setEditMode(false);\n  }\n\n  const handleSubmitInstant = (e) => {\n    e.preventDefault();\n    const newData = {...data};\n    const xyArray = [values.time, values.yPos];\n\n    //error handling\n    const xyNums = xyArray.map ( n => {\n        if (isNaN(parseFloat(n))) {\n            alert(\"Please input valid times and/or Y positions!\");\n            return;\n        } else {\n          return parseFloat(n);\n        }\n      }\n    );\n\n    newData[info.target[0]] = {\n      ...newData[info.target[0]],\n      \"x\": xyNums[0],\n      \"y\": xyNums[1],\n      \"text\": values.text,\n      \"color\": values.color, //if color is specified, create color entry in data\n      \"radius\": values.radius,\n      \"opacity\": values.opacity,\n      \"importance\": values.importance\n    };\n\n    updateSrc(newData);\n    setEditMode(false);\n    setInfo(null);\n  }\n\n  const handleSubmitInterval = (e) => {\n    e.preventDefault();\n    const newData = {...data};\n    const xyArray = [values.sourceX, values.sourceY, values.targetX, values.targetY];\n\n    //error handling\n    const xyNums = xyArray.map ( n => {\n        if (isNaN(parseFloat(n))) {\n            alert(\"Please input valid times and/or Y positions!\");\n            return;\n        } else {\n          return parseFloat(n);\n        }\n      });\n\n    const node = newData[target.source[0]];\n    node.x = xyNums[0];\n    node.y = xyNums[1];\n    newData[target.target[0]].x = xyNums[2];\n    newData[target.target[0]].y = xyNums[3];\n    node.intervalColor = values.color;\n    node.intervalWidth = values.width;\n    node.intervalOpacity = values.opacity;\n    node.intervalText = values.text;\n\n    updateSrc(newData);\n    setEditMode(false);\n    setInfo(null);\n  }\n\n  const handleSubmitZone = (e) => {\n    e.preventDefault();\n\n    const newZones = {...zones};\n    const xyArray = [values.timeStart, values.timeEnd];\n    // const xyArray = [values.timeStart, values.timeEnd, values.yStart, values.yEnd];\n\n    //error handling\n    const xyNums = xyArray.map ( n => {\n        if (isNaN(parseFloat(n))) {\n            alert(\"Please input valid times and/or Y positions!\");\n            return;\n        } else {\n          return parseFloat(n);\n        }\n    });\n\n\n    newZones[info.target[0]] = {\n      ...newZones[info.target[0]],\n      \"start\": xyNums[0],\n      \"end\": xyNums[1],\n      \"yStart\": xyNums[2],\n      \"yEnd\": xyNums[3],\n      \"text\": values.text,\n      \"color\": values.color,\n      \"opacity\": values.opacity,\n      \"importance\": values.importance\n    };\n\nconsole.log(newZones[info.target[0]]);\n\n    updateSrc(newZones, \"zones\");\n    setEditMode(false);\n    setInfo(null);\n  }\n\n  const handleDeleteInterval = (e) => {\n    e.preventDefault();\n    deleteInterval(target, data, updateSrc);\n    setInfo(null);\n  }\n\n  const handleDeleteInstant = (e) => {\n    e.preventDefault();\n    deleteInstant(info.target, data, updateSrc);\n    setInfo(null);\n  }\n\n  const handleDeleteZone = (e) => {\n    e.preventDefault();\n    const newZones = {...zones};\n    delete newZones[info.target[0]];\n    //won't delete if there is only 1 zone left\n    updateSrc(newZones, \"zones\");\n    setInfo(null);\n  }\n\n  switch (info.type) {\n    case 'interval':\n      content =\n        <form className=\"container\">\n          <div className=\"container flexRow\">\n            <div className=\"containerLeft textRight textSecondary\">\n              Text: &nbsp;<br/>\n              From: &nbsp;<br/>\n              To: &nbsp;<br/>\n              Color: &nbsp;<br/>\n              Opacity: &nbsp;<br/>\n              Importance: &nbsp;<br/>\n              Width: &nbsp;\n            </div>\n            <div className=\"containerRight\">\n              <EditForm name=\"text\" value={values.text} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"any unicode character\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"sourceX\" value={values.sourceX} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/>,&nbsp;\n              <EditForm name=\"sourceY\" value={values.sourceY} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>\n              <EditForm name=\"targetX\" value={values.targetX} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/>,&nbsp;\n              <EditForm name=\"targetY\" value={values.targetY} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>\n              <EditForm name=\"color\" value={values.color} nullValue={\"black\"} inputType=\"text\" placeholder=\"blue, #4DA6FF, etc.\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"opacity\" value={values.opacity} nullValue={\"1\"} inputType=\"text\" placeholder=\"0(clear) - 1(opaque)\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"importance\" value={values.importance} nullValue={\"0\"} inputType=\"text\" placeholder=\"any integer\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"width\" value={values.width} nullValue={`${radius}`} inputType=\"text\" placeholder=\"any real number\" editMode={editMode} handleChange={handleChange} /><br/>\n            </div>\n          </div>\n          <div className=\"flexCenter\">\n            {editMode ?\n              <><button className=\"buttonSecondary\" onClick={handleCancel}>Cancel</button> &nbsp;\n              <button className=\"buttonSecondary\" onClick={handleSubmitInterval}>Submit</button></>\n            : <><button className=\"buttonSecondary\" onClick={(e) => {e.preventDefault();setEditMode(true)}}>Edit</button> &nbsp;\n              <button className=\"buttonSecondary\" onClick={handleDeleteInterval}>Delete Interval</button></>\n            }\n          </div>\n        </form>\n    break\n    case 'zone':\n      content =\n        <form className=\"container\">\n          <div className=\"container flexRow\">\n            <div className=\"containerLeft textRight textSecondary\">\n              Text: &nbsp;<br/>\n              Time Start: &nbsp;<br/>\n              Time End: &nbsp;<br/>\n              {/*Y Start: &nbsp;<br/>\n              Y End: &nbsp;<br/>*/}\n              Color: &nbsp;<br/>\n              Opacity: &nbsp;<br/>\n              Importance: &nbsp;\n            </div>\n            <div className=\"containerRight\">\n              <EditForm name=\"text\" value={values.text} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"any unicode character\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"timeStart\" value={values.timeStart} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>\n              <EditForm name=\"timeEnd\" value={values.timeEnd} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>\n              {/*<EditForm name=\"yStart\" value={values.yStart} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>\n              <EditForm name=\"yEnd\" value={values.yEnd} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>*/}\n              <EditForm name=\"color\" value={values.color} nullValue={\"black\"} inputType=\"text\" placeholder=\"blue, #4DA6FF, etc.\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"opacity\" value={values.opacity} nullValue={\"1\"} inputType=\"text\" placeholder=\"0(clear) - 1(opaque)\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"importance\" value={values.importance} nullValue={\"0\"} inputType=\"text\" placeholder=\"any integer\" editMode={editMode} handleChange={handleChange} /><br/>\n            </div>\n          </div>\n          <div className=\"flexCenter\">\n            {editMode ?\n              <><button className=\"buttonSecondary\" onClick={handleCancel}>Cancel</button> &nbsp;\n              <button className=\"buttonSecondary\" onClick={handleSubmitZone}>Submit</button></>\n            : <><button className=\"buttonSecondary\" onClick={(e) => {e.preventDefault();setEditMode(true)}}>Edit</button> &nbsp;\n              <button className=\"buttonSecondary\" onClick={handleDeleteZone}>Delete Zone</button></>\n            }\n          </div>\n        </form>\n    break\n    default:\n      content =\n        <form className=\"container\">\n          <div className=\"container flexRow\">\n            <div className=\"containerLeft textRight textSecondary\">\n              Text: &nbsp;<br/>\n              Time: &nbsp;<br/>\n              Y Position: &nbsp;<br/>\n              Color: &nbsp;<br/>\n              Opacity: &nbsp;<br/>\n              Radius: &nbsp;<br/>\n              Importance: &nbsp;<br/>\n            </div>\n            <div className=\"containerRight\">\n              <EditForm name=\"text\" value={values.text} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"any unicode character.\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"time\" value={values.time} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange}/><br/>\n              <EditForm name=\"yPos\" value={values.yPos} nullValue={\"n/a\"} inputType=\"text\" placeholder=\"numbers for now\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"color\" value={values.color} nullValue={\"black\"} inputType=\"text\" placeholder=\"blue, #4DA6FF, etc.\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"opacity\" value={values.opacity} nullValue={\"1\"} inputType=\"text\" placeholder=\"0(clear) - 1(opaque)\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"radius\" value={values.radius} nullValue={`${radius}`} inputType=\"text\" placeholder=\"any real number\" editMode={editMode} handleChange={handleChange} /><br/>\n              <EditForm name=\"importance\" value={values.importance} nullValue={\"0\"} inputType=\"text\" placeholder=\"any integer\" editMode={editMode} handleChange={handleChange} /><br/>\n            </div>\n          </div>\n          <div className=\"flexCenter\">\n            {editMode ?\n              <><button className=\"buttonSecondary\" onClick={handleCancel}>Cancel</button> &nbsp;\n              <button className=\"buttonSecondary\" onClick={handleSubmitInstant}>Submit</button></>\n            : <><button className=\"buttonSecondary\" onClick={(e) => {e.preventDefault();setEditMode(true)}}>Edit</button> &nbsp;\n              <button className=\"buttonSecondary\" onClick={handleDeleteInstant}>Delete Instant</button></>\n            }\n          </div>\n        </form>\n  };\n\n  return (\n    <div className=\"ui absolute\" style={{left: info.position[0] + 'px', top: info.position[1] + 'px'}}>\n      {content}\n    </div>\n  );\n}\n\nexport default InfoBox;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/ExportDataForm.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Layers.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Scrubber.js",["302","303","304"],"import React, { useState, useEffect, useRef } from 'react';\n// import { select, drag, axisBottom, scalePoint } from \"d3\";\n\nfunction Scrubber({activeData, setActiveData, src, setData}) {\n\n  const handleClick = (e) => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    }\n    setData(src.instants[activeData]);\n  }\n\n  // //initialize reference object to pass to svg in React Dom\n  // const svgRef = useRef();\n  //\n  // useEffect(() => {\n  //   const svg = select(svgRef.current);\n  //\n  //   const dragged = drag()\n  //     .on(\"drag\", e => {\n  //       console.log(activeData);\n  //       // if ((e.dx > 0) && (activeData>src.nodes.length-1 )) {\n  //       //   setActiveData(activeData += 1);\n  //       // } else if (activeData<0) {\n  //       //   setActiveData(activeData -= 1);\n  //       // }\n  //       // console.log(activeData);\n  //     });\n  //\n  //   const scale = scalePoint()\n  //     .domain(src.nodes.map((n) => src.nodes.indexOf(n)))\n  //     .range([0, 300]); //todo\n  //\n  //   const axis = axisBottom(scale);\n  //\n  //   svg\n  //     .select(\".scrubber-axis\")\n  //     .style(\"transform\", `translateY(70px)`) //todo\n  //     .call(axis);\n  //\n  //   svg\n  //     .append(\"circle\")\n  //     .attr(\"r\", 5)\n  //     .attr(\"cx\", activeData)\n  //     .attr(\"cy\", 50)\n  //     .call(dragged)\n  //     .on(\"click\", () => {setActiveData(activeData+=1)});\n  //\n  // }, [activeData, src]);\n\n\n  // <svg ref={svgRef} className=\"ui absolute center\">\n  //   <g className=\"scrubber-axis\" />\n  // </svg>\n\n  return (\n    <div className=\"ui absolute center\">\n      <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\n      {activeData}\n      <button id=\"foward\" onClick={handleClick} disabled={activeData===src.instants.length-1}>&gt;</button>\n    </div>\n  );\n}\n\nexport default Scrubber;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/ImportDataForm.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewZoneForm.js",["305","306","307","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322"],"import React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n\n/*\n   UI and function for adding new zones.\n*/\n\nfunction NewZoneForm({zones, updateSrc, setToggle, scales, activeScale}) {\n  const [values, setValues] = useState({\n    text: '',\n    xScale:activeScale[0],\n    yScale:activeScale[1],\n    start:'',\n    end:'',\n    yValue2:'',\n    yStart:'',\n    yEnd:'',\n    color:'',\n    opacity:''\n  });\n\n  const [label, setLabel] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [select, setSelect] = useState(activeScale);\n  //go thru list of scales in ChronoJSON and create a selection entry for each\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return <option value={key} key={i}>{key}</option>\n  });\n  //optional parameters\n  const [yStart, setYStart] = useState(\"\");\n  const [yEnd, setYEnd] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [opacity, setOpacity] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    //checkbox is being weird (value updates 1 render behind), setting its values directly\n    const { value, name } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  const handleSubmit = (e) => {\n    const newZones = {...zones};\n    const lastKey = Object.keys(newZones).pop() ? parseInt(Object.keys(newZones).pop()) : -1;\n\n    //generate new zone\n    newZones[`${lastKey+1}`] = {\n      \"text\": values.text,\n      \"start\": parseFloat(values.start), //cases where start > end?\n      \"end\": parseFloat(values.end),\n      \"scale\": [values.xScale, values.yScale],\n      ...(values.yStart && {\"yStart\": values.yStart}),\n      ...(values.yEnd && {\"yEnd\": values.yEnd}),\n      ...(values.color && {\"color\": values.color}),\n      ...(values.opacity && {\"opacity\": values.opacity})\n    }\n\n    updateSrc(newZones,\"zones\");\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center container\">\n      <label>\n        Label<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"any unicode characters\"\n          name=\"text\"\n          value={values.text}\n          onChange={handleChange}\n          required\n        />\n      </label><br/>\n      <InputFormScale\n        scales={scales.x}\n        label=\"X Scale\"\n        name=\"xScale\"\n        value={values.xScale}\n        onChange={handleChange}\n      /><br/>\n      <InputFormScale\n        scales={scales.y}\n        label=\"Y Scale\"\n        name=\"yScale\"\n        value={values.yScale}\n        onChange={handleChange}\n      /><br/>\n      <label>\n        Time Start<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s, dates, logical operators\"\n          name=\"start\"\n          value={values.start}\n          onChange={handleChange}\n          required\n        />\n      </label><br/>\n      <label>\n        Time End<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s, dates, logical operators\"\n          name=\"end\"\n          value={values.end}\n          onChange={handleChange}\n          required\n        />\n      </label><br/>\n      {/*<label>\n        Y Start\n        <input\n          type=\"text\"\n          name=\"yStart\"\n          placeholder=\"#s, dates, logical operators\"\n          value={values.yStart}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <label>\n        Y End\n        <input\n          type=\"text\"\n          name=\"yEnd\"\n          placeholder=\"#s, dates, logical operators\"\n          value={values.yEnd}\n          onChange={handleChange}\n        />\n      </label><br/>*/}\n      <label>\n        Color\n        <input\n          type=\"text\"\n          name=\"color\"\n          placeholder=\"blue, #4DA6FF, etc.\"\n          value={values.color}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <label>\n        Opacity\n        <input\n          type=\"number\"\n          placeholder=\"0 (transparent) - 1 (opaque)\"\n          name=\"opacity\"\n          value={values.opacity}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <div className=\"flexCenter\">\n        <button className=\"buttonSecondary\" onClick={handleClose}>Cancel</button> &nbsp;\n        <button className=\"buttonSecondary\" onClick={handleSubmit}>Submit</button>\n      </div>\n    </form>\n  )\n};\n\nexport default NewZoneForm;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewInstantForm.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Legend.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Certainty.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Importance.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Connection.js",["323"],"import React, { useState } from 'react';\n\nfunction Connection(props) {\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    /*\n      - error handling: check if target[0] and target[1] exists\n      - find instant w/ id of target[0] and:\n        - If target[1] is:\n          - instant, target[1].id\n          - interval, {\"x\": target.x-source.x, \"y\": mouse pointer, \"scale\":\"smalls\"}\n          - zone, {\"x\": 1622, \"y\": 12, \"scale\":\"smalls\"}\n    */\n\n    if (!props.target[0] || !props.target[0]) {\n      console.log(\"error\")\n      return;\n    }\n\n    const newInstants = [...props.data];\n    const instant = newInstants.find(n => n.id === props.target[0].id);\n    if (props.target[1].x) { //for interval and zone\n      const target = props.target[1]\n      instant.connections = [{\"x\": target.x, \"y\": target.y, \"scale\": target.scale}, 0]\n    } else { //for instants\n      const instant2 = newInstants.find(n => n.id === props.target[1].id);\n      instant.connections = [instant2.id, 0];\n      instant2.connections = [instant.id, 1];\n    }\n    //\n    // if (props.target.start) { //zone\n    //   const newzones = [...props.zones];\n    //   const zone = newzones.find(n => n.id === props.target.id);\n    //   zone.importance = parseFloat(input);\n    //   props.setZones(newZones);\n    //   return;\n    // }\n    //\n\n    //\n    // if (props.target.source) { //link\n    //   const instant = newInstants.find(n => n.id === props.target.source.id);\n    //   instant.intervalWidth = instant.intervalWidth ? instant.intervalWidth*(1+input/2) : props.radius/3*(1+input/2); //if intervalWidth defined, multiply. otherwise, use default\n    // } else { //instant\n    //   const instant = newInstants.find(n => n.id === props.target.id);\n    //   instant.radius = instant.radius ? instant.radius*(1+input/2) : props.radius*(1+input/2); //if radius defined, multiply. otherwise, use default radius\n    // }\n    props.setData(newInstants);\n\n\n  };\n\n  const handleClose = (e) => {\n    props.setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center\" onSubmit={handleSubmit}>\n      <button className=\"right\" onClick={handleClose}>x</button><br/>\n      <p>\n        Connect<br/>\n        <b>{props.target[0]?`${props.target[0].name}(${props.target[0].id})`: \"None\"}</b> {!props.target[2] && \"<\"}<br/>\n        with<br/>\n        <b>{props.target[1]?`${props.target[1].name}(${props.target[1].id})`: \"None\"}</b> {props.target[2]===1 && \"<\"}\n      </p>\n      <input type=\"submit\" value=\"Submit\"/>\n    </form>\n  )\n}\n\nexport default Connection;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/SelectedDisplay.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewScaleForm.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/generateIntervals.js",["324"],"/*\n   generates intervals between all intervaled instants and\n   returns a interval object with interval properties.\n*/\n\nfunction generateIntervals(data) {\n// console.log(data[8])\n  /*\n    expand to standalone paths? bezier curve: https://svg-path-visualizer.netlify.app/bezier-curve/\n    - start: can specify point or enter coordinate values directly (run thru xScale)\n    - control: ???\n    - end: same as start\n    output: M startX,startY C controlX1,controlY1 controlX2,controlY2 endX, endY\n  */\n\n  const intervals = []; //array of all instant intervals\n\n  Object.entries(data).forEach((item) => {\n    const key = item[0];\n    const value = item[1];\n\n    if (!value.target) {\n      //if the instant does not have a target, skip generating interval\n      return\n    } else {\n      value.target.forEach((n) => {\n        const instant = [n, data[n]];\n        if (instant[1]) { //does instant exist?\n          intervals.push({\n            source:item,\n            target:instant,\n            text: value.intervalText,\n            color:value.intervalColor ? value.intervalColor : value.color ? value.color : null, //if not specified, use point color. otherwise, null\n            width:value.intervalWidth,\n            opacity:value.intervalOpacity ? value.intervalOpacity : null,\n            dashed: value.intervalDashed\n          });\n        }\n      });\n    }\n  });\n  return intervals;\n};\n\nexport default generateIntervals;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/deleteInstant.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NewIntervalForm.js",["325","326"],"import React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n\nfunction NewIntervalForm({data, updateSrc, setToggle, scales, activeScale, history, setHistory}) {\n\n  const [values, setValues] = useState({\n    text: '',\n    xValue1:'',\n    yValue1:'',\n    xValue2:'',\n    yValue2:'',\n    xScale:activeScale[0],\n    yScale:activeScale[1],\n    color:'',\n    opacity:'',\n    width:''\n  });\n\n  // const [text, setText] = useState(\"\");\n  // const [xValue1, setXValue1] = useState(\"\");\n  // const [yValue1, setYValue1] = useState(\"\");\n  // const [xValue2, setXValue2] = useState(\"\");\n  // const [yValue2, setYValue2] = useState(\"\");\n  // const [select, setSelect] = useState(activeScale);\n  // // const scalesList = Object.keys(scales).map((key, i) => {\n  // //   return <option value={key} key={i}>{key}</option>\n  // // });\n  // //optional parameters\n  // const [color, setColor] = useState(\"\");\n  // const [opacity, setOpacity] = useState(\"\");\n  // const [width, setWidth] = useState(\"\");\n  // const [dashed, setDashed] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    //checkbox is being weird (value updates 1 render behind), setting its values directly\n    const { value, name } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newData = {...data};\n    const lastKey = Object.keys(newData).pop() ? parseInt(Object.keys(newData).pop()) : -1;\n    const lastInstant = newData[lastKey]; //last instant of data\n\n    const tempX1 = parseFloat(values.xValue1);\n    const tempY1 = values.yValue1 ? parseFloat(values.yValue1) : null; //if y pos specified, convert to float. otherwise, return null\n    const tempX2 = parseFloat(values.xValue2);\n    const tempY2 = values.yValue2 ? parseFloat(values.yValue2) : null;\n\n    //error handling. btw, isNan(null) === false\n    if (isNaN(tempX1) || isNaN(tempY1) || isNaN(tempX2) || isNaN(tempY2)) {\n      alert(\"Make sure all Times and y Positions are numbers!\");\n    } else {\n      //generate first instant\n      newData[`${lastKey+1}`] = {\n        \"text\": \"\",\n        \"x\":tempX1,\n        \"y\": values.yValue1 ? tempY1 : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": [values.xScale, values.yScale],\n        \"target\": [`${lastKey+2}`],\n        ...(values.text && {\"intervalText\": values.text}),\n        ...(values.color && {\"intervalColor\": values.color}),\n        ...(values.width && {\"intervalWidth\": values.width}),\n        ...(values.opacity && {\"intervalOpacity\": values.opacity})\n      };\n      //generate second instant\n      newData[`${lastKey+2}`] = {\n        \"text\": \"\",\n        \"x\":tempX2,\n        \"y\": values.yValue2 ? tempY2 : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": [values.xScale, values.yScale],\n        \"target\": null\n      };\n    };\n\n    updateSrc(newData);\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n/*\n<label>\n  Dashed\n  <input\n    type=\"text\"\n    placeholder=\"i.e: 5\"\n    value={dashed}\n    onChange={handleChange}\n  />\n</label><br/><br/>\n*/\n  return (\n    <form className=\"ui absolute center container\">\n      <label>\n        Label<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"any unicode character\"\n          value={values.text}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <InputFormScale\n        scales={scales.x}\n        label=\"X Scale\"\n        name=\"xSelect\"\n        value={values.xSelect}\n        onChange={handleChange}\n      />\n      <InputFormScale\n        scales={scales.y}\n        label=\"Y Scale\"\n        name=\"ySelect\"\n        value={values.ySelect}\n        onChange={handleChange}\n      />\n      <b>Start:</b><br/>\n      <label>\n        Time<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          name=\"xValue1\"\n          placeholder=\"numbers only\"\n          value={values.xValue1}\n          onChange={handleChange}\n          required\n        />\n      </label><br/>\n      <label>\n        y Position\n        <input\n          type=\"text\"\n          name=\"yValue1\"\n          placeholder=\"#s only (default 0)\"\n          value={values.yValue1}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <b>End:</b><br/>\n      <label>\n        Time<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          name=\"xValue2\"\n          placeholder=\"numbers only\"\n          value={values.xValue2}\n          onChange={handleChange}\n          required\n        />\n      </label><br/>\n      <label>\n        y Position\n        <input\n          type=\"text\"\n          placeholder=\"#s only (default 0)\"\n          name=\"yValue2\"\n          value={values.yValue2}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <b>Properties:</b><br/>\n      <label>\n        Color\n        <input\n          type=\"text\"\n          placeholder=\"blue, #4DA6FF, etc.\"\n          name=\"color\"\n          value={values.color}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <label>\n        Width\n        <input\n          type=\"number\"\n          name=\"width\"\n          placeholder=\"1.67\"\n          value={values.width}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <label>\n        Certainty\n        <input\n          type=\"number\"\n          placeholder=\"0-1\"\n          name=\"opacity\"\n          value={values.opacity}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <div className=\"flexCenter\">\n        <button className=\"buttonSecondary\" onClick={handleClose}>Cancel</button> &nbsp;\n        <button className=\"buttonSecondary\" onClick={handleSubmit}>Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default NewIntervalForm;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditScaleForm.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EditForm.js",["327","328"],"import React, { useState } from 'react';\nimport { ReactComponent as IconEdit } from '../assets/icons/edit.svg';\n\nfunction EditForm(props) {\n\n  return (\n    props.editMode ?\n      <input\n        name={props.name}\n        type={props.inputType}\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={(e) => props.handleChange(e)}\n        required={props.required}\n      />\n    : props.value ?\n      <>{props.value}</>\n    : <span className=\"textSecondary\">{props.nullValue}</span>\n  )\n};\n\nexport default EditForm;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/deleteInterval.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/WelcomeMessage.js",["329"],"import React, { useState } from 'react';\n\nfunction WelcomeMessage({setProj, setFileName, setToggle}) {\n  const [name, setName] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setProj(true);\n    setFileName(name);\n  }\n\n  return (\n    <div className=\"fullHeight container bgSecondary\">\n      <div className=\"flexCenter thirdWidth\">\n        <h1>Hi, welcome to <br/>ChronoVis: Paintbox.</h1>\n        <p className=\"smallTxt\">By Johanna Drucker, developed by Skye Hoffman.</p>\n        <p className=\"smallTxt\">\n          A no-code graphical interface for generating temporal data visualizations,\n          designed by the humanities for the humanities. <a href=\"#\">More info here.</a>\n        </p><br/>\n        <form className=\"container containerStretch flexRow\" onSubmit={handleSubmit}>\n          <input type=\"text\"\n            className=\"flexGrow2\"\n            placeholder=\"insert project name\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n          />&nbsp;&nbsp;&nbsp;\n          <button className=\"buttonPrimary\">Create Project</button>\n        </form><br/>\n        <div className=\"container flexRow\">\n          <button className=\"buttonPrimary\" onClick={(e) => setToggle(\"import\")}>Import Project</button>&nbsp;&nbsp;&nbsp;\n          <button className=\"buttonPrimary\" onClick={(e) => {e.preventDefault(); window.open(\"https://youtu.be/y0sMNCfgH-8\")}}>\n            First Time?\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WelcomeMessage;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/NavBar.js",["330","331","332"],"import React, { useState } from 'react';\nimport { ReactComponent as IconFile } from '../assets/icons/file.svg';\nimport { ReactComponent as IconInstant } from '../assets/icons/instant.svg';\nimport { ReactComponent as IconInterval } from '../assets/icons/interval.svg';\nimport { ReactComponent as IconZone } from '../assets/icons/zone.svg';\nimport { ReactComponent as IconMenu } from '../assets/icons/menu.svg';\nimport { ReactComponent as IconPan } from '../assets/icons/pan.svg';\nimport { ReactComponent as IconScales } from '../assets/icons/scales.svg';\nimport { ReactComponent as IconViews } from '../assets/icons/views.svg';\nimport { ReactComponent as IconConnection } from '../assets/icons/connection1.svg';\nimport { ReactComponent as IconCausation } from '../assets/icons/causation.svg';\nimport { ReactComponent as IconEdit } from '../assets/icons/edit.svg';\nimport EditForm from './EditForm';\n//AKA the navbar, holds all the tools, settings, and whatnot on the top of the page\n\nfunction EditButton({editMode}) {\n  return (\n    <>\n      {editMode?\n        <button className=\"buttonSecondary\">submit</button>\n        : <button className=\"editButton\"><IconEdit className=\"editIcon\"/></button>\n      }\n    </>\n  )\n}\n\nfunction NavBar(props) {\n  // console.log(props.hasScales)\n  const [content, setContent] = useState(null);\n  const [iconTempObj, setIconTempObj] = useState(<IconInterval className=\"icon\" alt=\"interval\"/>);\n  // const [name, setName] = useState(props.fileName); //TODO: add promise?\n  const [editMode, setEditMode] = useState(false);\n\n  const handleClick = (ref, e) => {\n    e ? e.preventDefault(): ref.preventDefault();\n    setContent(ref);\n\n    if (props.toggle && props.toggle===ref) { //if user toggles tool that is already active, deactivate tool\n      props.setToggle(null);\n      setContent(null);\n    } else { //otherwise, activate tool\n      props.setToggle(ref);\n    }\n  }\n\n  // const handleSetName = (e) => {\n  //   e.preventDefault();\n  //   if (editMode) {\n  //     props.setFileName(name);\n  //     setEditMode(false);\n  //   } else {\n  //     setEditMode(true);\n  //   }\n  // }\n\n  //TODO: fix file name not displaying\n  /*\n  {name &&\n    <form className=\"container flexRow flexCenter\" onSubmit={(e) => setEditMode(true?false:true)}>\n      <EditForm name=\"name\" value={props.fileName} nullValue={\"Untitled\"} inputType=\"text\" placeholder=\"insert file name\" editMode={editMode} handleChange={(e) => props.setFileName(e.target.value)} /><br/>\n      <EditButton editMode={editMode}/>\n    </form>\n  }\n  */\n\n  //todo: break up into components\n  return (\n    <>\n      <nav className=\"container flexRow fullWidth containerSpace\">\n        <div className=\"container flexRow containerLeft\">\n          <div className=\"dropdown left\">\n            <button onClick={(e) => handleClick(\"temporalObject\", e)} disabled={!props.hasScales} className={`${!props.hasScales ? \"disabled\" : \"\"}${props.toggle===\"addInstant\" ? \"toolActive\" : \"\"}`} title=\"Temporal Objects\">{iconTempObj}</button>\n            {content===\"temporalObject\" && <ul className=\"dropdown-content\">\n              <li><button onClick={(e) => {handleClick(\"addInterval\", e); setIconTempObj(<IconInterval className=\"icon\" alt=\"Interval\"/>)}} title=\"Interval\"><IconInterval alt=\"Interval\"/>Interval</button></li>\n              <li><button onClick={(e) => {handleClick(\"addInstant\", e); setIconTempObj(<IconInstant className=\"icon\" alt=\"Instant\"/>)}} title=\"Instant\"><IconInstant alt=\"Instant\"/>Instant</button></li>\n              <li><button  onClick={(e) => {handleClick(\"addZone\", e); setIconTempObj(<IconZone className=\"icon\" alt=\"Zone\"/>)}} title=\"Zone\"><IconZone alt=\"Zone\"/>Zone</button></li>\n            </ul>}\n          </div>\n          <div className=\"dropdown left\">\n            <button onClick={(e) => handleClick(\"inflections\", e)} disabled={!props.hasScales} className={!props.hasScales ? \"disabled\" : \"\"} title=\"Inflections\"><IconConnection className=\"icon\" alt=\"Cancelled\"/></button>\n            {content===\"inflections\" && <ul className=\"dropdown-content  \">\n              <li className=\"subheading\">Semantic</li>\n              <li><button onClick={(e) => handleClick(\"importance\", e)}>Importance</button></li>\n              <li><button onClick={(e) => handleClick(\"certainty\", e)}>Certainty</button></li>\n              <li><button onClick={(e) => handleClick(\"cancelled\", e)}>Cancelled</button></li>\n              <li><button onClick={(e) => handleClick(\"foreshadowing\", e)}>Foreshadowing</button></li>\n              <li className=\"subheading\">Syntactic</li>\n              <li><button onClick={(e) => handleClick(\"connection\", e)}>Connection</button></li>\n              <li><button>Causality</button></li>\n            </ul>}\n          </div>\n          <div className=\"dropdown left\">\n            <button onClick={(e) => handleClick(\"scales\", e)} disabled={!props.proj} className={!props.proj ? \"disabled\" : \"\"} title=\"Scales\"><IconScales className=\"icon\" alt=\"Scales\"/></button>\n            {content===\"scales\" && <ul className=\"dropdown-content  \">\n              <li><button onClick={(e) => handleClick(\"editScale\", e)} disabled={!props.hasScales} className={!props.hasScales ? \"disabled\" : \"\"} title=\"Edit Scale\">Edit Scale</button></li>\n              <li><button onClick={(e) => handleClick(\"addScale\", e)} title=\"Create Scale\">Create Scale</button></li>\n              {/*<li><button disabled={!props.hasScales} className={!props.hasScales ? \"disabled\" : \"\"} title=\"Expand Scale\">Expand Scale</button></li>*/}\n            </ul>}\n          </div>\n          <div className=\"dropdown left\">\n            <button className=\"fullWidth\" onClick={(e) => handleClick(\"file\", e)} disabled={!props.proj} className={!props.proj ? \"disabled\" : \"\"} title=\"File\"><IconFile className=\"icon\" alt=\"File\"/></button>\n            {content===\"file\" && <ul className=\"dropdown-content  \">\n              <li className=\"subheading\">Edit</li>\n              <li><button onClick={props.undo}>Undo</button></li>\n              <li><button onClick={(e) => handleClick(\"redo\", e)}>Redo</button></li>\n              <li className=\"subheading\">Document</li>\n              <li><button onClick={(e) => handleClick(\"import\", e)}>Import Data</button></li>\n              <li><button onClick={(e) => handleClick(\"save\", e)}>Save & Export</button></li>\n              <li><button id=\"importImg\">Import Image</button></li>\n              <li><button>Import from Library</button></li>\n              <li><button>New Project</button></li>\n            </ul>}\n          </div>\n        </div>\n        {props.proj &&\n          <form className=\"container flexRow flexCenter\" onSubmit={(e) => {e.preventDefault(); setEditMode(editMode?false:true)}}>\n            <EditForm name=\"name\" value={props.fileName} nullValue={\"Untitled\"} inputType=\"text\" placeholder=\"insert file name\" editMode={editMode} handleChange={(e) => props.setFileName(e.target.value)} required={true}/><br/>\n            <EditButton editMode={editMode}/>\n          </form>\n        }\n        <div className=\"right container flexRow containerRight\">\n          <button className=\"right\" onClick={(e) => handleClick(\"pan\", e)} disabled={!props.hasScales} className={!props.hasScales ? \"disabled\" : \"\"} title=\"Pan\"><IconPan className=\"icon\" alt=\"Pan\"/></button>\n          <div className=\"dropdown right\">\n            <button onClick={(e) => handleClick(\"views\", e)} disabled={!props.hasScales} className={!props.hasScales ? \"disabled\" : \"\"} title=\"Views\"><IconViews className=\"icon\" alt=\"Views\"/></button>\n            {content===\"views\" && <ul className=\"dropdown-content rightPos\">\n              <li className=\"subheading\">Graphics</li>\n              <li><button>Working Data</button></li>\n              <li><button onClick={(e) => handleClick(\"scrubber\", e)}>Scrubber</button></li>\n              <li><button>Emperical/Relative Scales</button></li>\n              <li><button onClick={(e) => handleClick(\"layers\", e)}>Layers</button></li>\n              <li className=\"subheading\">UI</li>\n              <li><button onClick={(e) => handleClick(\"showLabel\", e)}>{props.showLabel ? \"Show IDs\" : \"Show Labels\"}</button></li>\n              <li><button onClick={(e) => handleClick(\"legend\", e)}>Legend</button></li>\n            </ul>}\n          </div>\n          <div className=\"dropdown right\">\n            <button onClick={(e) => handleClick(\"menu\", e)} title=\"Menu\"><IconMenu className=\"icon\" alt=\"Menu\"/></button>\n            {content===\"menu\" && <ul className=\"dropdown-content rightPos\">\n              <li className=\"subheading\">Settings</li>\n              <li><button id=\"acessibility\">Accessibility</button></li>\n              <li><button id=\"theme\">Theme</button></li>\n              <li className=\"subheading\">Chrono Vis</li>\n              <li><button id=\"about\">About</button></li>\n              <li><button id=\"documentation\">Documentation</button></li>\n            </ul>}\n          </div>\n        </div>\n      </nav>\n      {/*props.toggle && <div className=\"debugging\">Currently active: {props.toggle}</div>*/}\n    </>\n  );\n}\n\nexport default NavBar;\n","/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Hands.js",["333"],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/EmptyProj.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/Graphic_optimized.js",["334","335","336","337","338","339","340","341"],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InputFormText.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InputFormNum.js",[],"/Users/skye/Desktop/Portfolio/2021/chronologies/client/src/components/InputFormScale.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/index.js",[],["342","343"],"/Users/skye/Desktop/Portfolio/chronovis/src/App.js",["344","345","346","347","348","349","350","351","352","353","354"],"/Users/skye/Desktop/Portfolio/chronovis/src/reportWebVitals.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/NewInstantForm.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Graphic.js",["355","356","357","358","359","360","361","362","363"],"import React, { useState, useEffect, useRef } from 'react';\nimport { select, scaleLinear, scaleOrdinal, axisBottom, axisLeft, linkHorizontal, format, drag, zoom, min, max, symbol, symbols } from \"d3\";\nimport useResizeObserver from \"./useResizeObserver\";\nimport generateIntervals from \"./generateIntervals\";\n\nfunction Graphic({\n  data, setData,\n  updateSrc,\n  activeLayer,\n  zones, setZones,\n  radius,\n  info, setInfo,\n  setInflectTarget,\n  showLabel,\n  toggle, setToggle,\n  scales, setScales,\n  syntacticOrder, setSyntacticOrder,\n  activeScale\n}) {\n\n  //all data is passed down from and synced to App.js\n  const activeData = Object.entries(data); //convert json to array for faster processing\n  const activeZones = Object.entries(zones);\n  //TODO: layers\n  // const activeData = activeLayer ? Object.entries(data).filter(([k,v]) => v.layer === activeLayer) : arrayData;\n\n  //convert scale object to array for faster processing\n\n\n  //is logical operators active?\n  const logic = data.length? isNaN(data[0].x): null; //TODO: refine logical operators\n\n  //initialize reference object to pass to svg in React Dom\n  const svgRef = useRef();\n  //svg wrapped in div bc otherwise resize observer callback won't work\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n  const [currentZoomState, setCurrentZoomState] = useState();\n\n  //hash map of y scales\n  const yScales = {};\n\n  //init scales\n  useEffect(() => {\n    if (!dimensions) return;\n    const yTicks = [];\n\n    for (let v of activeData) {\n      yTicks.push(activeData.y);\n    }\n\n    Object.entries(scales.y).forEach(([k, v]) => {\n      yScales[k]= {\n        scale: scaleLinear()\n        .domain([0, dimensions.height])\n        .range([v.min, v.max]),\n        drag: scaleLinear()\n        .domain([-dimensions.height, dimensions.height])\n        .range([-(v.max-v.min), (v.max-v.min)]),\n        ticks: [...new Set(yTicks)]\n      }\n    });\n  }, [dimensions, scales, currentZoomState]);\n\n  //initialize intervals between instants\n  const intervals = generateIntervals(data); //TODO: write updateIntervals function\n\n  //initialize variables\n  /*\n  var xMin = min(Object.entries(data).map(([key, {x}]) => logic ? logicScale(x) : x));\n  var xMax = max(Object.entries(data).map(([key, {x}]) => logic ? logicScale(x) : x));\n  var yMin = min(Object.entries(data).map(([key, {y}]) => y));\n  var yMax = max(Object.entries(data).map(([key, {y}]) => y));\n  */\n\n  //all d3 shennanigans goes in this hook. called initially and on every data change\n  useEffect(() => {\n    const svg = select(svgRef.current); //\"svg\" is the current version of svgRef data\n    //prevents crashing when useResizeObserver returns null before svg is rendered\n    if (!dimensions) return;\n    //removes svgs added using append()\n    svg\n      .selectAll(\".remove\")\n      .remove();\n\n    //rounding for data inputted thru paintbox interface\n    function round(value, range) {\n      const precision = Math.log10(range)<1 ? -(Math.floor(Math.log10(range)-1)) : 0;\n      return Math.round(value*Math.pow(10, precision))/ Math.pow(10, precision)\n    }\n\n\n    //---scales---//\n\n    //if time matches logical operator keyword, translate into index values, then map\n    const logicScale = scaleOrdinal([\"before\", \"now\", \"after\"], [-1, 0, 1]).unknown(0);\n\n    const breakpoint = 5;\n\n\n    const xMin = min(activeData.map(([key, {x}]) => logic ? logicScale(x) : x));\n    const xMax = max(activeData.map(([key, {x}]) => logic ? logicScale(x) : x));\n    // const yMin = min(Object.entries(data).map(([key, {y}]) => y));\n    // const yMax = max(Object.entries(data).map(([key, {y}]) => y));\n    const yTicks = activeData.map(([,{y}]) => y);\n    const yMin = scales.y[activeScale[1]].min;\n    const yMax = scales.y[activeScale[1]].max;\n    const rangeX = xMax-xMin; //0 is minX, 1 is maxX (reference findMinMax)\n    const rangeY = yMax-yMin;\n\n\n    /*\n    - Allow users to specify scale. x&y min max and units label\n    - for each scale, generateScale()\n    */\n\n    // function generateScales(currentScale) { //TODO: turn into dedicated scaleDrag\n    //\n    //   const xInverse = scaleLinear()\n    //     .domain([0, dimensions.width])\n    //     .range([currentScale.min, currentScale.max]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n    //   const xDrag = scaleLinear()\n    //     .domain([-dimensions.width, dimensions.width])\n    //     .range([-(currentScale.domain()[1]-currentScale.domain()[0]), (currentScale.domain()[1]-currentScale.domain()[0])]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n    //   const yInverse = scaleLinear()\n    //     .domain([-dimensions.height, dimensions.height])\n    //     .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5])\n    //\n    //\n    //   return {\n    //     xInverse, xDrag, yInverse\n    //   };\n    // }\n    const xInverse = (currentScale) => scaleLinear()\n      .domain([0, dimensions.width])\n      .range([currentScale.min, currentScale.max]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n    const xDrag = (currentScale) => scaleLinear()\n      .domain([-dimensions.width, dimensions.width])\n      .range([-(currentScale.domain()[1]-currentScale.domain()[0]), (currentScale.domain()[1]-currentScale.domain()[0])]) //maxRangeX-minRangeX gives section of x values displayed onscreen\n    // const yInverse = scaleLinear()\n    //   .domain([-dimensions.height, dimensions.height])\n    //   .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5])\n\n\n    //scales values to screen pixels\n    /*\n    {\n      biggie: {\n        ...\n        scale: generateScale()\n      }\n      ...\n    }\n    */\n\n    /*\n    xScale =\n    {\n\n  }\n    */\n\n\n    //TODO: fromEntries & entries not compatible with some older browsers\n    const xScales = Object.fromEntries( //for every scale in scales data, generate an xScale\n      Object.entries(scales.x).map(([key, thisScale]) => [\n        key,\n        {\n          scale: scaleLinear() //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n            .domain([thisScale.min, thisScale.max])\n            .range([0, dimensions.width]),\n          noBeginning: thisScale.min-10,\n          noEnd: thisScale.max+10,\n          hasSegments: thisScale.segments.length?true:false,\n          hideLabel: thisScale.hideLabel,\n          yPos: thisScale.yPos,\n          label: `${key} (${thisScale.units})`,\n          tickValues: thisScale.tickValues?thisScale.tickValues:null,\n          scaleInverse: scaleLinear() //for NewInstantForm\n            .domain([0, dimensions.width])\n            .range([thisScale.min, thisScale.max])\n        }\n      ])\n    );\n\n\n    const xSegments = () => {\n      const segments = [];\n      Object.keys(scales.x).forEach((key, i) => {\n        const thisScale = scales.x[key];\n        // const segments = [];\n        if (!thisScale.segments.length) {\n          return;\n        }\n        thisScale.segments.map(n => {\n          const min = n.min?n.min:thisScale.min; //if segment contains a min, set that as min. otherwise, set scale min as min.\n          const max = n.max?n.max:thisScale.max;\n          // console.log(xScales[i].scale(min));\n          segments.push({\n            scale: key,\n            yPos: thisScale.yPos,\n            proportion: (max-min)/(thisScale.max-thisScale.min),\n            segment: scaleLinear()\n            .domain([min, max])\n            .range([xScales[key].scale(min), xScales[key].scale(max)])\n          })\n        })\n      });\n      return segments;\n    }\n\n\n    /*\n      xScales(generateScales(scaleLinear(scale)))\n      - take xScale and rescale according to transformations (newXScale)\n      - update each array entry's domain with that of newXScale\n    */\n    //if there is a zoom transform, override each xScales.scale with adjusted scale\n    if (currentZoomState) {\n      Object.entries(xScales).forEach(([key,thisScale]) => {\n        const newXScale = currentZoomState.rescaleX(thisScale.scale); //zoom state comes w methods for transformations\n        const newMin = newXScale.domain()[0]\n        const newMax = newXScale.domain()[1];\n\n        //applies zoom transformations to scale + scaleInverse\n        xScales[key].scale = newXScale;\n      });\n\n\n    };\n    // const xScale = scaleLinear()\n    //   .domain([xMin, xMax]) //scaleLinear takes domain (data values) & maps onto range (screen pixel values)\n    //   .range([0, dimensions.width]);\n    const yScale = scaleLinear()\n      //if difference in y vaules greater than 5, resize to min and max\n      // .domain((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint])\n      .domain([yMin, yMax])\n      .range([dimensions.height,0]);\n    //inverse scales for drag behavior\n    // const xScaleInverse = scaleLinear()\n    //   .domain([-dimensions.width, dimensions.width])\n    //   .range([-rangeX, rangeX]); //maxRangeX-minRangeX gives section of x values displayed onscreen\n    const yScaleInverse = scaleLinear()\n      .domain([0, dimensions.height])\n      .range([yMin, yMax])\n      // .range((rangeY>breakpoint) ? [yMin, yMax] : [yMin-breakpoint, yMax+breakpoint]);\n    const yScaleInverseDrag = scaleLinear()\n      .domain([dimensions.height, -dimensions.height])\n      .range([-rangeY, rangeY])\n      // .range((rangeY>breakpoint) ? [-rangeY, rangeY] : [-breakpoint*5, breakpoint*5]);\n\n\n\n\n\n\n    //---draw zones---//\n    if (activeZones.length) {\n      svg\n      .selectAll(\".zones\")\n      .data(activeZones)\n      .join(\"rect\")\n      .attr(\"class\", \"zones\")\n      .attr(\"x\", ([, v]) => xScales[v.scale[0]].scale(v.start))\n      // .attr(\"x\", n => generateScales(scales[n.scale]).x(n.start))\n      .attr(\"y\", ([, v]) => yScale(yMax))\n      // .attr(\"y\", ([, v]) => v.yStart ? yScale(v.yStart) : yMin-10) //TODO: if no yStart, minimum y value\n      .attr(\"width\", ([, v]) => xScales[v.scale[0]].scale(v.end) - xScales[v.scale[0]].scale(v.start))\n      .attr(\"height\", ([, v]) => {\n        return (yScale(yMin))\n        // if (v.yStart & v.yEnd) {\n        //   return (yScale(v.yStart)-yScale(v.yEnd))\n        // } else if (v.yStart) {\n        //   return (yScale(v.yStart)-yScale(yMax-10))\n        // } else {\n        //   return (yScale(yMax-10)) //TODO: if no yStart, minimum y value\n        //   // return (yScale(minMax[3])-yScale(minMax[2]))\n        // }\n      })\n      .attr(\"opacity\", ([k, v]) => v.opacity ? v.opacity : 0.5)\n      .attr(\"fill\", ([k, v]) => v.color ? v.color : \"#999\")\n      .attr(\"stroke\", \"black\") //TODO: stroke be different colors\n      .attr(\"stroke-width\", ([k, v]) => v.importance ? v.importance*2 : 0)\n      .on(\"click\", (e, target) => {\n        if (toggle===\"certainty\" || toggle===\"importance\") { //pulls up inflection menu\n          setInflectTarget(target);\n        } else { //displays zone properties when clicked\n          setInfo(null); //clear InfoBox\n          setInfo({position: [e.x, e.y], target: target, type: \"zone\"});  //TODO: set info to null when clicking same zone again\n        }\n        e.stopPropagation();\n      });\n    }\n\n    //---draw bottom axis---//\n\n    xSegments().forEach(n => {\n      //TODO: push all the axis ticks() values into an array\n      // [...new Set(segments)]\n      //draw from there\n      const segment = axisBottom(n.segment)\n      // .ticks(n.proportion<.33?5:null, \"f\");\n      .ticks(null, \"f\")\n      .tickSize(-dimensions.height); //TODO\n\n      svg\n        .append(\"g\")\n        .attr(\"class\", \"remove\")\n        .style(\"transform\", `translateY(${dimensions.height*n.yPos}px)`)\n        .call(segment)\n        .raise()\n        .call(g => g.select(\".domain\") //removes solid black axis bar\n          .remove())\n        .call(g => g.selectAll(\".tick line\") //styles individual ticks\n          .attr(\"stroke-opacity\", 0.25))\n        .call(g => g.selectAll(\".tick text\")\n          .attr(\"y\", 10)\n          .attr(\"opacity\", (d, i) => { //TODO: remove instead of setting opacity to 0\n            if ((n.proportion<.25)&&(i%3)) { //less than 1/4, label every 3 ticks\n              return 0;\n            } else if ((n.proportion<.33)&&(i%2)) { //less than 1/3, label every other tick\n              return 0;\n            } else {\n              return 0.5\n            }\n          })\n        );\n    });\n\n    Object.entries(xScales).forEach(([key,thisScale]) => {\n      const xAxis = axisBottom(thisScale.scale)\n      .tickValues(thisScale.scale.ticks().concat(scales.x[key].min, scales.x[key].max)) //pass in autogenerated tick values + min and max values\n      .tickFormat(format(''))\n      .tickSize(-dimensions.height);\n      // console.log(thisScale.scale.ticks())\n\n      if (!thisScale.hasSegments) {\n        svg\n          .append(\"g\")\n          .attr(\"class\", \"remove\")\n          .style(\"transform\", `translateY(${dimensions.height*thisScale.yPos}px)`)\n          .call(xAxis)\n          .raise()\n          .call(g => g.select(\".domain\") //removes solid black axis bar\n            .remove())\n          .call(g => g.selectAll(\".tick line\") //styles individual ticks\n            .attr(\"stroke-opacity\", 0.25))\n          .call(g => g.selectAll(\".tick text\")\n            .attr(\"y\", 10) //TODO: dynamic tick text spacing for accessibility\n            .attr(\"opacity\", 0.5));\n      }\n      if (!thisScale.hideUnits) {\n        svg\n          .append(\"text\")\n          .text(thisScale.label)\n          .attr(\"class\", \"axisLabel smallTxt remove\")\n          .attr(\"x\", dimensions.width/2)\n          .attr(\"y\", dimensions.height*(thisScale.yPos+.07))\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"opacity\", 0.5);\n        }\n      }\n\n    );\n\n    //--draw vertical axis--//\n\n    const yAxis = axisLeft(yScale)\n    .tickValues([...new Set(yTicks), scales.y[activeScale[1]].min, scales.y[activeScale[1]].max]) //reg mode\n    .tickFormat(format(''))\n\n    svg\n      .append(\"g\")\n      .attr(\"class\", \"remove\")\n      // .style(\"transform\", `translateY(${dimensions.height*thisScale.yPos}px)`)\n      .call(yAxis)\n      .raise()\n      .call(g => g.select(\".domain\") //removes solid black axis bar\n        .remove())\n      .call(g => g.selectAll(\".tick line\") //styles individual ticks\n        .attr(\"stroke-opacity\", 0.5))\n      .call(g => g.selectAll(\".tick text\")\n        .attr(\"y\", 10) //TODO: dynamic tick text spacing for accessibility\n        .attr(\"opacity\", 0.5));\n\n    if (!scales.y[activeScale[1]].hideLabels) {\n      svg\n        .append(\"text\")\n        .text(`${activeScale[1]} (${scales.y[activeScale[1]].units})`)\n        .attr(\"class\", \"axisLabel smallTxt remove\")\n        // .attr(\"x\", dimensions.width/2)\n        // .attr(\"y\", dimensions.height/2)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"transform\", `translate(-30,${dimensions.height/2})rotate(-90)`)\n        .attr(\"opacity\", 0.5);\n    }\n\n    //--drag behavior--//\n    const dragged = drag()\n      // .on(\"start\", e => {\n      //   select(this).attr(\"stroke\", \"black\");\n      // })\n      .on(\"drag\", e => {\n        //TODO: extract precision function to round new pos\n        const dx = xDrag(xScales[e.subject[1].scale[0]].scale)(e.dx);\n        // const dx = xScales.scaleInverse\n        const dy = yScaleInverseDrag(e.dy);\n        const newInstants = {...data}; //always make a copy when updating array\n\n        //find array element in data with matching ID and set new x y coordinates\n        newInstants[e.subject[0]].x += dx;\n        newInstants[e.subject[0]].y += dy;\n\n        setData(newInstants);\n      }) //TODO: unify onEnd and onClick\n      .on(\"end\", e => {\n        console.log(\"end\");\n      });\n\n    if (Object.entries(data).length) {\n      //---draw intervals---//\n      const intervaler = linkHorizontal()\n        .source(interval => interval.source[1])\n        .target(interval => interval.target[1])\n        // .x(n => generateScales(scales[n.scale]).x(logic ? logicScale(n.x) : n.x))\n        .x(v => {\n            if (!isNaN(v.x)) {\n              return xScales[v.scale[0]].scale(v.x)\n            } else if (v.x===\"noEnd\") {\n              return xScales[v.scale[0]].noEnd\n            } else if (v.x===\"noBeginning\") {\n              return xScales[v.scale[0]].noBeginning\n            }\n        })\n        .y(v => yScale(v.y));\n\n      svg\n        .selectAll(\".interval\")\n        .data(intervals)\n        .join(\"path\")\n        .raise()\n        .attr(\"class\", \"interval pointer\")\n        .attr(\"d\", intervaler)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", n => n.color? n.color : \"black\")\n        .attr(\"stroke-width\", n => n.width ? n.width : radius)\n        .attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1)\n        .attr(\"stroke-dasharray\", n => n.dashed ? n.dashed : null)\n        .on(\"click\", (e, target) => {\n          if (toggle===\"connection\") {\n            const newOrder = [...syntacticOrder];\n            if (newOrder[2]===0) { //set 2nd selection\n              newOrder[1] = {x:xInverse(scales.x[activeScale[0]])(e.layerX), y:yScaleInverse(e.layerY), scale:activeScale}; //scale TODO\n              newOrder[2] = 1;\n            } else { //set 1st selection\n              newOrder[0] = {x:xInverse(scales.x[activeScale[0]])(e.layerX), y:yScaleInverse(e.layerY), scale:activeScale};\n              newOrder[2] = 0;\n            }\n            setSyntacticOrder(newOrder);\n          }\n          //else if (toggle===\"foreshadowing\") {\n          //   if (!target.target) { //if target is an endpoint, indeterminate end\n          //\n          //\n          //   } else { //otherwise, change mouse to no symbol\n          //\n          //   }\n          //   //option to adjust gradient eventually\n          // } else\n          else if (toggle===\"certainty\" || toggle===\"importance\") {\n            setInflectTarget(target);\n          } else {\n            setInfo(null); //clear InfoBox\n            setInfo({position: [e.x, e.y], target: target, type: \"interval\"}); //displays interval properties when clicked\n          }\n          e.stopPropagation();\n        });\n\n\n\n      //---draw instants---//\n      svg\n        .selectAll(\".instant\")\n        // .data(activeData.filter(d => !d.foreshadowing && !d.cancelled))\n        .data(activeData)\n        .join(\"circle\")\n        .raise()\n        .attr(\"class\", \"instant pointer\")\n        .attr(\"r\", ([,v]) => v.radius? v.radius : radius) //TODO: custom radius accessibility\n        .attr(\"fill\", ([,v]) => v.color ? v.color : \"black\") //if it has a color other than black, use that\n        .attr(\"opacity\", ([,v]) => v.opacity ? v.opacity : 1)\n        // .attr(\"cx\", d => generateScales(scales[d.scale]).x(logic ? logicScale(d.x) : d.x))\n        .attr(\"cx\", ([,v]) => {\n          if (!isNaN(v.x)) {\n            return xScales[v.scale[0]].scale(v.x)\n          } else if (v.x===\"noBeginning\"){\n            return xScales[v.scale[0]].noBeginning\n          } else if (v.x===\"noEnd\") {\n            return xScales[v.scale[0]].noEnd\n          }\n        }) //scale x coordinate based on xScale defined in instant's scale property\n        .attr(\"cy\", ([,v]) => yScale(v.y))\n        .call(dragged)\n        .on(\"click\", (e, target) => {\n          switch (toggle) {\n            case \"cancelled\":\n              const newData = {...data};\n              newData[target[0]].cancelled = true;\n              // console.log(newData[target[0]]);\n              updateSrc(newData);\n              break;\n            case \"connection\":\n              const newOrder = [...syntacticOrder];\n              if (newOrder[2]===0) { //set 2nd selection\n                newOrder[1] = target;\n                newOrder[2] = 1;\n              } else { //set 1st selection\n                newOrder[0] = target;\n                newOrder[2] = 0;\n              }\n              setSyntacticOrder(newOrder);\n              break;\n            case \"foreshadowing\":\n              if (!target.target) { //if target is an endpoint, indeterminate end\n                const newInstants = [...data];\n                const instant = newInstants.find(n => n.id === target.id);\n                instant.foreshadowing = true;\n                setData(newInstants);\n              } else { //otherwise, change mouse to no symbol\n                console.log(\"forbidden\");\n              }\n              break;\n            case \"certainty\":\n              setInflectTarget(target);\n              break;\n            case \"importance\":\n              setInflectTarget(target);\n              break;\n            default:\n              setInfo(null); //clear InfoBox\n              setInfo({position: [e.x, e.y], target: target}); //displays instant properties when clicked\n          }\n          // if (toggle===\"cancelled\") {\n          //   const newInstants = [...data];\n          //   const instant = newInstants.find(n => n.id === target.id);\n          //   instant.cancelled = true;\n          //   setData(newInstants);\n          // } else if (){\n          //\n          // } else if (toggle===\"connection\") {\n          //   const newOrder = [...syntacticOrder];\n          //   if (newOrder[2]===0) { //set 2nd selection\n          //     newOrder[1] = target;\n          //     newOrder[2] = 1;\n          //   } else { //set 1st selection\n          //     newOrder[0] = target;\n          //     newOrder[2] = 0;\n          //   }\n          //   setSyntacticOrder(newOrder);\n          // } else if (toggle===\"foreshadowing\") { //todo: adjust gradient\n          //   if (!target.target) { //if target is an endpoint, indeterminate end\n          //     const newInstants = [...data];\n          //     const instant = newInstants.find(n => n.id === target.id);\n          //     instant.foreshadowing = true;\n          //     setData(newInstants);\n          //   } else { //otherwise, change mouse to no symbol\n          //     console.log(\"forbidden\");\n          //   }\n          // } else if (toggle===\"certainty\" || toggle===\"importance\"){\n          //   setInflectTarget(target);\n          // } else {\n          //   setInfo({position: [e.x, e.y], target: target}); //displays instant properties when clicked\n          // }\n          e.stopPropagation(); //stops deselect when bg is clicked\n        });\n\n      /*//---draw inflections---//\n\n      //--draw connetion inflection--//\n      //circle around instant\n      svg\n        .selectAll(\".connections\")\n        .data(activeData.filter(d => d.connections))\n        .join(\"circle\")\n        .raise()\n        .attr(\"class\", \"connections pointer\")\n        .attr(\"r\", n => n.radius? n.radius*1.5 : radius*2) //TODO: custom radius accessibility\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"black\")\n        .attr(\"stroke-dasharray\", \"3\")\n        // .attr(\"opacity\", d => d.opacity ? d.opacity : 1)\n        .attr(\"cx\", d => xScales[d.scale].scale(d.x)) //scale x coordinate based on xScale defined in instant's scale property\n        .attr(\"cy\", d => yScale(d.y));\n\n      //link connecting circles\n      const ctLinker = linkHorizontal()\n        .source(instant => data.find(x => x.id === instant.id))\n        .target(instant => typeof(instant.connections[0])===\"object\" ? instant.connections[0] : data.find(x => x.id === instant.connections[0]))\n        // .target(() => {\n        //   //layerX, layerY\n        //   const y = yScaleInverse(499);\n        //   const x = xScales.find(n => n.text === \"biggie\").scaleInverse(778)\n        //   return {x: x, y: y}\n        // })\n        // .target(instant => data.find(x => x.id === instant.connections[0]))\n        .x(d => d.scale ? xScales[d.scale].scale(d.x) : d.x)\n        .y(d => d.scale ? yScale(d.y) : d.y);\n      svg\n        .selectAll(\".connectionLinks\")\n        .data(activeData.filter(n => n.connections && !n.connections[1])) //link starts from 1st one\n        .join(\"path\")\n        .raise()\n        .attr(\"class\", \"connectionLinks pointer\")\n        .attr(\"d\", ctLinker)\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke\", \"black\")\n        // .attr(\"stroke\", n => n.color? n.color : \"black\")\n        // .attr(\"stroke-opacity\", n => n.opacity ? n.opacity : 1)\n        .attr(\"stroke-dasharray\", \"3\")\n*/\n      //initialize custom symbols\n      const cancelledSymbol = {\n        draw: (context, size) => {\n          let s = Math.sqrt(size)/2;\n              context.moveTo(s,0);\n              context.lineTo(s*2,s);\n              context.lineTo(s,s*2);\n              context.lineTo(0,s);\n              context.lineTo(-s,s*2);\n              context.lineTo(-s*2,s);\n              context.lineTo(-s,0);\n              context.lineTo(-s*2,-s);\n              context.lineTo(-s,-s*2);\n              context.lineTo(0,-s);\n              context.lineTo(s,-s*2);\n              context.lineTo(s*2,-s);\n              context.closePath();\n        }\n      };\n      /*\n      //foreshadowing symbol\n      const fsSymbol = {\n        draw: (context, size) => {\n          let s = size;\n              context.moveTo(0,0);\n              context.lineTo(s*2,s/2);\n              context.lineTo(s*2,-s/2);\n              context.closePath();\n        }\n      };\n      //foreshadowing gradient\n      var fsg = svg.append(\"defs\").append(\"linearGradient\")\n      .attr(\"id\", \"fsgradient\")//id of the gradient\n      .attr(\"x1\", \"0%\")\n      .attr(\"x2\", \"100%\") //since its a horizontal linear gradient\n      .attr(\"y1\", \"0%\")\n      .attr(\"y2\", \"0%\");\n\n      fsg.append(\"stop\")\n      .attr(\"offset\", \"0%\")\n      .style(\"stop-color\", \"black\")//start in black. TODO: different color foreshadowing\n      .style(\"stop-opacity\", 1);\n\n      fsg.append(\"stop\")\n      .attr(\"offset\", \"100%\")\n      .style(\"stop-color\", \"black\")//end in transparent\n      .style(\"stop-opacity\", 0);\n*/\n      //---draw symbols---//\n      //TODO: doesn't display if cancelled is true from the start\n      // .attr(\"cx\", ([,v]) => xScales[v.scale[0]].scale(v.x)) //scale x coordinate based on xScale defined in instant's scale property\n      // .attr(\"cy\", ([,v]) => yScale(v.y))\n      svg\n        .selectAll(\".cancelled\")\n        .data(activeData.filter(([,v]) => v.cancelled))\n        .join(\"path\")\n        .raise()\n        .attr(\"class\", \"cancelled pointer\")\n        .attr(\"d\", symbol(cancelledSymbol, radius*radius*5))\n        .attr(\"fill\", ([,v]) => v.color ? v.color : \"black\") //if it has a color other than black, use that\n        .attr(\"transform\", ([,v]) => `translate(${xScales[v.scale[0]].scale(v.x)}, ${yScale(v.y)})`)\n        .on(\"click\", (e, target) => {\n          if (toggle===\"cancelled\") {\n            const newData = {...data};\n            newData[target[0]].cancelled = false;\n            updateSrc(newData);\n          } else {\n            setInfo({position: [e.x, e.y], target: target}); //displays instant properties when clicked\n          }\n          e.stopPropagation();\n        });\n/*\n      //---draw foreshadowing---//\n      svg\n        .selectAll(\".foreshadowing\")\n        .data(activeData.filter(d => d.foreshadowing))\n        .join(\"path\")\n        .raise()\n        .attr(\"class\", \"foreshadowing pointer\")\n        .attr(\"d\", symbol(fsSymbol, radius*radius*5))\n        .style(\"fill\", \"url(#fsgradient)\")\n        .attr(\"transform\", d => `translate(${xScales[d.scale].scale(d.x)}, ${yScale(d.y)})`)\n        .on(\"click\", (e, target) => {\n          if (toggle===\"foreshadowing\") {\n            const newInstants = [...data];\n            const instant = newInstants.find(n => n.id === target.id);\n            delete instant.foreshadowing;\n            setData(newInstants);\n          } else {\n            setInfo({position: [e.x, e.y], target: target}); //displays instant properties when clicked\n          }\n          e.stopPropagation();\n        });\n*/\n      //---draw labels---//\n      // svg\n      //   .selectAll(\".zoneLabel\")\n      //   .data(zones)\n      //   .join(\"text\")\n      //   .attr(\"class\", \"zoneLabel\")\n      //   .text(v => v.text)\n      //   .attr(\"x\", v => xScales[v.scale].scale(v.start))\n      //   .attr(\"y\", v => yScale(v.yStart?v.yStart:yMin+5))\n      //   .attr(\"text-anchor\", \"middle\");\n\n      svg\n        .selectAll(\".label\")\n        .data(activeData.filter(([,v]) => !isNaN(v.x)))\n        .join(\"text\")\n        .attr(\"class\", \"label\")\n        .text(([k,v]) => showLabel ? v.text : v.id)\n        .attr(\"x\", ([k,v]) => xScales[v.scale[0]].scale(v.x))\n        .attr(\"y\", ([k,v]) => yScale(v.y-0.05*rangeY)) //vertical offset. see scales\n        .attr(\"text-anchor\", \"middle\");\n        // .attr(\"font-size\", fontSize);\n\n      svg\n        .selectAll(\".intervalLabel\")\n        .data(intervals)\n        .join(\"text\")\n        .attr(\"class\", \"intervalLabel\")\n        .text(v => v.text)\n        .attr(\"x\", v => {\n          const source=v.source[1];\n          const target=v.target[1];\n          if (!isNaN(source.x) && !isNaN( target.x)) {\n            //scale values, then average them\n            return (xScales[source.scale[0]].scale(source.x)+xScales[target.scale[0]].scale(target.x))/2\n          } else if (isNaN(source.x)) {\n            const s = source.x===\"noBeginning\"?xScales[source.scale[0]].noBeginning:xScales[source.scale[0]].noEnd\n            return (s+xScales[target.scale[0]].scale(target.x))/2\n          } else if (isNaN(target.x)) {\n            const s = target.x===\"noBeginning\"?xScales[target.scale[0]].noBeginning:xScales[target.scale[0]].noEnd\n            return (s+xScales[source.scale[0]].scale(source.x))/2\n          }\n        })\n        .attr(\"y\", v => yScale(Math.min(v.source[1].y, v.target[1].y)-0.05*rangeY)) //.6 below lowest y, otherwise 1/5 of breakpoint\n        .attr(\"text-anchor\", \"middle\");\n\n    }\n\n\n\n    //---zoom---//\n    const zoomBehavior = zoom()\n      .scaleExtent([1, 5]) //can zoom 2x smaller and 5x bigger\n      .translateExtent([[-50, 0], [dimensions.width+50, dimensions.height]]) //limits how far graph can pan\n      .on(\"zoom\", e => {\n        const zoomState = e.transform; //returns zoom transformations as an object\n        setCurrentZoomState(zoomState);\n      });\n\n    //regular clicking\n    svg.on(\"click\", (e) => {\n      if (toggle===\"addInstant\") {\n        /*\n        if range of zoom > 10, Math.round(x)\n        if range of zoom <= 10 (floor: 10^0, ceiling: 10^1), use tenths (/10 -> /10^1)\n        if range of zoom <= 1 (floor: 10^-1, ceiling: 10^0), use hudredths (/100 -> (10^2))\n        if range of zoom <= .1 (floor: 10^-2, ceiling: 10^-1), use thousandths (/1000 -> (10^-3), etc.\n        const decimal = scales[activeScale]\n        xScales[key].scale\n        const decimal = scales[activeScale]\n        */\n        //TODO: zoom range matches up with current zoom\n        const zoomRange = xScales[activeScale[0]].scale.domain()[1] - xScales[activeScale[0]].scale.domain()[0]; //max-min\n        // const precision = Math.log10(zoomRange)<1 ? -(Math.floor(Math.log10(zoomRange)-1)) : 0;\n        const x = xScales[activeScale[0]].scale.invert(e.layerX);\n        const y = yScale.invert(e.layerY);\n        // console.log(Math.round(x*Math.pow(10, precision))/ Math.pow(10, precision));\n        setInflectTarget({x: round(x, zoomRange), y: Math.round(y)});\n        setToggle(\"NewInstantForm\");\n      }\n      setInfo(null);\n    });\n    svg.call(zoomBehavior);\n\n  }, [data, setData, zones, scales, toggle, activeLayer, activeData, dimensions, logic, currentZoomState, setInfo, radius, showLabel, syntacticOrder]);\n\n  return (\n    <div ref={wrapperRef} className=\"svgWrapper\">\n      <svg id=\"graphic\" ref={svgRef}>\n      </svg>\n    </div>\n  );\n};\n\n\nexport default Graphic;\n","/Users/skye/Desktop/Portfolio/chronovis/src/components/InfoBox.js",["364","365","366"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/NewScaleForm.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/ExportDataForm.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/NewIntervalForm.js",["367","368"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/ImportDataForm.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/EditScaleForm.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Layers.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/NavBar.js",["369","370","371"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Scrubber.js",["372","373","374"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Legend.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/EmptyProj.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/WelcomeMessage.js",["375"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Connection.js",["376"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Certainty.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/generateIntervals.js",["377"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Image.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Importance.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/NewZoneForm.js",["378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/useResizeObserver.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/InputFormScale.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/deleteInstant.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/InputFormText.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/EditForm.js",["396","397"],"/Users/skye/Desktop/Portfolio/chronovis/src/components/deleteInterval.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/InputFormNum.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/SelectedDisplay.js",[],"/Users/skye/Desktop/Portfolio/chronovis/src/components/Hands.js",["398","399","400"],{"ruleId":"401","replacedBy":"402"},{"ruleId":"403","replacedBy":"404"},{"ruleId":"405","severity":1,"message":"406","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":12},{"ruleId":"405","severity":1,"message":"409","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":16},{"ruleId":"405","severity":1,"message":"410","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":18},{"ruleId":"405","severity":1,"message":"411","line":24,"column":8,"nodeType":"407","messageId":"408","endLine":24,"endColumn":25},{"ruleId":"405","severity":1,"message":"412","line":27,"column":8,"nodeType":"407","messageId":"408","endLine":27,"endColumn":13},{"ruleId":"405","severity":1,"message":"413","line":30,"column":10,"nodeType":"407","messageId":"408","endLine":30,"endColumn":23},{"ruleId":"405","severity":1,"message":"414","line":35,"column":9,"nodeType":"407","messageId":"408","endLine":35,"endColumn":17},{"ruleId":"405","severity":1,"message":"415","line":37,"column":7,"nodeType":"407","messageId":"408","endLine":37,"endColumn":17},{"ruleId":"405","severity":1,"message":"416","line":155,"column":10,"nodeType":"407","messageId":"408","endLine":155,"endColumn":17},{"ruleId":"405","severity":1,"message":"417","line":155,"column":19,"nodeType":"407","messageId":"408","endLine":155,"endColumn":29},{"ruleId":"405","severity":1,"message":"418","line":176,"column":10,"nodeType":"407","messageId":"408","endLine":176,"endColumn":20},{"ruleId":"405","severity":1,"message":"419","line":176,"column":22,"nodeType":"407","messageId":"408","endLine":176,"endColumn":35},{"ruleId":"405","severity":1,"message":"420","line":2,"column":121,"nodeType":"407","messageId":"408","endLine":2,"endColumn":128},{"ruleId":"405","severity":1,"message":"421","line":48,"column":14,"nodeType":"407","messageId":"408","endLine":48,"endColumn":15},{"ruleId":"422","severity":1,"message":"423","line":63,"column":6,"nodeType":"424","endLine":63,"endColumn":44,"suggestions":"425"},{"ruleId":"405","severity":1,"message":"426","line":98,"column":11,"nodeType":"407","messageId":"408","endLine":98,"endColumn":21},{"ruleId":"405","severity":1,"message":"427","line":108,"column":11,"nodeType":"407","messageId":"408","endLine":108,"endColumn":17},{"ruleId":"428","severity":1,"message":"429","line":195,"column":34,"nodeType":"430","messageId":"431","endLine":195,"endColumn":36},{"ruleId":"405","severity":1,"message":"432","line":222,"column":15,"nodeType":"407","messageId":"408","endLine":222,"endColumn":21},{"ruleId":"405","severity":1,"message":"433","line":223,"column":15,"nodeType":"407","messageId":"408","endLine":223,"endColumn":21},{"ruleId":"422","severity":1,"message":"434","line":798,"column":6,"nodeType":"424","endLine":798,"endColumn":150,"suggestions":"435"},{"ruleId":"428","severity":1,"message":"429","line":142,"column":13,"nodeType":"436","messageId":"437","endLine":142,"endColumn":20},{"ruleId":"428","severity":1,"message":"429","line":174,"column":13,"nodeType":"436","messageId":"437","endLine":174,"endColumn":20},{"ruleId":"428","severity":1,"message":"429","line":206,"column":13,"nodeType":"436","messageId":"437","endLine":206,"endColumn":20},{"ruleId":"405","severity":1,"message":"438","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"439","line":1,"column":27,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"440","line":1,"column":38,"nodeType":"407","messageId":"408","endLine":1,"endColumn":44},{"ruleId":"405","severity":1,"message":"441","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":21},{"ruleId":"405","severity":1,"message":"442","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":20},{"ruleId":"405","severity":1,"message":"443","line":24,"column":17,"nodeType":"407","messageId":"408","endLine":24,"endColumn":25},{"ruleId":"405","severity":1,"message":"444","line":25,"column":10,"nodeType":"407","messageId":"408","endLine":25,"endColumn":15},{"ruleId":"405","severity":1,"message":"445","line":25,"column":17,"nodeType":"407","messageId":"408","endLine":25,"endColumn":25},{"ruleId":"405","severity":1,"message":"446","line":26,"column":10,"nodeType":"407","messageId":"408","endLine":26,"endColumn":13},{"ruleId":"405","severity":1,"message":"447","line":26,"column":15,"nodeType":"407","messageId":"408","endLine":26,"endColumn":21},{"ruleId":"405","severity":1,"message":"448","line":27,"column":10,"nodeType":"407","messageId":"408","endLine":27,"endColumn":16},{"ruleId":"405","severity":1,"message":"449","line":27,"column":18,"nodeType":"407","messageId":"408","endLine":27,"endColumn":27},{"ruleId":"405","severity":1,"message":"450","line":29,"column":9,"nodeType":"407","messageId":"408","endLine":29,"endColumn":19},{"ruleId":"405","severity":1,"message":"451","line":33,"column":10,"nodeType":"407","messageId":"408","endLine":33,"endColumn":16},{"ruleId":"405","severity":1,"message":"452","line":33,"column":18,"nodeType":"407","messageId":"408","endLine":33,"endColumn":27},{"ruleId":"405","severity":1,"message":"453","line":34,"column":10,"nodeType":"407","messageId":"408","endLine":34,"endColumn":14},{"ruleId":"405","severity":1,"message":"454","line":34,"column":16,"nodeType":"407","messageId":"408","endLine":34,"endColumn":23},{"ruleId":"405","severity":1,"message":"455","line":35,"column":10,"nodeType":"407","messageId":"408","endLine":35,"endColumn":15},{"ruleId":"405","severity":1,"message":"456","line":35,"column":17,"nodeType":"407","messageId":"408","endLine":35,"endColumn":25},{"ruleId":"405","severity":1,"message":"457","line":36,"column":10,"nodeType":"407","messageId":"408","endLine":36,"endColumn":17},{"ruleId":"405","severity":1,"message":"458","line":36,"column":19,"nodeType":"407","messageId":"408","endLine":36,"endColumn":29},{"ruleId":"405","severity":1,"message":"438","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"459","line":19,"column":11,"nodeType":"407","messageId":"408","endLine":19,"endColumn":14},{"ruleId":"405","severity":1,"message":"441","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":21},{"ruleId":"405","severity":1,"message":"442","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":20},{"ruleId":"405","severity":1,"message":"438","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"460","line":2,"column":28,"nodeType":"407","messageId":"408","endLine":2,"endColumn":36},{"ruleId":"461","severity":1,"message":"462","line":19,"column":58,"nodeType":"463","endLine":19,"endColumn":70},{"ruleId":"405","severity":1,"message":"464","line":11,"column":28,"nodeType":"407","messageId":"408","endLine":11,"endColumn":41},{"ruleId":"465","severity":1,"message":"466","line":101,"column":106,"nodeType":"467","endLine":101,"endColumn":147},{"ruleId":"465","severity":1,"message":"466","line":122,"column":104,"nodeType":"467","endLine":122,"endColumn":150},{"ruleId":"422","severity":1,"message":"468","line":185,"column":6,"nodeType":"424","endLine":185,"endColumn":8,"suggestions":"469"},{"ruleId":"405","severity":1,"message":"470","line":2,"column":113,"nodeType":"407","messageId":"408","endLine":2,"endColumn":119},{"ruleId":"405","severity":1,"message":"420","line":2,"column":121,"nodeType":"407","messageId":"408","endLine":2,"endColumn":128},{"ruleId":"405","severity":1,"message":"427","line":47,"column":9,"nodeType":"407","messageId":"408","endLine":47,"endColumn":15},{"ruleId":"428","severity":1,"message":"429","line":78,"column":32,"nodeType":"430","messageId":"431","endLine":78,"endColumn":34},{"ruleId":"405","severity":1,"message":"432","line":148,"column":15,"nodeType":"407","messageId":"408","endLine":148,"endColumn":21},{"ruleId":"405","severity":1,"message":"433","line":149,"column":15,"nodeType":"407","messageId":"408","endLine":149,"endColumn":21},{"ruleId":"422","severity":1,"message":"471","line":238,"column":6,"nodeType":"424","endLine":238,"endColumn":76,"suggestions":"472"},{"ruleId":"422","severity":1,"message":"473","line":664,"column":6,"nodeType":"424","endLine":664,"endColumn":141,"suggestions":"474"},{"ruleId":"401","replacedBy":"475"},{"ruleId":"403","replacedBy":"476"},{"ruleId":"405","severity":1,"message":"406","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":12},{"ruleId":"405","severity":1,"message":"410","line":5,"column":8,"nodeType":"407","messageId":"408","endLine":5,"endColumn":18},{"ruleId":"405","severity":1,"message":"411","line":24,"column":8,"nodeType":"407","messageId":"408","endLine":24,"endColumn":25},{"ruleId":"405","severity":1,"message":"413","line":30,"column":10,"nodeType":"407","messageId":"408","endLine":30,"endColumn":23},{"ruleId":"405","severity":1,"message":"414","line":35,"column":9,"nodeType":"407","messageId":"408","endLine":35,"endColumn":17},{"ruleId":"405","severity":1,"message":"415","line":37,"column":7,"nodeType":"407","messageId":"408","endLine":37,"endColumn":17},{"ruleId":"405","severity":1,"message":"477","line":114,"column":9,"nodeType":"407","messageId":"408","endLine":114,"endColumn":18},{"ruleId":"405","severity":1,"message":"416","line":155,"column":10,"nodeType":"407","messageId":"408","endLine":155,"endColumn":17},{"ruleId":"405","severity":1,"message":"417","line":155,"column":19,"nodeType":"407","messageId":"408","endLine":155,"endColumn":29},{"ruleId":"405","severity":1,"message":"418","line":176,"column":10,"nodeType":"407","messageId":"408","endLine":176,"endColumn":20},{"ruleId":"405","severity":1,"message":"419","line":176,"column":22,"nodeType":"407","messageId":"408","endLine":176,"endColumn":35},{"ruleId":"405","severity":1,"message":"420","line":2,"column":121,"nodeType":"407","messageId":"408","endLine":2,"endColumn":128},{"ruleId":"405","severity":1,"message":"421","line":48,"column":14,"nodeType":"407","messageId":"408","endLine":48,"endColumn":15},{"ruleId":"422","severity":1,"message":"423","line":63,"column":6,"nodeType":"424","endLine":63,"endColumn":44,"suggestions":"478"},{"ruleId":"405","severity":1,"message":"426","line":98,"column":11,"nodeType":"407","messageId":"408","endLine":98,"endColumn":21},{"ruleId":"405","severity":1,"message":"427","line":108,"column":11,"nodeType":"407","messageId":"408","endLine":108,"endColumn":17},{"ruleId":"428","severity":1,"message":"429","line":195,"column":34,"nodeType":"430","messageId":"431","endLine":195,"endColumn":36},{"ruleId":"405","severity":1,"message":"432","line":222,"column":15,"nodeType":"407","messageId":"408","endLine":222,"endColumn":21},{"ruleId":"405","severity":1,"message":"433","line":223,"column":15,"nodeType":"407","messageId":"408","endLine":223,"endColumn":21},{"ruleId":"422","severity":1,"message":"434","line":798,"column":6,"nodeType":"424","endLine":798,"endColumn":150,"suggestions":"479"},{"ruleId":"428","severity":1,"message":"429","line":142,"column":13,"nodeType":"436","messageId":"437","endLine":142,"endColumn":20},{"ruleId":"428","severity":1,"message":"429","line":174,"column":13,"nodeType":"436","messageId":"437","endLine":174,"endColumn":20},{"ruleId":"428","severity":1,"message":"429","line":206,"column":13,"nodeType":"436","messageId":"437","endLine":206,"endColumn":20},{"ruleId":"405","severity":1,"message":"441","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":21},{"ruleId":"405","severity":1,"message":"442","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":20},{"ruleId":"405","severity":1,"message":"464","line":11,"column":28,"nodeType":"407","messageId":"408","endLine":11,"endColumn":41},{"ruleId":"465","severity":1,"message":"466","line":101,"column":106,"nodeType":"467","endLine":101,"endColumn":147},{"ruleId":"465","severity":1,"message":"466","line":122,"column":104,"nodeType":"467","endLine":122,"endColumn":150},{"ruleId":"405","severity":1,"message":"438","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"439","line":1,"column":27,"nodeType":"407","messageId":"408","endLine":1,"endColumn":36},{"ruleId":"405","severity":1,"message":"440","line":1,"column":38,"nodeType":"407","messageId":"408","endLine":1,"endColumn":44},{"ruleId":"461","severity":1,"message":"462","line":19,"column":58,"nodeType":"463","endLine":19,"endColumn":70},{"ruleId":"405","severity":1,"message":"438","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"459","line":19,"column":11,"nodeType":"407","messageId":"408","endLine":19,"endColumn":14},{"ruleId":"405","severity":1,"message":"441","line":3,"column":8,"nodeType":"407","messageId":"408","endLine":3,"endColumn":21},{"ruleId":"405","severity":1,"message":"442","line":4,"column":8,"nodeType":"407","messageId":"408","endLine":4,"endColumn":20},{"ruleId":"405","severity":1,"message":"443","line":24,"column":17,"nodeType":"407","messageId":"408","endLine":24,"endColumn":25},{"ruleId":"405","severity":1,"message":"444","line":25,"column":10,"nodeType":"407","messageId":"408","endLine":25,"endColumn":15},{"ruleId":"405","severity":1,"message":"445","line":25,"column":17,"nodeType":"407","messageId":"408","endLine":25,"endColumn":25},{"ruleId":"405","severity":1,"message":"446","line":26,"column":10,"nodeType":"407","messageId":"408","endLine":26,"endColumn":13},{"ruleId":"405","severity":1,"message":"447","line":26,"column":15,"nodeType":"407","messageId":"408","endLine":26,"endColumn":21},{"ruleId":"405","severity":1,"message":"448","line":27,"column":10,"nodeType":"407","messageId":"408","endLine":27,"endColumn":16},{"ruleId":"405","severity":1,"message":"449","line":27,"column":18,"nodeType":"407","messageId":"408","endLine":27,"endColumn":27},{"ruleId":"405","severity":1,"message":"450","line":29,"column":9,"nodeType":"407","messageId":"408","endLine":29,"endColumn":19},{"ruleId":"405","severity":1,"message":"451","line":33,"column":10,"nodeType":"407","messageId":"408","endLine":33,"endColumn":16},{"ruleId":"405","severity":1,"message":"452","line":33,"column":18,"nodeType":"407","messageId":"408","endLine":33,"endColumn":27},{"ruleId":"405","severity":1,"message":"453","line":34,"column":10,"nodeType":"407","messageId":"408","endLine":34,"endColumn":14},{"ruleId":"405","severity":1,"message":"454","line":34,"column":16,"nodeType":"407","messageId":"408","endLine":34,"endColumn":23},{"ruleId":"405","severity":1,"message":"455","line":35,"column":10,"nodeType":"407","messageId":"408","endLine":35,"endColumn":15},{"ruleId":"405","severity":1,"message":"456","line":35,"column":17,"nodeType":"407","messageId":"408","endLine":35,"endColumn":25},{"ruleId":"405","severity":1,"message":"457","line":36,"column":10,"nodeType":"407","messageId":"408","endLine":36,"endColumn":17},{"ruleId":"405","severity":1,"message":"458","line":36,"column":19,"nodeType":"407","messageId":"408","endLine":36,"endColumn":29},{"ruleId":"405","severity":1,"message":"438","line":1,"column":17,"nodeType":"407","messageId":"408","endLine":1,"endColumn":25},{"ruleId":"405","severity":1,"message":"460","line":2,"column":28,"nodeType":"407","messageId":"408","endLine":2,"endColumn":36},{"ruleId":"405","severity":1,"message":"480","line":7,"column":10,"nodeType":"407","messageId":"408","endLine":7,"endColumn":23},{"ruleId":"422","severity":1,"message":"481","line":22,"column":9,"nodeType":"424","endLine":22,"endColumn":14,"suggestions":"482"},{"ruleId":"422","severity":1,"message":"468","line":194,"column":6,"nodeType":"424","endLine":194,"endColumn":8,"suggestions":"483"},"no-native-reassign",["484"],"no-negated-in-lhs",["485"],"no-unused-vars","'Data' is defined but never used.","Identifier","unusedVar","'NullData' is defined but never used.","'TagVisData' is defined but never used.","'generateIntervals' is defined but never used.","'Hands' is defined but never used.","'translateData' is defined but never used.","'segments' is assigned a value but never used.","'segmentMin' is assigned a value but never used.","'enabled' is assigned a value but never used.","'setEnabled' is assigned a value but never used.","'activeTool' is assigned a value but never used.","'setActiveTool' is assigned a value but never used.","'symbols' is defined but never used.","'v' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeData' and 'yScales'. Either include them or remove the dependency array.","ArrayExpression",["486"],"'breakpoint' is assigned a value but never used.","'rangeX' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'newMin' is assigned a value but never used.","'newMax' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'activeScale', 'activeZones', 'intervals', 'setInflectTarget', 'setSyntacticOrder', 'setToggle', and 'updateSrc'. Either include them or remove the dependency array. If 'setInflectTarget' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["487"],"ReturnStatement","expectedReturnValue","'useState' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'InputFormText' is defined but never used.","'InputFormNum' is defined but never used.","'setLabel' is assigned a value but never used.","'start' is assigned a value but never used.","'setStart' is assigned a value but never used.","'end' is assigned a value but never used.","'setEnd' is assigned a value but never used.","'select' is assigned a value but never used.","'setSelect' is assigned a value but never used.","'scalesList' is assigned a value but never used.","'yStart' is assigned a value but never used.","'setYStart' is assigned a value but never used.","'yEnd' is assigned a value but never used.","'setYEnd' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'opacity' is assigned a value but never used.","'setOpacity' is assigned a value but never used.","'key' is assigned a value but never used.","'IconEdit' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'IconCausation' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'handsFree'. Either include it or remove the dependency array.",["488"],"'symbol' is defined but never used.","React Hook useEffect has missing dependencies: 'xScales', 'xSegments', and 'yScale'. Either include them or remove the dependency array.",["489"],"React Hook useEffect has missing dependencies: 'activeScale', 'activeZones', 'generateScales', 'intervals', 'rangeY', 'setData', 'setInflectTarget', 'setSyntacticOrder', 'setToggle', 'xScales', 'yMax', 'yMin', 'yScale', 'yScaleInverse', and 'yScaleInverseDrag'. Either include them or remove the dependency array. If 'setInflectTarget' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["490"],["484"],["485"],"'scaleData' is assigned a value but never used.",["491"],["492"],"'initHandsFree' is defined but never used.","React Hook useMemo has an unnecessary dependency: 'ref'. Either exclude it or remove the dependency array.",["493"],["494"],"no-global-assign","no-unsafe-negation",{"desc":"495","fix":"496"},{"desc":"497","fix":"498"},{"desc":"499","fix":"500"},{"desc":"501","fix":"502"},{"desc":"503","fix":"504"},{"desc":"495","fix":"505"},{"desc":"497","fix":"506"},{"desc":"507","fix":"508"},{"desc":"499","fix":"509"},"Update the dependencies array to be: [dimensions, scales, currentZoomState, activeData, yScales]",{"range":"510","text":"511"},"Update the dependencies array to be: [data, setData, zones, scales, toggle, activeLayer, activeData, dimensions, logic, currentZoomState, setInfo, radius, showLabel, syntacticOrder, activeScale, activeZones, setInflectTarget, intervals, setSyntacticOrder, updateSrc, setToggle]",{"range":"512","text":"513"},"Update the dependencies array to be: [handsFree]",{"range":"514","text":"515"},"Update the dependencies array to be: [scales, activeLayer, activeData, dimensions, logic, currentZoomState, xSegments, xScales, yScale]",{"range":"516","text":"517"},"Update the dependencies array to be: [data, zones, scales, toggle, activeLayer, activeData, dimensions, logic, currentZoomState, setInfo, radius, showLabel, syntacticOrder, activeZones, xScales, yScale, yMin, yMax, setInflectTarget, generateScales, yScaleInverseDrag, setData, intervals, setSyntacticOrder, activeScale, yScaleInverse, rangeY, setToggle]",{"range":"518","text":"519"},{"range":"520","text":"511"},{"range":"521","text":"513"},"Update the dependencies array to be: []",{"range":"522","text":"523"},{"range":"524","text":"515"},[1926,1964],"[dimensions, scales, currentZoomState, activeData, yScales]",[30925,31069],"[data, setData, zones, scales, toggle, activeLayer, activeData, dimensions, logic, currentZoomState, setInfo, radius, showLabel, syntacticOrder, activeScale, activeZones, setInflectTarget, intervals, setSyntacticOrder, updateSrc, setToggle]",[2823,2825],"[handsFree]",[8935,9005],"[scales, activeLayer, activeData, dimensions, logic, currentZoomState, xSegments, xScales, yScale]",[26239,26374],"[data, zones, scales, toggle, activeLayer, activeData, dimensions, logic, currentZoomState, setInfo, radius, showLabel, syntacticOrder, activeZones, xScales, yScale, yMin, yMax, setInflectTarget, generateScales, yScaleInverseDrag, setData, intervals, setSyntacticOrder, activeScale, yScaleInverse, rangeY, setToggle]",[1926,1964],[30925,31069],[528,533],"[]",[3457,3459]]