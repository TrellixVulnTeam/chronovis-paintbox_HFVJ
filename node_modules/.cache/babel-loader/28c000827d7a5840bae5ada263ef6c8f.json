{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumac\\\\Documents\\\\GitHub\\\\chronovis-paintbox\\\\src\\\\components\\\\Scrubber.js\";\nimport React, { useState, useEffect, useRef } from 'react'; // import { select, drag, axisBottom, scalePoint } from \"d3\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Scrubber(_ref) {\n  let {\n    activeData,\n    setActiveData,\n    src,\n    setData\n  } = _ref;\n\n  const handleClick = e => {\n    if (e.target.id === \"foward\") {\n      setActiveData(activeData += 1);\n    } else {\n      setActiveData(activeData -= 1);\n    }\n\n    setData(src.instants[activeData]);\n  }; // //initialize reference object to pass to svg in React Dom\n  // const svgRef = useRef();\n  //\n  // useEffect(() => {\n  //   const svg = select(svgRef.current);\n  //\n  //   const dragged = drag()\n  //     .on(\"drag\", e => {\n  //       console.log(activeData);\n  //       // if ((e.dx > 0) && (activeData>src.nodes.length-1 )) {\n  //       //   setActiveData(activeData += 1);\n  //       // } else if (activeData<0) {\n  //       //   setActiveData(activeData -= 1);\n  //       // }\n  //       // console.log(activeData);\n  //     });\n  //\n  //   const scale = scalePoint()\n  //     .domain(src.nodes.map((n) => src.nodes.indexOf(n)))\n  //     .range([0, 300]); //todo\n  //\n  //   const axis = axisBottom(scale);\n  //\n  //   svg\n  //     .select(\".scrubber-axis\")\n  //     .style(\"transform\", `translateY(70px)`) //todo\n  //     .call(axis);\n  //\n  //   svg\n  //     .append(\"circle\")\n  //     .attr(\"r\", 5)\n  //     .attr(\"cx\", activeData)\n  //     .attr(\"cy\", 50)\n  //     .call(dragged)\n  //     .on(\"click\", () => {setActiveData(activeData+=1)});\n  //\n  // }, [activeData, src]);\n  // <svg ref={svgRef} className=\"ui absolute center\">\n  //   <g className=\"scrubber-axis\" />\n  // </svg>\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui absolute center\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"back\",\n      onClick: handleClick,\n      disabled: activeData === 0,\n      children: \"<\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), activeData, /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"foward\",\n      onClick: handleClick,\n      disabled: activeData === src.instants.length - 1,\n      children: \">\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Scrubber;\nexport default Scrubber;\n\nvar _c;\n\n$RefreshReg$(_c, \"Scrubber\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Scrubber","activeData","setActiveData","src","setData","handleClick","e","target","id","instants","length"],"sources":["C:/Users/Sumac/Documents/GitHub/chronovis-paintbox/src/components/Scrubber.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\n// import { select, drag, axisBottom, scalePoint } from \"d3\";\r\n\r\nfunction Scrubber({activeData, setActiveData, src, setData}) {\r\n\r\n  const handleClick = (e) => {\r\n    if (e.target.id === \"foward\") {\r\n      setActiveData(activeData += 1);\r\n    } else {\r\n      setActiveData(activeData -= 1);\r\n    }\r\n    setData(src.instants[activeData]);\r\n  }\r\n\r\n  // //initialize reference object to pass to svg in React Dom\r\n  // const svgRef = useRef();\r\n  //\r\n  // useEffect(() => {\r\n  //   const svg = select(svgRef.current);\r\n  //\r\n  //   const dragged = drag()\r\n  //     .on(\"drag\", e => {\r\n  //       console.log(activeData);\r\n  //       // if ((e.dx > 0) && (activeData>src.nodes.length-1 )) {\r\n  //       //   setActiveData(activeData += 1);\r\n  //       // } else if (activeData<0) {\r\n  //       //   setActiveData(activeData -= 1);\r\n  //       // }\r\n  //       // console.log(activeData);\r\n  //     });\r\n  //\r\n  //   const scale = scalePoint()\r\n  //     .domain(src.nodes.map((n) => src.nodes.indexOf(n)))\r\n  //     .range([0, 300]); //todo\r\n  //\r\n  //   const axis = axisBottom(scale);\r\n  //\r\n  //   svg\r\n  //     .select(\".scrubber-axis\")\r\n  //     .style(\"transform\", `translateY(70px)`) //todo\r\n  //     .call(axis);\r\n  //\r\n  //   svg\r\n  //     .append(\"circle\")\r\n  //     .attr(\"r\", 5)\r\n  //     .attr(\"cx\", activeData)\r\n  //     .attr(\"cy\", 50)\r\n  //     .call(dragged)\r\n  //     .on(\"click\", () => {setActiveData(activeData+=1)});\r\n  //\r\n  // }, [activeData, src]);\r\n\r\n\r\n  // <svg ref={svgRef} className=\"ui absolute center\">\r\n  //   <g className=\"scrubber-axis\" />\r\n  // </svg>\r\n\r\n  return (\r\n    <div className=\"ui absolute center\">\r\n      <button id=\"back\" onClick={handleClick} disabled={activeData===0}>&lt;</button>\r\n      {activeData}\r\n      <button id=\"foward\" onClick={handleClick} disabled={activeData===src.instants.length-1}>&gt;</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Scrubber;\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD,C,CACA;;;;AAEA,SAASC,QAAT,OAA6D;EAAA,IAA3C;IAACC,UAAD;IAAaC,aAAb;IAA4BC,GAA5B;IAAiCC;EAAjC,CAA2C;;EAE3D,MAAMC,WAAW,GAAIC,CAAD,IAAO;IACzB,IAAIA,CAAC,CAACC,MAAF,CAASC,EAAT,KAAgB,QAApB,EAA8B;MAC5BN,aAAa,CAACD,UAAU,IAAI,CAAf,CAAb;IACD,CAFD,MAEO;MACLC,aAAa,CAACD,UAAU,IAAI,CAAf,CAAb;IACD;;IACDG,OAAO,CAACD,GAAG,CAACM,QAAJ,CAAaR,UAAb,CAAD,CAAP;EACD,CAPD,CAF2D,CAW3D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;;;EAEA,oBACE;IAAK,SAAS,EAAC,oBAAf;IAAA,wBACE;MAAQ,EAAE,EAAC,MAAX;MAAkB,OAAO,EAAEI,WAA3B;MAAwC,QAAQ,EAAEJ,UAAU,KAAG,CAA/D;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAEGA,UAFH,eAGE;MAAQ,EAAE,EAAC,QAAX;MAAoB,OAAO,EAAEI,WAA7B;MAA0C,QAAQ,EAAEJ,UAAU,KAAGE,GAAG,CAACM,QAAJ,CAAaC,MAAb,GAAoB,CAArF;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;KA7DQV,Q;AA+DT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}