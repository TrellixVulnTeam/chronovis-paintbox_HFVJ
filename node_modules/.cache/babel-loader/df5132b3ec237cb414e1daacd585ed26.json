{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sumac\\\\Documents\\\\GitHub\\\\chronovis-paintbox\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss'; /// Component Imports ///\n\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\nimport DataLibrary from \"./components/DataLibrary\"; /// Data Imports ///\n\nimport Data from \"./data.json\";\nimport NullData from \"./NullData.json\";\nimport LifeImportanceData from \"./life_by_importance.json\";\nimport TagVisData from \"./tagVis.json\";\nimport WaitingForBusData from \"./waiting_for_bus.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction translateData(_ref) {\n  let {\n    data,\n    nullData\n  } = _ref;\n  const newData = { ...nullData\n  };\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const yValues = [];\n  const segments = []; // var key = 0;\n\n  var segmentMin = null; //TODO: automated scale generation\n\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": [datum.calendarDate < 0 ? \"early\" : scaleName, \"Order in Text\"],\n      // \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n\n    };\n    xValues.push(datum.calendarDate);\n    yValues.push(datum.cy); // key++;\n  }\n\n  xValues.sort((a, b) => a - b); //smallest to largest\n\n  yValues.sort((a, b) => a - b); //smallest to largest\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n\n  newData.scales.x[\"early\"] = {\n    \"min\": xValues[0] - 10,\n    \"max\": xValues[0] + 1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\": true,\n    \"segments\": [{\n      max: xValues[0]\n    }] //todo\n\n  };\n  newData.scales.x[`${scaleName}`] = {\n    \"min\": xValues[2] - 90,\n    \"max\": xValues[xValues.length - 1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{\n      min: xValues[2]\n    }] //todo\n\n  };\n  newData.scales.y[\"Order in Text\"] = {\n    \"min\": yValues[0],\n    \"max\": yValues[xValues.length - 1],\n    \"units\": \"paragraph\"\n  }; // console.log(minX, maxX);\n  // console.log(newData.scales);\n\n  return newData;\n} // function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\n\nfunction App() {\n  _s();\n\n  const projects = {\n    \"My Life by Importance\": {\n      description: \"A temporal model of events in my life organized by importance, as featured in the video tutorial.\",\n      data: LifeImportanceData\n    },\n    \"The Anthropocene Signal Amidst the Noise\": {\n      description: \"AKA ChronoVis: TagVis, this data was imported and formatted from the UCLAB Anthropocene Curriculum Project. Special thanks to Francesca Morini and Marian DÃ¶rk.\",\n      data: TagVisData\n    },\n    \"Waiting for the bus\": {\n      description: `\"I woke up at 7:30 am in someone else's bed today and it took me half an hour to get up. Thankfully, I won't be missing the 8:15AM bus, I thought. I tried to remember what happened last night but all I could recall was leaving the house at 9PM. Anyway, when I got to the bus stop 2 minutes before it was set to arrive, I waited and waited but it never showed up.\"`,\n      data: WaitingForBusData\n    }\n  };\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\": [[]],\n    \"zones\": [],\n    \"scales\": {\n      \"x\": {\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [// {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\": {\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  }; //user defined\n\n  const radius = 4; //for entire project\n\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\"); //for the entire ChronoJSON\n  // console.log(translateData({data:TagVisData,nullData:NullData}))\n  // console.log(TagVisData)\n\n  const [src, setSrc] = useState(NullData); //for ChronoJSON history. for undo and redo\n\n  const [history, setHistory] = useState([]); //make fixed length array\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //for active tool modes\n\n  const [activeTool, setActiveTool] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.instants[activeData]); //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n\n  const [zones, setZones] = useState(src.zones); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //for toggling the active scale\n\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0], Object.keys(scales.y)[0]]); //---UI stuff---//\n  //UI window toggles\n\n  const [toggle, setToggle] = useState(); //Navbar dropdown toggles\n\n  const [nav, setNav] = useState(); //UI info boxes for points, intervals, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); //Syntactic inflections order\n\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n  //--- functions ---//\n\n  const updateSrc = (newData, key) => {\n    setHistory([...history, {\n      src: src,\n      activeScale: activeScale,\n      activeData: activeData,\n      activeLayer: activeLayer\n    }]); //history.length-1 is last src before this\n\n    if (key === \"import\") {\n      //copy & pasted from ImportDataForm\n      setScales(newData.scales);\n      setActiveScale([Object.keys(newData.scales.x)[0], Object.keys(newData.scales.y)[0]]);\n      setActiveData(0);\n      setData(newData.instants[activeData]);\n      setZones(newData.zones);\n      setSrc(newData);\n      return;\n    }\n\n    const newSrc = src; //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n\n    if (key === \"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key === \"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n\n    console.log(history);\n    setSrc(newSrc);\n    setToggle(null);\n  };\n\n  const undo = () => {\n    const newHistory = [...history];\n    const last = newHistory.pop(); //pop() changes length of array\n\n    if (last === undefined) {\n      setHistory([]);\n    } else if (!last.activeScale[0] || !last.activeScale[1]) {\n      setHistory([]);\n    } else {\n      console.log(last);\n      console.log(newHistory);\n      setHistory([newHistory]);\n      setActiveScale(last.activeScale);\n      setActiveData(last.activeData);\n      setActiveLayer(last.activeLayer);\n      setSrc(last.src);\n      setScales(last.src.scales);\n      setData(last.src.instants[activeData]);\n      setZones(last.src.zones);\n\n      if (!newHistory.length) {\n        //length after\n        setHistory([]);\n      }\n    }\n  }; // console.log(info);\n\n  /*\r\n    TODO:\r\n    - for piecewise timeline, make function that generates different graphics\r\n  */\n  //\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      history: history,\n      setHistory: setHistory,\n      data: data,\n      setData: setData,\n      src: src,\n      setSrc: setSrc,\n      updateSrc: updateSrc,\n      zones: zones,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      nav: nav,\n      setNav: setNav,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel,\n      hasScales: Object.keys(scales.y).length,\n      fileName: fileName,\n      setFileName: setFileName,\n      proj: proj,\n      undo: undo,\n      canUndo: history.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => toggle ? setNav(null) : null,\n      children: [toggle === \"dataLibrary\" && /*#__PURE__*/_jsxDEV(DataLibrary, {\n        projects: projects,\n        updateSrc: updateSrc,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 38\n      }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n        activeData: activeData,\n        setActiveData: setActiveData,\n        src: src,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }, this), toggle === \"NewInstantForm\" && /*#__PURE__*/_jsxDEV(NewInstantForm, {\n        data: data,\n        setData: setData,\n        target: inflectTarget,\n        setToggle: setToggle,\n        scales: src.scales,\n        activeScale: activeScale,\n        activeData: activeData,\n        history: history,\n        setHistory: setHistory,\n        updateSrc: updateSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), toggle === \"editScale\" && /*#__PURE__*/_jsxDEV(EditScaleForm, {\n        scales: scales,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        activeScale: activeScale,\n        setActiveScale: setActiveScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 34\n      }, this), toggle === \"addZone\" && /*#__PURE__*/_jsxDEV(NewZoneForm, {\n        zones: zones,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        scales: scales,\n        activeScale: activeScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 32\n      }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n        data: data,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        scales: scales,\n        activeScale: activeScale,\n        history: history,\n        setHistory: setHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 36\n      }, this), toggle === \"addScale\" && /*#__PURE__*/_jsxDEV(NewScaleForm, {\n        src: src,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        setActiveScale: setActiveScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 33\n      }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n        src: src,\n        setSrc: setSrc,\n        data: data,\n        zones: zones,\n        scales: scales,\n        activeData: activeData,\n        setToggle: setToggle,\n        fileName: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 31\n      }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n        activeLayer: activeLayer,\n        setActiveLayer: setActiveLayer,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 31\n      }, this), toggle === \"import\" && /*#__PURE__*/_jsxDEV(ImportDataForm, {\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        setProj: setProj,\n        setFileName: setFileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n        target: inflectTarget,\n        setToggle: setToggle,\n        data: data,\n        updateSrc: updateSrc,\n        zones: zones,\n        setZones: setZones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 11\n      }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n        target: inflectTarget,\n        setToggle: setToggle,\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones,\n        radius: radius,\n        setProj: setProj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 11\n      }, this), toggle === \"connection\" && /*#__PURE__*/_jsxDEV(Connection, {\n        target: syntacticOrder,\n        setToggle: setToggle,\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), proj ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        className: \"container fullHeight\",\n        children: [Object.keys(scales.x).length ? /*#__PURE__*/_jsxDEV(Graphic, {\n          data: data,\n          setData: setData,\n          updateSrc: updateSrc,\n          zones: zones,\n          setZones: setZones,\n          radius: radius,\n          info: info,\n          setInfo: setInfo,\n          setInflectTarget: setInflectTarget,\n          showLabel: showLabel,\n          activeLayer: activeLayer,\n          toggle: toggle,\n          setToggle: setToggle,\n          scales: scales,\n          setScales: setScales,\n          syntacticOrder: syntacticOrder,\n          setSyntacticOrder: setSyntacticOrder,\n          activeScale: activeScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyProj, {\n          toggle: toggle,\n          setToggle: setToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n          urls: src.imgs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n        setProj: setProj,\n        setFileName: setFileName,\n        toggle: toggle,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"xS9Y9CVC8ZdXGplld0Tqs9s+r5k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Graphic","Image","NewInstantForm","NewIntervalForm","NewZoneForm","NewScaleForm","EditScaleForm","InfoBox","ExportDataForm","ImportDataForm","NavBar","Layers","Scrubber","Legend","Certainty","Importance","Connection","WelcomeMessage","generateIntervals","EmptyProj","DataLibrary","Data","NullData","LifeImportanceData","TagVisData","WaitingForBusData","translateData","data","nullData","newData","newInst","instants","scaleName","xValues","yValues","segments","segmentMin","datum","id","calendarDate","cy","innerText","push","sort","a","b","scales","x","max","length","min","y","App","projects","description","scaleData","radius","proj","setProj","fileName","setFileName","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","activeTool","setActiveTool","setData","zones","setZones","setScales","showLabel","setShowLabel","activeScale","setActiveScale","Object","keys","toggle","setToggle","nav","setNav","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","updateSrc","key","newSrc","console","log","undo","newHistory","last","pop","undefined","e","imgs"],"sources":["C:/Users/Sumac/Documents/GitHub/chronovis-paintbox/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './stylesheets/index.scss';\r\n\r\n/// Component Imports ///\r\nimport Graphic from \"./components/Graphic\";\r\nimport Image from \"./components/Image\";\r\nimport NewInstantForm from \"./components/NewInstantForm\";\r\nimport NewIntervalForm from \"./components/NewIntervalForm\";\r\nimport NewZoneForm from \"./components/NewZoneForm\";\r\nimport NewScaleForm from \"./components/NewScaleForm\";\r\nimport EditScaleForm from \"./components/EditScaleForm\";\r\nimport InfoBox from \"./components/InfoBox\";\r\nimport ExportDataForm from \"./components/ExportDataForm\";\r\nimport ImportDataForm from \"./components/ImportDataForm\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport Layers from \"./components/Layers\";\r\nimport Scrubber from \"./components/Scrubber\";\r\nimport Legend from \"./components/Legend\";\r\nimport Certainty from \"./components/Certainty\";\r\nimport Importance from \"./components/Importance\";\r\nimport Connection from \"./components/Connection\";\r\nimport WelcomeMessage from \"./components/WelcomeMessage\";\r\nimport generateIntervals from \"./components/generateIntervals\";\r\nimport EmptyProj from \"./components/EmptyProj\";\r\nimport DataLibrary from \"./components/DataLibrary\";\r\n\r\n/// Data Imports ///\r\nimport Data from \"./data.json\";\r\nimport NullData from \"./NullData.json\";\r\nimport LifeImportanceData from \"./life_by_importance.json\"\r\nimport TagVisData from \"./tagVis.json\";\r\nimport WaitingForBusData from \"./waiting_for_bus.json\"\r\n\r\n\r\nfunction translateData({data, nullData}) {\r\n  const newData = {...nullData};\r\n  const newInst = newData.instants[0];\r\n  const scaleName = \"calendarDate\";\r\n  const xValues = [];\r\n  const yValues = [];\r\n  const segments = [];\r\n  // var key = 0;\r\n  var segmentMin = null;\r\n\r\n  //TODO: automated scale generation\r\n  for (const datum of data) {\r\n    newInst[`${datum.id}`] = {\r\n      \"x\": datum.calendarDate,\r\n      \"y\": datum.cy,\r\n      \"scale\": [(datum.calendarDate<0)?\"early\":scaleName, \"Order in Text\"],\r\n      // \"target\": [datum.targets[datum.targets.length-1]], //???\r\n      \"text\": datum.innerText,\r\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\r\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\r\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\r\n    };\r\n    xValues.push(datum.calendarDate);\r\n    yValues.push(datum.cy)\r\n    // key++;\r\n  }\r\n\r\n  xValues.sort((a, b) => a-b); //smallest to largest\r\n  yValues.sort((a, b) => a-b); //smallest to largest\r\n\r\n\r\n  // //TODO: automated scale generation\r\n  // xValues.forEach((val, i) => {\r\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\r\n  //     segments.push({\r\n  //       \"min\": segmentMin,\r\n  //       \"max\":xValues[i]\r\n  //     })\r\n  //     segmentMin = xValues[i+1];\r\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\r\n  //     segments.push({\r\n  //       \"min\": segmentMin,\r\n  //       \"max\": null\r\n  //     })\r\n  //   };\r\n  // });\r\n  // for (let i; i=0; i++) {\r\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\r\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\r\n  //     // segments.push({\r\n  //     //   \"min\": segmentMin,\r\n  //     //   \"max\":xValues[i]\r\n  //     // })\r\n  //     // segmentMin = xValues[i+1];\r\n  //   }\r\n  // }\r\n  newData.scales.x[\"early\"] = {\r\n    \"min\": xValues[0]-10,\r\n    \"max\": xValues[0]+1000,\r\n    \"units\": \"Years\",\r\n    \"yPos\": 1,\r\n    \"hideLabel\":true,\r\n    \"segments\": [{max: xValues[0]}] //todo\r\n  }\r\n\r\n  newData.scales.x[`${scaleName}`] = {\r\n    \"min\": xValues[2]-90,\r\n    \"max\": xValues[xValues.length-1],\r\n    \"units\": \"Years\",\r\n    \"yPos\": 1,\r\n    \"segments\": [{min:xValues[2]}] //todo\r\n  }\r\n\r\n  newData.scales.y[\"Order in Text\"] = {\r\n    \"min\": yValues[0],\r\n    \"max\": yValues[xValues.length-1],\r\n    \"units\": \"paragraph\"\r\n  }\r\n\r\n\r\n  // console.log(minX, maxX);\r\n  // console.log(newData.scales);\r\n  return newData;\r\n}\r\n\r\n\r\n// function scalesList(scales) {\r\n//   Object.keys(scales).map((key, i) => {\r\n//     return <option value={key} key={i}>{key}</option>\r\n//   });\r\n// }\r\n\r\nfunction App() {\r\n\r\n  const projects = {\r\n    \"My Life by Importance\": {\r\n      description:\"A temporal model of events in my life organized by importance, as featured in the video tutorial.\",\r\n      data: LifeImportanceData\r\n    },\r\n    \"The Anthropocene Signal Amidst the Noise\": {\r\n      description:\"AKA ChronoVis: TagVis, this data was imported and formatted from the UCLAB Anthropocene Curriculum Project. Special thanks to Francesca Morini and Marian DÃ¶rk.\",\r\n      data: TagVisData\r\n    },\r\n    \"Waiting for the bus\": {\r\n      description:`\"I woke up at 7:30 am in someone else's bed today and it took me half an hour to get up. Thankfully, I won't be missing the 8:15AM bus, I thought. I tried to remember what happened last night but all I could recall was leaving the house at 9PM. Anyway, when I got to the bus stop 2 minutes before it was set to arrive, I waited and waited but it never showed up.\"`,\r\n      data: WaitingForBusData\r\n    },\r\n  }\r\n\r\n  const scaleData = {\r\n    \"imgs\": [],\r\n    \"instants\":\r\n    [\r\n      []\r\n    ],\r\n    \"zones\":\r\n    [],\r\n    \"scales\":\r\n    {\r\n      \"x\":{\r\n        \"Egyptian Dynasties\": {\r\n          \"min\": -3100,\r\n          \"max\": -30,\r\n          \"units\": \"Years BCE\",\r\n          \"yPos\": 1,\r\n          \"tickValues\": [],\r\n          \"segments\": [\r\n            // {\"max\": -2686, \"label\": \"Early Dynastic\"},\r\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\r\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\r\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\r\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\r\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\r\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\r\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\r\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\r\n          ]\r\n        }\r\n      },\r\n      \"y\":{\r\n        \"Place in Text\": {\r\n          \"min\": 3,\r\n          \"max\": 11,\r\n          \"units\": \"paragraph\"\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  //user defined\r\n  const radius = 4;\r\n\r\n  //for entire project\r\n  const [proj, setProj] = useState(false);\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  //for the entire ChronoJSON\r\n  // console.log(translateData({data:TagVisData,nullData:NullData}))\r\n  // console.log(TagVisData)\r\n  const [src, setSrc] = useState(NullData);\r\n\r\n  //for ChronoJSON history. for undo and redo\r\n  const [history, setHistory] = useState([]) //make fixed length array\r\n\r\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\r\n  //for toggling the active data as used by scrubber\r\n  const [activeData, setActiveData] = useState(0);\r\n  //for toggling the active layer\r\n  const [activeLayer, setActiveLayer] = useState();\r\n  //for active tool modes\r\n  const [activeTool, setActiveTool] = useState();\r\n\r\n  //initialize datapoints\r\n  const [data, setData] = useState(src.instants[activeData]);\r\n  //links are initialized in Graphic.js\r\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\r\n  //initialize zones\r\n  const [zones, setZones] = useState(src.zones);\r\n  //initialize scales\r\n  const [scales, setScales] = useState(src.scales);\r\n\r\n  //toggles datapoint IDs vs labels\r\n  const [showLabel, setShowLabel] = useState(true);\r\n\r\n  //for toggling the active scale\r\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0],Object.keys(scales.y)[0]])\r\n\r\n  //---UI stuff---//\r\n  //UI window toggles\r\n  const [toggle, setToggle] = useState();\r\n  //Navbar dropdown toggles\r\n  const [nav, setNav] = useState();\r\n  //UI info boxes for points, intervals, etc.\r\n  const [info, setInfo] = useState();\r\n  //Inflection info\r\n  const [inflectTarget, setInflectTarget] = useState();\r\n  //Syntactic inflections order\r\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\r\n  //--- functions ---//\r\n  const updateSrc = (newData, key) => {\r\n    setHistory([...history, {src:src, activeScale: activeScale, activeData: activeData, activeLayer: activeLayer}]); //history.length-1 is last src before this\r\n    if (key===\"import\") {\r\n      //copy & pasted from ImportDataForm\r\n      setScales(newData.scales);\r\n      setActiveScale([Object.keys(newData.scales.x)[0],Object.keys(newData.scales.y)[0]]);\r\n      setActiveData(0);\r\n      setData(newData.instants[activeData]);\r\n      setZones(newData.zones);\r\n      setSrc(newData);\r\n      return;\r\n    }\r\n    const newSrc = src;\r\n    //why is console.log(data) before & after the same, but new data point still shows up\r\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\r\n    if (key===\"zones\") {\r\n      setZones(newData);\r\n      newSrc.zones = zones;\r\n    } else if (key===\"scales\") {\r\n      setScales(newData);\r\n      newSrc.scales = newData;\r\n    } else {\r\n      setData(newData);\r\n      newSrc.instants[activeData] = data;\r\n    }\r\n    console.log(history);\r\n    setSrc(newSrc);\r\n    setToggle(null);\r\n  }\r\n\r\n const undo = () => {\r\n   const newHistory = [...history];\r\n   const last = newHistory.pop(); //pop() changes length of array\r\n\r\n   if (last === undefined) {\r\n     setHistory([]);\r\n   } else if (!last.activeScale[0] || !last.activeScale[1]) {\r\n     setHistory([]);\r\n   } else {\r\n     console.log(last)\r\n     console.log(newHistory)\r\n     setHistory([newHistory]);\r\n     setActiveScale(last.activeScale);\r\n     setActiveData(last.activeData);\r\n     setActiveLayer(last.activeLayer);\r\n     setSrc(last.src);\r\n     setScales(last.src.scales);\r\n     setData(last.src.instants[activeData]);\r\n     setZones(last.src.zones);\r\n     if (!newHistory.length) { //length after\r\n       setHistory([]);\r\n     }\r\n   }\r\n }\r\n\r\n\r\n  // console.log(info);\r\n  /*\r\n    TODO:\r\n    - for piecewise timeline, make function that generates different graphics\r\n  */\r\n//\r\n  return (\r\n    <>\r\n      {info && <InfoBox\r\n        info={info}\r\n        setInfo={setInfo}\r\n        history={history} setHistory={setHistory}\r\n        data={data} setData={setData}\r\n        src={src} setSrc={setSrc}\r\n        updateSrc={updateSrc}\r\n        zones={zones}\r\n        radius={radius}\r\n      />}\r\n      <NavBar\r\n        toggle={toggle}\r\n        setToggle={setToggle}\r\n        nav={nav} setNav={setNav}\r\n        data={data} showLabel={showLabel}\r\n        setShowLabel={setShowLabel}\r\n        hasScales={Object.keys(scales.y).length}\r\n        fileName={fileName}\r\n        setFileName={setFileName}\r\n        proj={proj}\r\n        undo={undo} canUndo={history.length}\r\n      />\r\n      <div onClick={(e) => (toggle)?setNav(null):null}>\r\n        {toggle === \"dataLibrary\" && <DataLibrary projects={projects} updateSrc={updateSrc} setToggle={setToggle}/>}\r\n        {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\r\n        {toggle===\"NewInstantForm\" &&\r\n          <NewInstantForm\r\n            data={data}\r\n            setData={setData}\r\n            target={inflectTarget}\r\n            setToggle={setToggle}\r\n            scales={src.scales}\r\n            activeScale={activeScale}\r\n            activeData={activeData}\r\n            history={history} setHistory={setHistory}\r\n            updateSrc={updateSrc}\r\n          />\r\n        }\r\n        {toggle===\"editScale\" && <EditScaleForm scales={scales} updateSrc={updateSrc} setToggle={setToggle} activeScale={activeScale} setActiveScale={setActiveScale}/>}\r\n        {toggle===\"addZone\" && <NewZoneForm zones={zones} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\r\n        {toggle===\"addInterval\" && <NewIntervalForm data={data} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale} history={history} setHistory={setHistory}/>}\r\n        {toggle===\"addScale\" && <NewScaleForm src={src} updateSrc={updateSrc} setToggle={setToggle} setActiveScale={setActiveScale}/>}\r\n        {toggle===\"save\" &&\r\n          <ExportDataForm\r\n            src={src}\r\n            setSrc={setSrc}\r\n            data={data}\r\n            zones={zones}\r\n            scales={scales}\r\n            activeData={activeData}\r\n            setToggle={setToggle}\r\n            fileName={fileName}\r\n          />\r\n        }\r\n        {toggle===\"legend\" && <Legend/>}\r\n        {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\r\n        {toggle===\"import\" &&\r\n          <ImportDataForm\r\n            updateSrc={updateSrc}\r\n            setToggle={setToggle}\r\n            setProj={setProj}\r\n            setFileName={setFileName}\r\n          />\r\n        }\r\n        {toggle===\"certainty\" &&\r\n          <Certainty\r\n            target={inflectTarget}\r\n            setToggle={setToggle}\r\n            data={data}\r\n            updateSrc={updateSrc}\r\n            zones={zones}\r\n            setZones={setZones}\r\n          />\r\n        }\r\n        {toggle===\"importance\" &&\r\n          <Importance\r\n            target={inflectTarget}\r\n            setToggle={setToggle}\r\n            data={data}\r\n            setData={setData}\r\n            zones={zones}\r\n            setZones={setZones}\r\n            radius={radius}\r\n            setProj={setProj}\r\n          />\r\n        }\r\n        {toggle===\"connection\" &&\r\n          <Connection\r\n            target={syntacticOrder}\r\n            setToggle={setToggle}\r\n            data={data}\r\n            setData={setData}\r\n            zones={zones}\r\n            setZones={setZones}\r\n          />\r\n        }\r\n\r\n        {\r\n          proj ?\r\n          <div id=\"main\" className=\"container fullHeight\">\r\n            {Object.keys(scales.x).length ?\r\n              <Graphic\r\n                data={data}\r\n                setData={setData}\r\n                updateSrc={updateSrc}\r\n                zones={zones}\r\n                setZones={setZones}\r\n                radius={radius}\r\n                info={info}\r\n                setInfo={setInfo}\r\n                setInflectTarget={setInflectTarget}\r\n                showLabel={showLabel}\r\n                activeLayer={activeLayer}\r\n                toggle={toggle}\r\n                setToggle={setToggle}\r\n                scales={scales}\r\n                setScales={setScales}\r\n                syntacticOrder={syntacticOrder}\r\n                setSyntacticOrder={setSyntacticOrder}\r\n                activeScale={activeScale}\r\n              />\r\n              : <EmptyProj toggle={toggle} setToggle={setToggle}/>\r\n            }\r\n            {src.imgs.length>0 && <Image urls={src.imgs}/>}\r\n          </div> :\r\n          <WelcomeMessage setProj={setProj} setFileName={setFileName} toggle={toggle} setToggle={setToggle}/>\r\n        }\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}