{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/chronovis/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss'; /// Component Imports ///\n\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\nimport DataLibrary from \"./components/DataLibrary\"; /// Data Imports ///\n\nimport Data from \"./data.json\";\nimport NullData from \"./NullData.json\";\nimport LifeImportanceData from \"./life_by_importance.json\";\nimport TagVisData from \"./tagVis.json\";\nimport WaitingForBusData from \"./waiting_for_bus.json\"; //for installation\n// import Hands from './components/Hands';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction translateData({\n  data,\n  nullData\n}) {\n  const newData = { ...nullData\n  };\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const yValues = [];\n  const segments = []; // var key = 0;\n\n  var segmentMin = null; //TODO: automated scale generation\n\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": [datum.calendarDate < 0 ? \"early\" : scaleName, \"Order in Text\"],\n      // \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n\n    };\n    xValues.push(datum.calendarDate);\n    yValues.push(datum.cy); // key++;\n  }\n\n  xValues.sort((a, b) => a - b); //smallest to largest\n\n  yValues.sort((a, b) => a - b); //smallest to largest\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n\n  newData.scales.x[\"early\"] = {\n    \"min\": xValues[0] - 10,\n    \"max\": xValues[0] + 1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\": true,\n    \"segments\": [{\n      max: xValues[0]\n    }] //todo\n\n  };\n  newData.scales.x[`${scaleName}`] = {\n    \"min\": xValues[2] - 90,\n    \"max\": xValues[xValues.length - 1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{\n      min: xValues[2]\n    }] //todo\n\n  };\n  newData.scales.y[\"Order in Text\"] = {\n    \"min\": yValues[0],\n    \"max\": yValues[xValues.length - 1],\n    \"units\": \"paragraph\"\n  }; // console.log(minX, maxX);\n  // console.log(newData.scales);\n\n  return newData;\n} // function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\n\nfunction App() {\n  _s();\n\n  const projects = {\n    \"My Life by Importance\": {\n      description: \"A temporal model of events in my life organized by importance, as featured in the video tutorial.\",\n      data: LifeImportanceData\n    },\n    \"The Anthropocene Signal Amidst the Noise\": {\n      description: \"AKA ChronoVis: TagVis, this data was imported and formatted from the UCLAB Anthropocene Curriculum Project. Special thanks to Francesca Morini and Marian DÃ¶rk.\",\n      data: TagVisData\n    },\n    \"Waiting for the bus\": {\n      description: `\"I woke up at 7:30 am in someone else's bed today and it took me half an hour to get up. Thankfully, I won't be missing the 8:15AM bus, I thought. I tried to remember what happened last night but all I could recall was leaving the house at 9PM. Anyway, when I got to the bus stop 2 minutes before it was set to arrive, I waited and waited but it never showed up.\"`,\n      data: WaitingForBusData\n    }\n  };\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\": [[]],\n    \"zones\": [],\n    \"scales\": {\n      \"x\": {\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [// {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\": {\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  }; //for installation\n\n  const [enabled, setEnabled] = useState(false); //user defined\n\n  const radius = 4; //for entire project\n\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\"); //for the entire ChronoJSON\n  // console.log(translateData({data:TagVisData,nullData:NullData}))\n  // console.log(TagVisData)\n\n  const [src, setSrc] = useState(NullData); //for ChronoJSON history. for undo and redo\n\n  const [history, setHistory] = useState([]); //make fixed length array\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //for active tool modes\n\n  const [activeTool, setActiveTool] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.instants[activeData]); //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n\n  const [zones, setZones] = useState(src.zones); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //for toggling the active scale\n\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0], Object.keys(scales.y)[0]]); //---UI stuff---//\n  //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI Navbar toggles\n\n  const [nav, setNav] = useState(null); //UI info boxes for points, intervals, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); //Syntactic inflections order\n\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n  //--- functions ---//\n\n  const updateSrc = (newData, key) => {\n    setHistory([...history, {\n      src: src,\n      activeScale: activeScale,\n      activeData: activeData,\n      activeLayer: activeLayer\n    }]); //history.length-1 is last src before this\n\n    const newSrc = src; //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n\n    if (key === \"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key === \"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else if (key === \"import\") {\n      //copy & pasted from ImportDataForm\n      setSrc(newData);\n      setScales(newData.scales);\n      setActiveScale([Object.keys(newData.scales.x)[0], Object.keys(newData.scales.y)[0]]);\n      setActiveData(0);\n      setZones(newData.zones);\n      setData(newData.instants[activeData]);\n      return;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n\n    console.log(history);\n    setSrc(newSrc);\n    setToggle(null);\n  };\n\n  const undo = () => {\n    const newHistory = [...history];\n    const last = newHistory.pop();\n\n    if (newHistory.length && last !== undefined) {\n      console.log(newHistory.pop());\n      setHistory([newHistory]);\n      setActiveScale(last.activeScale);\n      setActiveData(last.activeData);\n      setActiveLayer(last.activeLayer);\n      setSrc(last.src);\n      setScales(last.src.scales);\n      setData(last.src.instants[activeData]);\n      setZones(last.src.zones);\n    } else {//turn off undo button\n    }\n  }; // console.log(info);\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n  //\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      history: history,\n      setHistory: setHistory,\n      data: data,\n      setData: setData,\n      src: src,\n      setSrc: setSrc,\n      updateSrc: updateSrc,\n      zones: zones,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      setNav: setNav,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel,\n      hasScales: Object.keys(scales.y).length,\n      fileName: fileName,\n      setFileName: setFileName,\n      proj: proj,\n      undo: undo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this), toggle === \"dataLibrary\" && /*#__PURE__*/_jsxDEV(DataLibrary, {\n      projects: projects,\n      updateSrc: updateSrc,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 36\n    }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n      activeData: activeData,\n      setActiveData: setActiveData,\n      src: src,\n      setData: setData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 31\n    }, this), toggle === \"NewInstantForm\" && /*#__PURE__*/_jsxDEV(NewInstantForm, {\n      data: data,\n      setData: setData,\n      target: inflectTarget,\n      setToggle: setToggle,\n      scales: src.scales,\n      activeScale: activeScale,\n      activeData: activeData,\n      history: history,\n      setHistory: setHistory,\n      updateSrc: updateSrc\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this), toggle === \"editScale\" && /*#__PURE__*/_jsxDEV(EditScaleForm, {\n      scales: scales,\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      activeScale: activeScale,\n      setActiveScale: setActiveScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 32\n    }, this), toggle === \"addZone\" && /*#__PURE__*/_jsxDEV(NewZoneForm, {\n      zones: zones,\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 30\n    }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n      data: data,\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      scales: scales,\n      activeScale: activeScale,\n      history: history,\n      setHistory: setHistory\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 34\n    }, this), toggle === \"addScale\" && /*#__PURE__*/_jsxDEV(NewScaleForm, {\n      src: src,\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      setActiveScale: setActiveScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 31\n    }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n      src: src,\n      setSrc: setSrc,\n      data: data,\n      zones: zones,\n      scales: scales,\n      activeData: activeData,\n      setToggle: setToggle,\n      fileName: fileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 9\n    }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 29\n    }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n      activeLayer: activeLayer,\n      setActiveLayer: setActiveLayer,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 29\n    }, this), toggle === \"import\" && /*#__PURE__*/_jsxDEV(ImportDataForm, {\n      updateSrc: updateSrc,\n      setToggle: setToggle,\n      setProj: setProj,\n      setFileName: setFileName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      updateSrc: updateSrc,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n      target: inflectTarget,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones,\n      radius: radius,\n      setProj: setProj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), toggle === \"connection\" && /*#__PURE__*/_jsxDEV(Connection, {\n      target: syntacticOrder,\n      setToggle: setToggle,\n      data: data,\n      setData: setData,\n      zones: zones,\n      setZones: setZones\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), proj ? /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      className: \"container fullHeight\",\n      children: [Object.keys(scales.x).length ? /*#__PURE__*/_jsxDEV(Graphic, {\n        data: data,\n        setData: setData,\n        setNav: setNav,\n        updateSrc: updateSrc,\n        zones: zones,\n        setZones: setZones,\n        radius: radius,\n        info: info,\n        setInfo: setInfo,\n        setInflectTarget: setInflectTarget,\n        showLabel: showLabel,\n        activeLayer: activeLayer,\n        toggle: toggle,\n        setToggle: setToggle,\n        scales: scales,\n        setScales: setScales,\n        syntacticOrder: syntacticOrder,\n        setSyntacticOrder: setSyntacticOrder,\n        activeScale: activeScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(EmptyProj, {\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 15\n      }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n        urls: src.imgs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n      setProj: setProj,\n      setFileName: setFileName,\n      setToggle: setToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"S16pN1br+flSWJjNOGytQYy66gI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/App.js"],"names":["React","useState","Graphic","Image","NewInstantForm","NewIntervalForm","NewZoneForm","NewScaleForm","EditScaleForm","InfoBox","ExportDataForm","ImportDataForm","NavBar","Layers","Scrubber","Legend","Certainty","Importance","Connection","WelcomeMessage","generateIntervals","EmptyProj","DataLibrary","Data","NullData","LifeImportanceData","TagVisData","WaitingForBusData","translateData","data","nullData","newData","newInst","instants","scaleName","xValues","yValues","segments","segmentMin","datum","id","calendarDate","cy","innerText","push","sort","a","b","scales","x","max","length","min","y","App","projects","description","scaleData","enabled","setEnabled","radius","proj","setProj","fileName","setFileName","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","activeTool","setActiveTool","setData","zones","setZones","setScales","showLabel","setShowLabel","activeScale","setActiveScale","Object","keys","toggle","setToggle","nav","setNav","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","updateSrc","key","newSrc","console","log","undo","newHistory","last","pop","undefined","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\n\n/// Component Imports ///\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\nimport DataLibrary from \"./components/DataLibrary\";\n\n/// Data Imports ///\nimport Data from \"./data.json\";\nimport NullData from \"./NullData.json\";\nimport LifeImportanceData from \"./life_by_importance.json\"\nimport TagVisData from \"./tagVis.json\";\nimport WaitingForBusData from \"./waiting_for_bus.json\"\n\n//for installation\n// import Hands from './components/Hands';\n\n\nfunction translateData({data, nullData}) {\n  const newData = {...nullData};\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const yValues = [];\n  const segments = [];\n  // var key = 0;\n  var segmentMin = null;\n\n  //TODO: automated scale generation\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": [(datum.calendarDate<0)?\"early\":scaleName, \"Order in Text\"],\n      // \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText,\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n    };\n    xValues.push(datum.calendarDate);\n    yValues.push(datum.cy)\n    // key++;\n  }\n\n  xValues.sort((a, b) => a-b); //smallest to largest\n  yValues.sort((a, b) => a-b); //smallest to largest\n\n\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n  newData.scales.x[\"early\"] = {\n    \"min\": xValues[0]-10,\n    \"max\": xValues[0]+1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\":true,\n    \"segments\": [{max: xValues[0]}] //todo\n  }\n\n  newData.scales.x[`${scaleName}`] = {\n    \"min\": xValues[2]-90,\n    \"max\": xValues[xValues.length-1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{min:xValues[2]}] //todo\n  }\n\n  newData.scales.y[\"Order in Text\"] = {\n    \"min\": yValues[0],\n    \"max\": yValues[xValues.length-1],\n    \"units\": \"paragraph\"\n  }\n\n\n  // console.log(minX, maxX);\n  // console.log(newData.scales);\n  return newData;\n}\n\n\n// function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\nfunction App() {\n\n  const projects = {\n    \"My Life by Importance\": {\n      description:\"A temporal model of events in my life organized by importance, as featured in the video tutorial.\",\n      data: LifeImportanceData\n    },\n    \"The Anthropocene Signal Amidst the Noise\": {\n      description:\"AKA ChronoVis: TagVis, this data was imported and formatted from the UCLAB Anthropocene Curriculum Project. Special thanks to Francesca Morini and Marian DÃ¶rk.\",\n      data: TagVisData\n    },\n    \"Waiting for the bus\": {\n      description:`\"I woke up at 7:30 am in someone else's bed today and it took me half an hour to get up. Thankfully, I won't be missing the 8:15AM bus, I thought. I tried to remember what happened last night but all I could recall was leaving the house at 9PM. Anyway, when I got to the bus stop 2 minutes before it was set to arrive, I waited and waited but it never showed up.\"`,\n      data: WaitingForBusData\n    },\n  }\n\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      []\n    ],\n    \"zones\":\n    [],\n    \"scales\":\n    {\n      \"x\":{\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [\n            // {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\":{\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  };\n\n  //for installation\n  const [enabled, setEnabled] = useState(false);\n\n  //user defined\n  const radius = 4;\n\n  //for entire project\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n\n  //for the entire ChronoJSON\n  // console.log(translateData({data:TagVisData,nullData:NullData}))\n  // console.log(TagVisData)\n  const [src, setSrc] = useState(NullData);\n\n  //for ChronoJSON history. for undo and redo\n  const [history, setHistory] = useState([]) //make fixed length array\n\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n  //for active tool modes\n  const [activeTool, setActiveTool] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.instants[activeData]);\n  //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n  const [zones, setZones] = useState(src.zones);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //for toggling the active scale\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0],Object.keys(scales.y)[0]])\n\n  //---UI stuff---//\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI Navbar toggles\n  const [nav, setNav] = useState(null);\n  //UI info boxes for points, intervals, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n  //Syntactic inflections order\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n\n  //--- functions ---//\n  const updateSrc = (newData, key) => {\n    setHistory([...history, {src:src, activeScale: activeScale, activeData: activeData, activeLayer: activeLayer}]); //history.length-1 is last src before this\n    const newSrc = src;\n    //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n    if (key===\"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key===\"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else if (key===\"import\") {\n      //copy & pasted from ImportDataForm\n      setSrc(newData);\n      setScales(newData.scales);\n      setActiveScale([Object.keys(newData.scales.x)[0],Object.keys(newData.scales.y)[0]]);\n      setActiveData(0);\n      setZones(newData.zones);\n      setData(newData.instants[activeData]);\n      return;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n    console.log(history);\n    setSrc(newSrc);\n    setToggle(null);\n  }\n\n const undo = () => {\n   const newHistory = [...history];\n   const last = newHistory.pop();\n   if (newHistory.length&&(last !== undefined)) {\n     console.log(newHistory.pop())\n     setHistory([newHistory]);\n     setActiveScale(last.activeScale);\n     setActiveData(last.activeData);\n     setActiveLayer(last.activeLayer);\n     setSrc(last.src);\n     setScales(last.src.scales);\n     setData(last.src.instants[activeData]);\n     setZones(last.src.zones);\n   } else {\n     //turn off undo button\n   }\n }\n\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n//\n  return (\n    <>\n      {\n        // <>\n          // <Hands enabled={enabled} setEnabled={setEnabled}/>\n          // <div className=\"fullHeight\" onClick={e => console.log(e.clientX, e.clientY)} />\n        // </>\n      }\n\n      {info && <InfoBox\n        info={info}\n        setInfo={setInfo}\n        history={history} setHistory={setHistory}\n        data={data} setData={setData}\n        src={src} setSrc={setSrc}\n        updateSrc={updateSrc}\n        zones={zones}\n        radius={radius}\n      />}\n      <NavBar\n        toggle={toggle}\n        setToggle={setToggle}\n        setNav={setNav}\n        data={data} showLabel={showLabel}\n        setShowLabel={setShowLabel}\n        hasScales={Object.keys(scales.y).length}\n        fileName={fileName}\n        setFileName={setFileName}\n        proj={proj}\n        undo={undo}\n      />\n      {toggle === \"dataLibrary\" && <DataLibrary projects={projects} updateSrc={updateSrc} setToggle={setToggle}/>}\n      {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n      {toggle===\"NewInstantForm\" &&\n        <NewInstantForm\n          data={data}\n          setData={setData}\n          target={inflectTarget}\n          setToggle={setToggle}\n          scales={src.scales}\n          activeScale={activeScale}\n          activeData={activeData}\n          history={history} setHistory={setHistory}\n          updateSrc={updateSrc}\n        />\n      }\n      {toggle===\"editScale\" && <EditScaleForm scales={scales} updateSrc={updateSrc} setToggle={setToggle} activeScale={activeScale} setActiveScale={setActiveScale}/>}\n      {toggle===\"addZone\" && <NewZoneForm zones={zones} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n      {toggle===\"addInterval\" && <NewIntervalForm data={data} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale} history={history} setHistory={setHistory}/>}\n      {toggle===\"addScale\" && <NewScaleForm src={src} updateSrc={updateSrc} setToggle={setToggle} setActiveScale={setActiveScale}/>}\n      {toggle===\"save\" &&\n        <ExportDataForm\n          src={src}\n          setSrc={setSrc}\n          data={data}\n          zones={zones}\n          scales={scales}\n          activeData={activeData}\n          setToggle={setToggle}\n          fileName={fileName}\n        />\n      }\n      {toggle===\"legend\" && <Legend/>}\n      {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n      {toggle===\"import\" &&\n        <ImportDataForm\n          updateSrc={updateSrc}\n          setToggle={setToggle}\n          setProj={setProj}\n          setFileName={setFileName}\n        />\n      }\n      {toggle===\"certainty\" &&\n        <Certainty\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          updateSrc={updateSrc}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n      {toggle===\"importance\" &&\n        <Importance\n          target={inflectTarget}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n          radius={radius}\n          setProj={setProj}\n        />\n      }\n      {toggle===\"connection\" &&\n        <Connection\n          target={syntacticOrder}\n          setToggle={setToggle}\n          data={data}\n          setData={setData}\n          zones={zones}\n          setZones={setZones}\n        />\n      }\n\n      {proj ?\n        <div id=\"main\" className=\"container fullHeight\">\n          {Object.keys(scales.x).length ?\n            <Graphic\n              data={data}\n              setData={setData}\n              setNav={setNav}\n              updateSrc={updateSrc}\n              zones={zones}\n              setZones={setZones}\n              radius={radius}\n              info={info}\n              setInfo={setInfo}\n              setInflectTarget={setInflectTarget}\n              showLabel={showLabel}\n              activeLayer={activeLayer}\n              toggle={toggle}\n              setToggle={setToggle}\n              scales={scales}\n              setScales={setScales}\n              syntacticOrder={syntacticOrder}\n              setSyntacticOrder={setSyntacticOrder}\n              activeScale={activeScale}\n            />\n            : <EmptyProj setToggle={setToggle}/>\n          }\n          {src.imgs.length>0 && <Image urls={src.imgs}/>}\n        </div> :\n        <WelcomeMessage setProj={setProj} setFileName={setFileName} setToggle={setToggle}/>\n      }\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}