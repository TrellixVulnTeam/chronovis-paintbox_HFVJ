{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/chronovis/src/components/EditScaleForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n/*\n   UI and function for adding new zones.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditScaleForm({\n  scales,\n  updateSrc,\n  setToggle,\n  activeScale,\n  setActiveScale\n}) {\n  _s();\n\n  const xScale = scales.x[activeScale[0]];\n  const yScale = scales.y[activeScale[1]];\n  console.log(xScale, yScale);\n  const [values, setValues] = useState({\n    //for x scale\n    xSelect: activeScale[0],\n    xMin: xScale.min,\n    xMax: xScale.max,\n    xUnits: xScale.units,\n    xYPos: xScale.yPos,\n    xTickValues: xScale.tickValues,\n    xHideUnits: xScale.hideUnits,\n    xSegmentsNum: xScale.segments.length,\n    //for y scale\n    ySelect: activeScale[1],\n    yMin: yScale.min,\n    yMax: yScale.max,\n    yUnits: yScale.units,\n    yPercent: yScale.percent,\n    yHideUnits: yScale.hideUnits\n  }); //go thru list of scales in ChronoJSON and create a selection entry for each\n  // const scalesList = Object.keys(scales.x).map((key, i) => {\n  //   return <option value={key} key={i}>{key}</option>\n  // });\n  // const [min, setMin] = useState();\n  // const [max, setMax] = useState();\n  // const [units, setUnits] = useState();\n  // const [yPos, setYPos] = useState();\n  // //optional parameters\n  // const [segmentsNum, setSegmentNum] = useState([]);\n\n  const handleChange = e => {\n    e.preventDefault(); //checkbox is being weird (value updates 1 render behind), setting its values directly\n\n    const {\n      value,\n      name\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSelectScale = (e, props) => {\n    e.preventDefault();\n    const newActiveScale = [...activeScale];\n    const {\n      value,\n      name\n    } = e.target;\n\n    if (name === \"xSelect\") {\n      newActiveScale[0] = value;\n    } else {\n      newActiveScale[1] = value;\n    }\n\n    setActiveScale(newActiveScale);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newScales = { ...scales\n    };\n    const tempxMin = parseFloat(values.xMin);\n    const tempxMax = parseFloat(values.xMax);\n    const tempYPos = parseFloat(values.xYPos); //for x scale\n\n    const tempyMin = parseFloat(values.yMin);\n    const tempyMax = parseFloat(values.yMax); //error handling\n\n    if (isNaN(tempxMin) || isNaN(tempxMax) || isNaN(tempYPos) || isNaN(tempyMin) || isNaN(tempyMax)) {\n      alert(\"Make sure all numerical values are numbers!\");\n      return;\n    } else if (tempxMin >= tempxMax) {\n      alert(\"Minimum x Value must be less than or equal to Maximum x Value!\");\n      return;\n    } else if (tempyMin >= tempyMax) {\n      alert(\"Minimum y Value must be less than or equal to Maximum y Value!\");\n      return;\n    } else if (tempYPos > 1) {\n      alert(\"Vertical Position must be between 0 (top) and 1 (bottom)!\");\n      return;\n    } //update existing scale\n\n\n    newScales.x[values.xSelect] = {\n      \"min\": tempxMin,\n      \"max\": tempxMax,\n      \"units\": values.xUnits,\n      \"yPos\": tempYPos,\n      \"segments\": [...newScales.x[values.xSelect].segments] //todo\n\n    };\n    newScales.y[values.ySelect] = {\n      \"min\": tempyMin,\n      \"max\": tempyMax,\n      \"units\": values.yUnits,\n      ...(values.yPercent && {\n        \"percent\": values.yPercent\n      })\n    };\n    updateSrc(newScales, \"scales\");\n    setActiveScale([values.xSelect, values.ySelect]); //move to updateSrc\n\n    setToggle(null);\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center container\",\n    children: [/*#__PURE__*/_jsxDEV(InputFormScale, {\n      scales: scales.x,\n      label: \"X Scale\",\n      name: \"xSelect\",\n      value: activeScale[0],\n      onChange: handleSelectScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Minimum Value\",\n      name: \"xMin\",\n      placeholder: \"#s for now\",\n      value: values.xMin,\n      handleChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Maximum Value\",\n      name: \"xMax\",\n      placeholder: \"#s for now\",\n      value: values.xMax,\n      handleChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormText, {\n      label: \"Units Label\",\n      name: \"xUnits\",\n      placeholder: \"ie: Years\",\n      value: values.xUnits,\n      handleChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"textSecondary\",\n      children: [\"Screen Position\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"0 (bottom) - 1 (top)\",\n        name: \"xYPos\",\n        value: values.xYPos,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"textSecondary\",\n      children: [\"Segments\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"granularities within scale\",\n        name: \"xSegmentsNum\",\n        value: values.xSegmentsNum,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(InputFormScale, {\n      scales: scales.y,\n      label: \"Y Scale\",\n      name: \"ySelect\",\n      value: values.ySelect,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"textSecondary\",\n      children: [\"Minimum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s for now\",\n        name: \"yMin\",\n        value: values.yMin,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"textSecondary\",\n      children: [\"Maximum Value\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"#s for now\",\n        name: \"yMax\",\n        value: values.yMax,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"textSecondary\",\n      children: [\"Units Label\", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"redText\",\n        children: \"* \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"ie: Years\",\n        name: \"yUnits\",\n        value: values.yUnits,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSecondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSecondary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditScaleForm, \"sHO6rr5rrVILDaYLJrpxUsqXFL0=\");\n\n_c = EditScaleForm;\n;\nexport default EditScaleForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditScaleForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/EditScaleForm.js"],"names":["React","useState","InputFormScale","InputFormText","InputFormNum","EditScaleForm","scales","updateSrc","setToggle","activeScale","setActiveScale","xScale","x","yScale","y","console","log","values","setValues","xSelect","xMin","min","xMax","max","xUnits","units","xYPos","yPos","xTickValues","tickValues","xHideUnits","hideUnits","xSegmentsNum","segments","length","ySelect","yMin","yMax","yUnits","yPercent","percent","yHideUnits","handleChange","e","preventDefault","value","name","target","handleSelectScale","props","newActiveScale","handleSubmit","newScales","tempxMin","parseFloat","tempxMax","tempYPos","tempyMin","tempyMax","isNaN","alert","handleClose"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n\n/*\n   UI and function for adding new zones.\n*/\n\nfunction EditScaleForm({scales, updateSrc, setToggle, activeScale, setActiveScale}) {\n  const xScale = scales.x[activeScale[0]];\n  const yScale = scales.y[activeScale[1]];\n\n  console.log(xScale, yScale);\n  const [values, setValues] = useState({\n    //for x scale\n    xSelect:activeScale[0],\n    xMin:xScale.min,\n    xMax:xScale.max,\n    xUnits:xScale.units,\n    xYPos:xScale.yPos,\n    xTickValues:xScale.tickValues,\n    xHideUnits:xScale.hideUnits,\n    xSegmentsNum:xScale.segments.length,\n    //for y scale\n    ySelect:activeScale[1],\n    yMin:yScale.min,\n    yMax:yScale.max,\n    yUnits:yScale.units,\n    yPercent:yScale.percent,\n    yHideUnits:yScale.hideUnits\n  });\n\n\n  //go thru list of scales in ChronoJSON and create a selection entry for each\n  // const scalesList = Object.keys(scales.x).map((key, i) => {\n  //   return <option value={key} key={i}>{key}</option>\n  // });\n  // const [min, setMin] = useState();\n  // const [max, setMax] = useState();\n  // const [units, setUnits] = useState();\n  // const [yPos, setYPos] = useState();\n  // //optional parameters\n  // const [segmentsNum, setSegmentNum] = useState([]);\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    //checkbox is being weird (value updates 1 render behind), setting its values directly\n    const { value, name } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  const handleSelectScale = (e, props) => {\n    e.preventDefault();\n    const newActiveScale = [...activeScale]\n    const { value, name } = e.target;\n    if (name===\"xSelect\") {\n      newActiveScale[0] = value\n    } else {\n      newActiveScale[1] = value\n    }\n\n    setActiveScale(newActiveScale)\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newScales = {...scales};\n\n    const tempxMin = parseFloat(values.xMin);\n    const tempxMax = parseFloat(values.xMax);\n    const tempYPos = parseFloat(values.xYPos); //for x scale\n    const tempyMin = parseFloat(values.yMin);\n    const tempyMax = parseFloat(values.yMax);\n\n    //error handling\n    if (isNaN(tempxMin) || isNaN(tempxMax) || isNaN(tempYPos) || isNaN(tempyMin) || isNaN(tempyMax)) {\n      alert(\"Make sure all numerical values are numbers!\");\n      return;\n    } else if (tempxMin>=tempxMax) {\n      alert(\"Minimum x Value must be less than or equal to Maximum x Value!\");\n      return;\n    } else if (tempyMin>=tempyMax) {\n      alert(\"Minimum y Value must be less than or equal to Maximum y Value!\");\n      return;\n    } else if (tempYPos>1) {\n      alert(\"Vertical Position must be between 0 (top) and 1 (bottom)!\");\n      return;\n    }\n\n    //update existing scale\n    newScales.x[values.xSelect] = {\n      \"min\": tempxMin,\n      \"max\": tempxMax,\n      \"units\": values.xUnits,\n      \"yPos\": tempYPos,\n      \"segments\": [...newScales.x[values.xSelect].segments] //todo\n    }\n\n    newScales.y[values.ySelect] = {\n      \"min\": tempyMin,\n      \"max\": tempyMax,\n      \"units\": values.yUnits,\n      ...(values.yPercent && {\"percent\": values.yPercent})\n    }\n\n    updateSrc(newScales, \"scales\");\n    setActiveScale([values.xSelect, values.ySelect]); //move to updateSrc\n    setToggle(null);\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center container\">\n      <InputFormScale\n        scales={scales.x}\n        label=\"X Scale\"\n        name=\"xSelect\"\n        value={activeScale[0]}\n        onChange={handleSelectScale}\n      />\n      <InputFormNum\n        label=\"Minimum Value\"\n        name=\"xMin\"\n        placeholder=\"#s for now\"\n        value={values.xMin}\n        handleChange={handleChange}\n        required={true}\n      />\n      <InputFormNum\n        label=\"Maximum Value\"\n        name=\"xMax\"\n        placeholder=\"#s for now\"\n        value={values.xMax}\n        handleChange={handleChange}\n        required={true}\n      />\n      <InputFormText\n        label=\"Units Label\"\n        name=\"xUnits\"\n        placeholder=\"ie: Years\"\n        value={values.xUnits}\n        handleChange={handleChange}\n        required={true}\n      />\n      <label className=\"textSecondary\">\n        Screen Position<span className=\"redText\">* </span>\n        <input\n          type=\"text\"\n          placeholder=\"0 (bottom) - 1 (top)\"\n          name=\"xYPos\"\n          value={values.xYPos}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className=\"textSecondary\">\n        Segments\n        <input\n          type=\"number\"\n          placeholder=\"granularities within scale\"\n          name=\"xSegmentsNum\"\n          value={values.xSegmentsNum}\n          onChange={handleChange}\n        />\n      </label><br/>\n      <InputFormScale\n        scales={scales.y}\n        label=\"Y Scale\"\n        name=\"ySelect\"\n        value={values.ySelect}\n        onChange={handleChange}\n      />\n      <label className=\"textSecondary\">\n        Minimum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          name=\"yMin\"\n          value={values.yMin}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className=\"textSecondary\">\n        Maximum Value<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"#s for now\"\n          name=\"yMax\"\n          value={values.yMax}\n          onChange={handleChange}\n          required\n        />\n      </label>\n      <label className=\"textSecondary\">\n        Units Label<span className=\"redText\">* </span>\n        <input type=\"text\"\n          placeholder=\"ie: Years\"\n          name=\"yUnits\"\n          value={values.yUnits}\n          onChange={handleChange}\n          required\n        />\n      </label><br/>\n      <div className=\"flexCenter\">\n        <button className=\"buttonSecondary\" onClick={handleClose}>Cancel</button> &nbsp;\n        <button className=\"buttonSecondary\" onClick={handleSubmit}>Submit</button>\n      </div>\n    </form>\n  )\n};\n\nexport default EditScaleForm;\n"]},"metadata":{},"sourceType":"module"}