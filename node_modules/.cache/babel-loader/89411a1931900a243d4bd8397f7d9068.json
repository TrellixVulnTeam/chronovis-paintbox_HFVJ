{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport ResizeObserver from \"resize-observer-polyfill\"; //otherwise breaks in safari and edge\n\n/**\r\n* A hook that defines an html dom element for ResizeObserver to watch\r\n**/\n\nconst useResizeObserver = ref => {\n  _s();\n\n  const [dimensions, setDimensions] = useState(null); //only access reference (aka the svg) when it's rendered\n\n  useEffect(() => {\n    const observeTarget = ref.current; //create new resize observer w callback that takes resize target as args\n\n    const resizeObserver = new ResizeObserver(entries => {\n      //contentRect is the part ResizeObserver returns that has xy dimensions\n      entries.forEach(entry => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget); //cleanup function when unmount\n\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\n_s(useResizeObserver, \"swpmFLcor9a4TnJ7R73Pli9/9G8=\");\n\nexport default useResizeObserver;","map":{"version":3,"names":["useEffect","useState","ResizeObserver","useResizeObserver","ref","dimensions","setDimensions","observeTarget","current","resizeObserver","entries","forEach","entry","contentRect","observe","unobserve"],"sources":["C:/Users/Sumac/Documents/GitHub/chronovis-paintbox/src/components/useResizeObserver.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport ResizeObserver from \"resize-observer-polyfill\"; //otherwise breaks in safari and edge\r\n\r\n/**\r\n* A hook that defines an html dom element for ResizeObserver to watch\r\n**/\r\n\r\nconst useResizeObserver = ref => {\r\n  const [dimensions, setDimensions] = useState(null);\r\n  //only access reference (aka the svg) when it's rendered\r\n  useEffect(() => {\r\n    const observeTarget = ref.current;\r\n    //create new resize observer w callback that takes resize target as args\r\n    const resizeObserver =  new ResizeObserver((entries) => {\r\n      //contentRect is the part ResizeObserver returns that has xy dimensions\r\n      entries.forEach(entry => {\r\n        setDimensions(entry.contentRect);\r\n      });\r\n    });\r\n    resizeObserver.observe(observeTarget);\r\n    //cleanup function when unmount\r\n    return () => {\r\n      resizeObserver.unobserve(observeTarget);\r\n    };\r\n  }, [ref]);\r\n  return dimensions;\r\n};\r\n\r\nexport default useResizeObserver;\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,0BAA3B,C,CAAuD;;AAEvD;AACA;AACA;;AAEA,MAAMC,iBAAiB,GAAGC,GAAG,IAAI;EAAA;;EAC/B,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C,CAD+B,CAE/B;;EACAD,SAAS,CAAC,MAAM;IACd,MAAMO,aAAa,GAAGH,GAAG,CAACI,OAA1B,CADc,CAEd;;IACA,MAAMC,cAAc,GAAI,IAAIP,cAAJ,CAAoBQ,OAAD,IAAa;MACtD;MACAA,OAAO,CAACC,OAAR,CAAgBC,KAAK,IAAI;QACvBN,aAAa,CAACM,KAAK,CAACC,WAAP,CAAb;MACD,CAFD;IAGD,CALuB,CAAxB;IAMAJ,cAAc,CAACK,OAAf,CAAuBP,aAAvB,EATc,CAUd;;IACA,OAAO,MAAM;MACXE,cAAc,CAACM,SAAf,CAAyBR,aAAzB;IACD,CAFD;EAGD,CAdQ,EAcN,CAACH,GAAD,CAdM,CAAT;EAeA,OAAOC,UAAP;AACD,CAnBD;;GAAMF,iB;;AAqBN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}