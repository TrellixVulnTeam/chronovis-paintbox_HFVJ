{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/chronovis/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './stylesheets/index.scss'; /// Component Imports ///\n\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\nimport DataLibrary from \"./components/DataLibrary\"; /// Data Imports ///\n\nimport Data from \"./data.json\";\nimport NullData from \"./NullData.json\";\nimport LifeImportanceData from \"./life_by_importance.json\";\nimport TagVisData from \"./tagVis.json\";\nimport WaitingForBusData from \"./waiting_for_bus.json\"; //for installation\n// import Hands from './components/Hands';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction translateData({\n  data,\n  nullData\n}) {\n  const newData = { ...nullData\n  };\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const yValues = [];\n  const segments = []; // var key = 0;\n\n  var segmentMin = null; //TODO: automated scale generation\n\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": [datum.calendarDate < 0 ? \"early\" : scaleName, \"Order in Text\"],\n      // \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n\n    };\n    xValues.push(datum.calendarDate);\n    yValues.push(datum.cy); // key++;\n  }\n\n  xValues.sort((a, b) => a - b); //smallest to largest\n\n  yValues.sort((a, b) => a - b); //smallest to largest\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n\n  newData.scales.x[\"early\"] = {\n    \"min\": xValues[0] - 10,\n    \"max\": xValues[0] + 1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\": true,\n    \"segments\": [{\n      max: xValues[0]\n    }] //todo\n\n  };\n  newData.scales.x[`${scaleName}`] = {\n    \"min\": xValues[2] - 90,\n    \"max\": xValues[xValues.length - 1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{\n      min: xValues[2]\n    }] //todo\n\n  };\n  newData.scales.y[\"Order in Text\"] = {\n    \"min\": yValues[0],\n    \"max\": yValues[xValues.length - 1],\n    \"units\": \"paragraph\"\n  }; // console.log(minX, maxX);\n  // console.log(newData.scales);\n\n  return newData;\n} // function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\n\nfunction App() {\n  _s();\n\n  const projects = {\n    \"My Life by Importance\": {\n      description: \"A temporal model of events in my life organized by importance, as featured in the video tutorial.\",\n      data: LifeImportanceData\n    },\n    \"The Anthropocene Signal Amidst the Noise\": {\n      description: \"AKA ChronoVis: TagVis, this data was imported and formatted from the UCLAB Anthropocene Curriculum Project. Special thanks to Francesca Morini and Marian DÃ¶rk.\",\n      data: TagVisData\n    },\n    \"Waiting for the bus\": {\n      description: `\"I woke up at 7:30 am in someone else's bed today and it took me half an hour to get up. Thankfully, I won't be missing the 8:15AM bus, I thought. I tried to remember what happened last night but all I could recall was leaving the house at 9PM. Anyway, when I got to the bus stop 2 minutes before it was set to arrive, I waited and waited but it never showed up.\"`,\n      data: WaitingForBusData\n    }\n  };\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\": [[]],\n    \"zones\": [],\n    \"scales\": {\n      \"x\": {\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [// {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\": {\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  }; //for installation\n\n  const [enabled, setEnabled] = useState(false); //user defined\n\n  const radius = 4; //for entire project\n\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\"); //for the entire ChronoJSON\n  // console.log(translateData({data:TagVisData,nullData:NullData}))\n  // console.log(TagVisData)\n\n  const [src, setSrc] = useState(NullData); //for ChronoJSON history. for undo and redo\n\n  const [history, setHistory] = useState([]); //make fixed length array\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n\n  const [activeData, setActiveData] = useState(0); //for toggling the active layer\n\n  const [activeLayer, setActiveLayer] = useState(); //for active tool modes\n\n  const [activeTool, setActiveTool] = useState(); //initialize datapoints\n\n  const [data, setData] = useState(src.instants[activeData]); //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n\n  const [zones, setZones] = useState(src.zones); //initialize scales\n\n  const [scales, setScales] = useState(src.scales); //toggles datapoint IDs vs labels\n\n  const [showLabel, setShowLabel] = useState(true); //for toggling the active scale\n\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0], Object.keys(scales.y)[0]]); //---UI stuff---//\n  //UI window toggles\n\n  const [toggle, setToggle] = useState(); //UI info boxes for points, intervals, etc.\n\n  const [info, setInfo] = useState(); //Inflection info\n\n  const [inflectTarget, setInflectTarget] = useState(); //Syntactic inflections order\n\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n  //--- functions ---//\n\n  const updateSrc = (newData, key) => {\n    setHistory([...history, {\n      src: src,\n      activeScale: activeScale,\n      activeData: activeData,\n      activeLayer: activeLayer\n    }]); //history.length-1 is last src before this\n\n    const newSrc = src; //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n\n    if (key === \"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key === \"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else if (key === \"import\") {\n      //copy & pasted from ImportDataForm\n      setSrc(newData);\n      setScales(newData.scales);\n      setActiveScale([Object.keys(newData.scales.x)[0], Object.keys(newData.scales.y)[0]]);\n      setActiveData(0);\n      setZones(newData.zones);\n      setData(newData.instants[activeData]);\n      return;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n\n    console.log(history);\n    setSrc(newSrc);\n    setToggle(null);\n  };\n\n  const undo = () => {\n    const newHistory = [...history];\n    const last = newHistory.pop();\n\n    if (newHistory.length && last !== undefined) {\n      console.log(newHistory.pop());\n      setHistory([newHistory]);\n      setActiveScale(last.activeScale);\n      setActiveData(last.activeData);\n      setActiveLayer(last.activeLayer);\n      setSrc(last.src);\n      setScales(last.src.scales);\n      setData(last.src.instants[activeData]);\n      setZones(last.src.zones);\n    } else {//turn off undo button\n    }\n  }; // console.log(info);\n\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n  //\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [info && /*#__PURE__*/_jsxDEV(InfoBox, {\n      info: info,\n      setInfo: setInfo,\n      history: history,\n      setHistory: setHistory,\n      data: data,\n      setData: setData,\n      src: src,\n      setSrc: setSrc,\n      updateSrc: updateSrc,\n      zones: zones,\n      radius: radius\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(NavBar, {\n      toggle: toggle,\n      setToggle: setToggle,\n      data: data,\n      showLabel: showLabel,\n      setShowLabel: setShowLabel,\n      hasScales: Object.keys(scales.y).length,\n      fileName: fileName,\n      setFileName: setFileName,\n      proj: proj,\n      undo: undo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: e => console.log(e.target),\n      children: [toggle === \"dataLibrary\" && /*#__PURE__*/_jsxDEV(DataLibrary, {\n        projects: projects,\n        updateSrc: updateSrc,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 38\n      }, this), toggle === \"scrubber\" && /*#__PURE__*/_jsxDEV(Scrubber, {\n        activeData: activeData,\n        setActiveData: setActiveData,\n        src: src,\n        setData: setData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 33\n      }, this), toggle === \"NewInstantForm\" && /*#__PURE__*/_jsxDEV(NewInstantForm, {\n        data: data,\n        setData: setData,\n        target: inflectTarget,\n        setToggle: setToggle,\n        scales: src.scales,\n        activeScale: activeScale,\n        activeData: activeData,\n        history: history,\n        setHistory: setHistory,\n        updateSrc: updateSrc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 11\n      }, this), toggle === \"editScale\" && /*#__PURE__*/_jsxDEV(EditScaleForm, {\n        scales: scales,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        activeScale: activeScale,\n        setActiveScale: setActiveScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 34\n      }, this), toggle === \"addZone\" && /*#__PURE__*/_jsxDEV(NewZoneForm, {\n        zones: zones,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        scales: scales,\n        activeScale: activeScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 32\n      }, this), toggle === \"addInterval\" && /*#__PURE__*/_jsxDEV(NewIntervalForm, {\n        data: data,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        scales: scales,\n        activeScale: activeScale,\n        history: history,\n        setHistory: setHistory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 36\n      }, this), toggle === \"addScale\" && /*#__PURE__*/_jsxDEV(NewScaleForm, {\n        src: src,\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        setActiveScale: setActiveScale\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 33\n      }, this), toggle === \"save\" && /*#__PURE__*/_jsxDEV(ExportDataForm, {\n        src: src,\n        setSrc: setSrc,\n        data: data,\n        zones: zones,\n        scales: scales,\n        activeData: activeData,\n        setToggle: setToggle,\n        fileName: fileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this), toggle === \"legend\" && /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 31\n      }, this), toggle === \"layers\" && /*#__PURE__*/_jsxDEV(Layers, {\n        activeLayer: activeLayer,\n        setActiveLayer: setActiveLayer,\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 31\n      }, this), toggle === \"import\" && /*#__PURE__*/_jsxDEV(ImportDataForm, {\n        updateSrc: updateSrc,\n        setToggle: setToggle,\n        setProj: setProj,\n        setFileName: setFileName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 11\n      }, this), toggle === \"certainty\" && /*#__PURE__*/_jsxDEV(Certainty, {\n        target: inflectTarget,\n        setToggle: setToggle,\n        data: data,\n        updateSrc: updateSrc,\n        zones: zones,\n        setZones: setZones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 11\n      }, this), toggle === \"importance\" && /*#__PURE__*/_jsxDEV(Importance, {\n        target: inflectTarget,\n        setToggle: setToggle,\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones,\n        radius: radius,\n        setProj: setProj\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 11\n      }, this), toggle === \"connection\" && /*#__PURE__*/_jsxDEV(Connection, {\n        target: syntacticOrder,\n        setToggle: setToggle,\n        data: data,\n        setData: setData,\n        zones: zones,\n        setZones: setZones\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), proj ? /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        className: \"container fullHeight\",\n        children: [Object.keys(scales.x).length ? /*#__PURE__*/_jsxDEV(Graphic, {\n          data: data,\n          setData: setData,\n          updateSrc: updateSrc,\n          zones: zones,\n          setZones: setZones,\n          radius: radius,\n          info: info,\n          setInfo: setInfo,\n          setInflectTarget: setInflectTarget,\n          showLabel: showLabel,\n          activeLayer: activeLayer,\n          toggle: toggle,\n          setToggle: setToggle,\n          scales: scales,\n          setScales: setScales,\n          syntacticOrder: syntacticOrder,\n          setSyntacticOrder: setSyntacticOrder,\n          activeScale: activeScale\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(EmptyProj, {\n          toggle: toggle,\n          setToggle: setToggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 17\n        }, this), src.imgs.length > 0 && /*#__PURE__*/_jsxDEV(Image, {\n          urls: src.imgs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(WelcomeMessage, {\n        setProj: setProj,\n        setFileName: setFileName,\n        toggle: toggle,\n        setToggle: setToggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"7lr11XVpTGcKzjOn6p5CuZKQKDw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/App.js"],"names":["React","useState","Graphic","Image","NewInstantForm","NewIntervalForm","NewZoneForm","NewScaleForm","EditScaleForm","InfoBox","ExportDataForm","ImportDataForm","NavBar","Layers","Scrubber","Legend","Certainty","Importance","Connection","WelcomeMessage","generateIntervals","EmptyProj","DataLibrary","Data","NullData","LifeImportanceData","TagVisData","WaitingForBusData","translateData","data","nullData","newData","newInst","instants","scaleName","xValues","yValues","segments","segmentMin","datum","id","calendarDate","cy","innerText","push","sort","a","b","scales","x","max","length","min","y","App","projects","description","scaleData","enabled","setEnabled","radius","proj","setProj","fileName","setFileName","src","setSrc","history","setHistory","activeData","setActiveData","activeLayer","setActiveLayer","activeTool","setActiveTool","setData","zones","setZones","setScales","showLabel","setShowLabel","activeScale","setActiveScale","Object","keys","toggle","setToggle","info","setInfo","inflectTarget","setInflectTarget","syntacticOrder","setSyntacticOrder","updateSrc","key","newSrc","console","log","undo","newHistory","last","pop","undefined","e","target","imgs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './stylesheets/index.scss';\n\n/// Component Imports ///\nimport Graphic from \"./components/Graphic\";\nimport Image from \"./components/Image\";\nimport NewInstantForm from \"./components/NewInstantForm\";\nimport NewIntervalForm from \"./components/NewIntervalForm\";\nimport NewZoneForm from \"./components/NewZoneForm\";\nimport NewScaleForm from \"./components/NewScaleForm\";\nimport EditScaleForm from \"./components/EditScaleForm\";\nimport InfoBox from \"./components/InfoBox\";\nimport ExportDataForm from \"./components/ExportDataForm\";\nimport ImportDataForm from \"./components/ImportDataForm\";\nimport NavBar from \"./components/NavBar\";\nimport Layers from \"./components/Layers\";\nimport Scrubber from \"./components/Scrubber\";\nimport Legend from \"./components/Legend\";\nimport Certainty from \"./components/Certainty\";\nimport Importance from \"./components/Importance\";\nimport Connection from \"./components/Connection\";\nimport WelcomeMessage from \"./components/WelcomeMessage\";\nimport generateIntervals from \"./components/generateIntervals\";\nimport EmptyProj from \"./components/EmptyProj\";\nimport DataLibrary from \"./components/DataLibrary\";\n\n/// Data Imports ///\nimport Data from \"./data.json\";\nimport NullData from \"./NullData.json\";\nimport LifeImportanceData from \"./life_by_importance.json\"\nimport TagVisData from \"./tagVis.json\";\nimport WaitingForBusData from \"./waiting_for_bus.json\"\n\n//for installation\n// import Hands from './components/Hands';\n\n\nfunction translateData({data, nullData}) {\n  const newData = {...nullData};\n  const newInst = newData.instants[0];\n  const scaleName = \"calendarDate\";\n  const xValues = [];\n  const yValues = [];\n  const segments = [];\n  // var key = 0;\n  var segmentMin = null;\n\n  //TODO: automated scale generation\n  for (const datum of data) {\n    newInst[`${datum.id}`] = {\n      \"x\": datum.calendarDate,\n      \"y\": datum.cy,\n      \"scale\": [(datum.calendarDate<0)?\"early\":scaleName, \"Order in Text\"],\n      // \"target\": [datum.targets[datum.targets.length-1]], //???\n      \"text\": datum.innerText,\n      // ...(e.target.color && {\"color\": e.target.color.value}), //if color is specified, create color entry in data\n      // ...(e.target.radius && {\"radius\": e.target.radius.value}),\n      // ...(e.target.opacity && {\"opacity\": e.target.opacity.value})\n    };\n    xValues.push(datum.calendarDate);\n    yValues.push(datum.cy)\n    // key++;\n  }\n\n  xValues.sort((a, b) => a-b); //smallest to largest\n  yValues.sort((a, b) => a-b); //smallest to largest\n\n\n  // //TODO: automated scale generation\n  // xValues.forEach((val, i) => {\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) {\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\":xValues[i]\n  //     })\n  //     segmentMin = xValues[i+1];\n  //   } else if ((segments.length) && (i===xValues.length-1)){ //if there are segments and this is the last value\n  //     segments.push({\n  //       \"min\": segmentMin,\n  //       \"max\": null\n  //     })\n  //   };\n  // });\n  // for (let i; i=0; i++) {\n  //   console.log(xValues[i]+Math.abs(xValues[i])<xValues[i+1]);\n  //   if (xValues[i]+Math.abs(xValues[i])<xValues[i+1]) { //if a value is less than 1/2 of the next value, create a segment\n  //     // segments.push({\n  //     //   \"min\": segmentMin,\n  //     //   \"max\":xValues[i]\n  //     // })\n  //     // segmentMin = xValues[i+1];\n  //   }\n  // }\n  newData.scales.x[\"early\"] = {\n    \"min\": xValues[0]-10,\n    \"max\": xValues[0]+1000,\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"hideLabel\":true,\n    \"segments\": [{max: xValues[0]}] //todo\n  }\n\n  newData.scales.x[`${scaleName}`] = {\n    \"min\": xValues[2]-90,\n    \"max\": xValues[xValues.length-1],\n    \"units\": \"Years\",\n    \"yPos\": 1,\n    \"segments\": [{min:xValues[2]}] //todo\n  }\n\n  newData.scales.y[\"Order in Text\"] = {\n    \"min\": yValues[0],\n    \"max\": yValues[xValues.length-1],\n    \"units\": \"paragraph\"\n  }\n\n\n  // console.log(minX, maxX);\n  // console.log(newData.scales);\n  return newData;\n}\n\n\n// function scalesList(scales) {\n//   Object.keys(scales).map((key, i) => {\n//     return <option value={key} key={i}>{key}</option>\n//   });\n// }\n\nfunction App() {\n\n  const projects = {\n    \"My Life by Importance\": {\n      description:\"A temporal model of events in my life organized by importance, as featured in the video tutorial.\",\n      data: LifeImportanceData\n    },\n    \"The Anthropocene Signal Amidst the Noise\": {\n      description:\"AKA ChronoVis: TagVis, this data was imported and formatted from the UCLAB Anthropocene Curriculum Project. Special thanks to Francesca Morini and Marian DÃ¶rk.\",\n      data: TagVisData\n    },\n    \"Waiting for the bus\": {\n      description:`\"I woke up at 7:30 am in someone else's bed today and it took me half an hour to get up. Thankfully, I won't be missing the 8:15AM bus, I thought. I tried to remember what happened last night but all I could recall was leaving the house at 9PM. Anyway, when I got to the bus stop 2 minutes before it was set to arrive, I waited and waited but it never showed up.\"`,\n      data: WaitingForBusData\n    },\n  }\n\n  const scaleData = {\n    \"imgs\": [],\n    \"instants\":\n    [\n      []\n    ],\n    \"zones\":\n    [],\n    \"scales\":\n    {\n      \"x\":{\n        \"Egyptian Dynasties\": {\n          \"min\": -3100,\n          \"max\": -30,\n          \"units\": \"Years BCE\",\n          \"yPos\": 1,\n          \"tickValues\": [],\n          \"segments\": [\n            // {\"max\": -2686, \"label\": \"Early Dynastic\"},\n            // {\"min\": -2686, \"max\": -2181, \"label\": \"Old Kingdom\"},\n            // {\"min\": -2181, \"max\": -2040, \"label\": \"First Intermediate Period\"},\n            // {\"min\": -2040, \"max\": -1649, \"label\": \"Middle Kingdom\"},\n            // {\"min\": -1649, \"max\": -1550, \"label\": \"Second Intermediate Period\"},\n            // {\"min\": -1550, \"max\": -1077, \"label\": \"New Kingdom\"},\n            // {\"min\": -1077, \"max\": -656, \"label\": \"Third Intermediate Period\"},\n            // {\"min\": -656, \"max\": -332, \"label\": \"Late Period\"},\n            // {\"min\": -332, \"label\": \"Graeco-Roman\"}\n          ]\n        }\n      },\n      \"y\":{\n        \"Place in Text\": {\n          \"min\": 3,\n          \"max\": 11,\n          \"units\": \"paragraph\"\n        }\n      }\n    }\n  };\n\n  //for installation\n  const [enabled, setEnabled] = useState(false);\n\n  //user defined\n  const radius = 4;\n\n  //for entire project\n  const [proj, setProj] = useState(false);\n  const [fileName, setFileName] = useState(\"\");\n\n  //for the entire ChronoJSON\n  // console.log(translateData({data:TagVisData,nullData:NullData}))\n  // console.log(TagVisData)\n  const [src, setSrc] = useState(NullData);\n\n  //for ChronoJSON history. for undo and redo\n  const [history, setHistory] = useState([]) //make fixed length array\n\n  //--- copies of the source data. altering visual views does not necessarily change src data---//\n  //for toggling the active data as used by scrubber\n  const [activeData, setActiveData] = useState(0);\n  //for toggling the active layer\n  const [activeLayer, setActiveLayer] = useState();\n  //for active tool modes\n  const [activeTool, setActiveTool] = useState();\n\n  //initialize datapoints\n  const [data, setData] = useState(src.instants[activeData]);\n  //links are initialized in Graphic.js\n  // const [links, setLinks] = useState(generateLinks(src.instants[activeData]))\n  //initialize zones\n  const [zones, setZones] = useState(src.zones);\n  //initialize scales\n  const [scales, setScales] = useState(src.scales);\n\n  //toggles datapoint IDs vs labels\n  const [showLabel, setShowLabel] = useState(true);\n\n  //for toggling the active scale\n  const [activeScale, setActiveScale] = useState([Object.keys(scales.x)[0],Object.keys(scales.y)[0]])\n\n  //---UI stuff---//\n  //UI window toggles\n  const [toggle, setToggle] = useState();\n  //UI info boxes for points, intervals, etc.\n  const [info, setInfo] = useState();\n  //Inflection info\n  const [inflectTarget, setInflectTarget] = useState();\n  //Syntactic inflections order\n  const [syntacticOrder, setSyntacticOrder] = useState([null, null, null]); //[target1, target2, #]. # dictates order, switches b/w 0 and 1\n\n  //--- functions ---//\n  const updateSrc = (newData, key) => {\n    setHistory([...history, {src:src, activeScale: activeScale, activeData: activeData, activeLayer: activeLayer}]); //history.length-1 is last src before this\n    const newSrc = src;\n    //why is console.log(data) before & after the same, but new data point still shows up\n    //have a function where, if incoming data greater than scale max or less than scale min, set that to scale max/min\n    if (key===\"zones\") {\n      setZones(newData);\n      newSrc.zones = zones;\n    } else if (key===\"scales\") {\n      setScales(newData);\n      newSrc.scales = newData;\n    } else if (key===\"import\") {\n      //copy & pasted from ImportDataForm\n      setSrc(newData);\n      setScales(newData.scales);\n      setActiveScale([Object.keys(newData.scales.x)[0],Object.keys(newData.scales.y)[0]]);\n      setActiveData(0);\n      setZones(newData.zones);\n      setData(newData.instants[activeData]);\n      return;\n    } else {\n      setData(newData);\n      newSrc.instants[activeData] = data;\n    }\n    console.log(history);\n    setSrc(newSrc);\n    setToggle(null);\n  }\n\n const undo = () => {\n   const newHistory = [...history];\n   const last = newHistory.pop();\n   if (newHistory.length&&(last !== undefined)) {\n     console.log(newHistory.pop())\n     setHistory([newHistory]);\n     setActiveScale(last.activeScale);\n     setActiveData(last.activeData);\n     setActiveLayer(last.activeLayer);\n     setSrc(last.src);\n     setScales(last.src.scales);\n     setData(last.src.instants[activeData]);\n     setZones(last.src.zones);\n   } else {\n     //turn off undo button\n   }\n }\n\n\n  // console.log(info);\n  /*\n    TODO:\n    - for piecewise timeline, make function that generates different graphics\n  */\n//\n  return (\n    <>\n      {\n        // <>\n          // <Hands enabled={enabled} setEnabled={setEnabled}/>\n          // <div className=\"fullHeight\" onClick={e => console.log(e.clientX, e.clientY)} />\n        // </>\n      }\n\n      {info && <InfoBox\n        info={info}\n        setInfo={setInfo}\n        history={history} setHistory={setHistory}\n        data={data} setData={setData}\n        src={src} setSrc={setSrc}\n        updateSrc={updateSrc}\n        zones={zones}\n        radius={radius}\n      />}\n      <NavBar\n        toggle={toggle}\n        setToggle={setToggle}\n        data={data} showLabel={showLabel}\n        setShowLabel={setShowLabel}\n        hasScales={Object.keys(scales.y).length}\n        fileName={fileName}\n        setFileName={setFileName}\n        proj={proj}\n        undo={undo}\n      />\n      <div onClick={(e) => console.log(e.target)}>\n        {toggle === \"dataLibrary\" && <DataLibrary projects={projects} updateSrc={updateSrc} setToggle={setToggle}/>}\n        {toggle===\"scrubber\" && <Scrubber activeData={activeData} setActiveData={setActiveData} src={src} setData={setData}/>}\n        {toggle===\"NewInstantForm\" &&\n          <NewInstantForm\n            data={data}\n            setData={setData}\n            target={inflectTarget}\n            setToggle={setToggle}\n            scales={src.scales}\n            activeScale={activeScale}\n            activeData={activeData}\n            history={history} setHistory={setHistory}\n            updateSrc={updateSrc}\n          />\n        }\n        {toggle===\"editScale\" && <EditScaleForm scales={scales} updateSrc={updateSrc} setToggle={setToggle} activeScale={activeScale} setActiveScale={setActiveScale}/>}\n        {toggle===\"addZone\" && <NewZoneForm zones={zones} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale}/>}\n        {toggle===\"addInterval\" && <NewIntervalForm data={data} updateSrc={updateSrc} setToggle={setToggle} scales={scales} activeScale={activeScale} history={history} setHistory={setHistory}/>}\n        {toggle===\"addScale\" && <NewScaleForm src={src} updateSrc={updateSrc} setToggle={setToggle} setActiveScale={setActiveScale}/>}\n        {toggle===\"save\" &&\n          <ExportDataForm\n            src={src}\n            setSrc={setSrc}\n            data={data}\n            zones={zones}\n            scales={scales}\n            activeData={activeData}\n            setToggle={setToggle}\n            fileName={fileName}\n          />\n        }\n        {toggle===\"legend\" && <Legend/>}\n        {toggle===\"layers\" && <Layers activeLayer={activeLayer} setActiveLayer={setActiveLayer} data={data}/>}\n        {toggle===\"import\" &&\n          <ImportDataForm\n            updateSrc={updateSrc}\n            setToggle={setToggle}\n            setProj={setProj}\n            setFileName={setFileName}\n          />\n        }\n        {toggle===\"certainty\" &&\n          <Certainty\n            target={inflectTarget}\n            setToggle={setToggle}\n            data={data}\n            updateSrc={updateSrc}\n            zones={zones}\n            setZones={setZones}\n          />\n        }\n        {toggle===\"importance\" &&\n          <Importance\n            target={inflectTarget}\n            setToggle={setToggle}\n            data={data}\n            setData={setData}\n            zones={zones}\n            setZones={setZones}\n            radius={radius}\n            setProj={setProj}\n          />\n        }\n        {toggle===\"connection\" &&\n          <Connection\n            target={syntacticOrder}\n            setToggle={setToggle}\n            data={data}\n            setData={setData}\n            zones={zones}\n            setZones={setZones}\n          />\n        }\n\n        {\n          proj ?\n          <div id=\"main\" className=\"container fullHeight\">\n            {Object.keys(scales.x).length ?\n              <Graphic\n                data={data}\n                setData={setData}\n                updateSrc={updateSrc}\n                zones={zones}\n                setZones={setZones}\n                radius={radius}\n                info={info}\n                setInfo={setInfo}\n                setInflectTarget={setInflectTarget}\n                showLabel={showLabel}\n                activeLayer={activeLayer}\n                toggle={toggle}\n                setToggle={setToggle}\n                scales={scales}\n                setScales={setScales}\n                syntacticOrder={syntacticOrder}\n                setSyntacticOrder={setSyntacticOrder}\n                activeScale={activeScale}\n              />\n              : <EmptyProj toggle={toggle} setToggle={setToggle}/>\n            }\n            {src.imgs.length>0 && <Image urls={src.imgs}/>}\n          </div> :\n          <WelcomeMessage setProj={setProj} setFileName={setFileName} toggle={toggle} setToggle={setToggle}/>\n        }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}