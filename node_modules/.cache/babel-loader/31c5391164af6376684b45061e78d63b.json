{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/chronovis/src/components/NewZoneForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n/*\n   UI and function for adding new zones.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewZoneForm({\n  zones,\n  updateSrc,\n  setToggle,\n  scales,\n  activeScale\n}) {\n  _s();\n\n  const [values, setValues] = useState({\n    text: '',\n    xScale: activeScale[0],\n    yScale: activeScale[1],\n    start: '',\n    end: '',\n    yValue2: '',\n    yStart: '',\n    yEnd: '',\n    color: '',\n    opacity: ''\n  });\n  const [label, setLabel] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [select, setSelect] = useState(activeScale); //go thru list of scales in ChronoJSON and create a selection entry for each\n\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: key,\n      children: key\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }); //optional parameters\n\n  const [yStart, setYStart] = useState(\"\");\n  const [yEnd, setYEnd] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [opacity, setOpacity] = useState(\"\");\n\n  const handleChange = e => {\n    e.preventDefault(); //checkbox is being weird (value updates 1 render behind), setting its values directly\n\n    const {\n      value,\n      name\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    const newZones = { ...zones\n    };\n    const lastKey = Object.keys(newZones).pop() ? parseInt(Object.keys(newZones).pop()) : -1; //generate new zone\n\n    newZones[`${lastKey + 1}`] = {\n      \"text\": values.text,\n      \"start\": parseFloat(values.start),\n      //cases where start > end?\n      \"end\": parseFloat(values.end),\n      \"scale\": [values.xScale, values.yScale],\n      ...(values.yStart && {\n        \"yStart\": values.yStart\n      }),\n      ...(values.yEnd && {\n        \"yEnd\": values.yEnd\n      }),\n      ...(values.color && {\n        \"color\": values.color\n      }),\n      ...(values.opacity && {\n        \"opacity\": values.opacity\n      })\n    };\n    updateSrc(newZones, \"zones\");\n    e.preventDefault();\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center container\",\n    children: [/*#__PURE__*/_jsxDEV(InputFormText, {\n      label: \"Label\",\n      name: \"text\",\n      onChange: handleChange,\n      value: values.text,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormScale, {\n      scales: scales.x,\n      label: \"X Scale\",\n      name: \"xScale\",\n      value: values.xScale,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormScale, {\n      scales: scales.y,\n      label: \"Y Scale\",\n      name: \"yScale\",\n      value: values.yScale,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Time Start\",\n      placeholder: \"numbers only for now\",\n      name: \"start\",\n      value: values.start,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Time End\",\n      placeholder: \"numbers only for now\",\n      name: \"end\",\n      value: values.end,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormText, {\n      label: \"Color\",\n      name: \"color\",\n      placeholder: \"blue, #4DA6FF, etc.\",\n      value: values.color,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Certainty\",\n      name: \"opacity\",\n      placeholder: \"0 to 1 (default 1)\",\n      value: values.opacity,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSecondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSecondary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewZoneForm, \"SgAbm+iRlUehe4g5Xce0wqv68PU=\");\n\n_c = NewZoneForm;\n;\nexport default NewZoneForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewZoneForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/NewZoneForm.js"],"names":["React","useState","InputFormScale","InputFormText","InputFormNum","NewZoneForm","zones","updateSrc","setToggle","scales","activeScale","values","setValues","text","xScale","yScale","start","end","yValue2","yStart","yEnd","color","opacity","label","setLabel","setStart","setEnd","select","setSelect","scalesList","Object","keys","map","key","i","setYStart","setYEnd","setColor","setOpacity","handleChange","e","preventDefault","value","name","target","handleSubmit","newZones","lastKey","pop","parseInt","parseFloat","handleClose","x","y"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n\n/*\n   UI and function for adding new zones.\n*/\n\nfunction NewZoneForm({zones, updateSrc, setToggle, scales, activeScale}) {\n  const [values, setValues] = useState({\n    text: '',\n    xScale:activeScale[0],\n    yScale:activeScale[1],\n    start:'',\n    end:'',\n    yValue2:'',\n    yStart:'',\n    yEnd:'',\n    color:'',\n    opacity:''\n  });\n\n  const [label, setLabel] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [select, setSelect] = useState(activeScale);\n  //go thru list of scales in ChronoJSON and create a selection entry for each\n  const scalesList = Object.keys(scales).map((key, i) => {\n    return <option value={key} key={i}>{key}</option>\n  });\n  //optional parameters\n  const [yStart, setYStart] = useState(\"\");\n  const [yEnd, setYEnd] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [opacity, setOpacity] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    //checkbox is being weird (value updates 1 render behind), setting its values directly\n    const { value, name } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  const handleSubmit = (e) => {\n    const newZones = {...zones};\n    const lastKey = Object.keys(newZones).pop() ? parseInt(Object.keys(newZones).pop()) : -1;\n\n    //generate new zone\n    newZones[`${lastKey+1}`] = {\n      \"text\": values.text,\n      \"start\": parseFloat(values.start), //cases where start > end?\n      \"end\": parseFloat(values.end),\n      \"scale\": [values.xScale, values.yScale],\n      ...(values.yStart && {\"yStart\": values.yStart}),\n      ...(values.yEnd && {\"yEnd\": values.yEnd}),\n      ...(values.color && {\"color\": values.color}),\n      ...(values.opacity && {\"opacity\": values.opacity})\n    }\n\n    updateSrc(newZones,\"zones\");\n    e.preventDefault();\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form className=\"ui absolute center container\">\n\n      <InputFormText\n        label=\"Label\"\n        name=\"text\"\n        onChange={handleChange}\n        value={values.text}\n        required\n      />\n      <InputFormScale\n        scales={scales.x}\n        label=\"X Scale\"\n        name=\"xScale\"\n        value={values.xScale}\n        onChange={handleChange}\n      />\n      <InputFormScale\n        scales={scales.y}\n        label=\"Y Scale\"\n        name=\"yScale\"\n        value={values.yScale}\n        onChange={handleChange}\n      />\n      <InputFormNum\n        label=\"Time Start\"\n        placeholder=\"numbers only for now\"\n        name=\"start\"\n        value={values.start}\n        onChange={handleChange}\n        required\n      />\n      <InputFormNum\n        label=\"Time End\"\n        placeholder=\"numbers only for now\"\n        name=\"end\"\n        value={values.end}\n        onChange={handleChange}\n        required\n      />\n      {/*<label>\n        Y Start\n        <input\n          type=\"text\"\n          name=\"yStart\"\n          placeholder=\"#s, dates, logical operators\"\n          value={values.yStart}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Y End\n        <input\n          type=\"text\"\n          name=\"yEnd\"\n          placeholder=\"#s, dates, logical operators\"\n          value={values.yEnd}\n          onChange={handleChange}\n        />\n      </label>*/}\n      <InputFormText\n        label=\"Color\"\n        name=\"color\"\n        placeholder=\"blue, #4DA6FF, etc.\"\n        value={values.color}\n        onChange={handleChange}\n      />\n      <InputFormNum\n        label=\"Certainty\"\n        name=\"opacity\"\n        placeholder=\"0 to 1 (default 1)\"\n        value={values.opacity}\n        onChange={handleChange}\n      /><br/>\n      <div className=\"flexCenter\">\n        <button className=\"buttonSecondary\" onClick={handleClose}>Cancel</button> &nbsp;\n        <button className=\"buttonSecondary\" onClick={handleSubmit}>Submit</button>\n      </div>\n    </form>\n  )\n};\n\nexport default NewZoneForm;\n"]},"metadata":{},"sourceType":"module"}