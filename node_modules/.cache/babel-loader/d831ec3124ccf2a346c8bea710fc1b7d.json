{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/chronovis/src/components/ImportDataForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\n/*\n  For saving and downloading JSON data onto computer.\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ImportDataForm({\n  setToggle,\n  updateSrc,\n  setFileName,\n  setProj\n}) {\n  _s();\n\n  const [selectedFile, setSelectedFile] = useState();\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handleChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setIsSelected(true);\n    e.preventDefault();\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a file!\");\n      return;\n    }\n\n    let fileReader = new FileReader();\n    fileReader.readAsText(selectedFile);\n\n    fileReader.onload = () => {\n      const newSrc = JSON.parse(fileReader.result); //add different cases for JSON and img\n\n      setFileName(selectedFile.name.replace(\".json\", \"\")); //chop off .json extension from name\n      // console.log(newSrc);\n\n      updateSrc(newSrc, \"import\"); // setSrc(newSrc);\n      // setScales(newSrc.scales);\n      // setActiveScale([Object.keys(newSrc.scales.x)[0],Object.keys(newSrc.scales.y)[0]]);\n      // setActiveData(0);\n      // setData(newSrc.instants[activeData]);\n      // setZones(newSrc.zones);\n    };\n\n    fileReader.onerror = () => {\n      console.log(fileReader.error);\n    };\n\n    setProj(true);\n    setToggle(null);\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"right uiButton closeButton\",\n      onClick: handleClose,\n      children: \"x\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"data\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 64\n    }, this), isSelected ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"File name: \", selectedFile.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 36\n      }, this), \"File type: \", selectedFile.type, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this), \"Size: \", selectedFile.size / 1000, \" KB\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Select a file to show details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"uiButton\",\n      type: \"submit\",\n      value: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ImportDataForm, \"qAWFuCLk3XCU5zTGTW0sbeLVZ9E=\");\n\n_c = ImportDataForm;\nexport default ImportDataForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportDataForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/ImportDataForm.js"],"names":["React","useState","ImportDataForm","setToggle","updateSrc","setFileName","setProj","selectedFile","setSelectedFile","isSelected","setIsSelected","handleChange","e","target","files","preventDefault","handleSubmit","alert","fileReader","FileReader","readAsText","onload","newSrc","JSON","parse","result","name","replace","onerror","console","log","error","handleClose","type","size"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\n/*\n  For saving and downloading JSON data onto computer.\n*/\n\nfunction ImportDataForm({setToggle, updateSrc, setFileName, setProj}) {\n  const [selectedFile, setSelectedFile] = useState();\n\tconst [isSelected, setIsSelected] = useState(false);\n\n\tconst handleChange = (e) => {\n\t\tsetSelectedFile(e.target.files[0]);\n\t\tsetIsSelected(true);\n    e.preventDefault();\n\t};\n\n\tconst handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!selectedFile) {\n      alert(\"Please select a file!\");\n      return;\n    }\n    let fileReader = new FileReader();\n    fileReader.readAsText(selectedFile);\n    fileReader.onload = () => {\n      const newSrc = JSON.parse(fileReader.result);\n      //add different cases for JSON and img\n      setFileName(selectedFile.name.replace(\".json\", \"\")); //chop off .json extension from name\n      // console.log(newSrc);\n      updateSrc(newSrc, \"import\")\n      // setSrc(newSrc);\n      // setScales(newSrc.scales);\n      // setActiveScale([Object.keys(newSrc.scales.x)[0],Object.keys(newSrc.scales.y)[0]]);\n      // setActiveData(0);\n      // setData(newSrc.instants[activeData]);\n      // setZones(newSrc.zones);\n    }\n    fileReader.onerror = () => {\n      console.log(fileReader.error);\n    }\n    setProj(true);\n    setToggle(null);\n\n\t};\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n  return (\n    <form\n      className=\"ui absolute center\"\n      onSubmit={handleSubmit}\n    >\n      <button className=\"right uiButton closeButton\" onClick={handleClose}>x</button><br/>\n      <input type=\"file\" name=\"data\" onChange={handleChange} /><br/>\n\t\t\t{isSelected ? (\n\t\t\t\t<p>\n\t\t\t\t\tFile name: {selectedFile.name}<br/>\n\t\t\t\t\tFile type: {selectedFile.type}<br/>\n\t\t\t\t\tSize: {selectedFile.size/1000} KB\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p>Select a file to show details</p>\n\t\t\t)}\n\t\t\t<input className=\"uiButton\" type=\"submit\" value=\"Upload\"/>\n    </form>\n  );\n}\n\nexport default ImportDataForm;\n"]},"metadata":{},"sourceType":"module"}