{"ast":null,"code":"var _jsxFileName = \"/Users/skye/Desktop/Portfolio/chronovis/src/components/NewIntervalForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewIntervalForm({\n  data,\n  updateSrc,\n  setToggle,\n  scales,\n  activeScale,\n  history,\n  setHistory\n}) {\n  _s();\n\n  const [values, setValues] = useState({\n    text: '',\n    xValue1: '',\n    yValue1: '',\n    xValue2: '',\n    yValue2: '',\n    xScale: activeScale[0],\n    yScale: activeScale[1],\n    color: '',\n    opacity: '',\n    width: ''\n  }); // const [text, setText] = useState(\"\");\n  // const [xValue1, setXValue1] = useState(\"\");\n  // const [yValue1, setYValue1] = useState(\"\");\n  // const [xValue2, setXValue2] = useState(\"\");\n  // const [yValue2, setYValue2] = useState(\"\");\n  // const [select, setSelect] = useState(activeScale);\n  // // const scalesList = Object.keys(scales).map((key, i) => {\n  // //   return <option value={key} key={i}>{key}</option>\n  // // });\n  // //optional parameters\n  // const [color, setColor] = useState(\"\");\n  // const [opacity, setOpacity] = useState(\"\");\n  // const [width, setWidth] = useState(\"\");\n  // const [dashed, setDashed] = useState(\"\");\n\n  const handleChange = e => {\n    e.preventDefault(); //checkbox is being weird (value updates 1 render behind), setting its values directly\n\n    const {\n      value,\n      name\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newData = { ...data\n    };\n    const lastKey = Object.keys(newData).pop() ? parseInt(Object.keys(newData).pop()) : -1;\n    const lastInstant = newData[lastKey]; //last instant of data\n\n    const tempX1 = parseFloat(values.xValue1);\n    const tempY1 = values.yValue1 ? parseFloat(values.yValue1) : null; //if y pos specified, convert to float. otherwise, return null\n\n    const tempX2 = parseFloat(values.xValue2);\n    const tempY2 = values.yValue2 ? parseFloat(values.yValue2) : null; //error handling. btw, isNan(null) === false\n\n    if (isNaN(tempX1)) {\n      alert(\"Enter a value for Start Time!\");\n      return;\n    } else if (isNaN(tempY1)) {\n      alert(\"Enter a value for Start Y Value!\");\n      return;\n    } else if (isNaN(tempX2)) {\n      alert(\"Enter a value for End Time!\");\n      return;\n    } else if (isNaN(tempY2)) {\n      alert(\"Enter a value for End Y Value!\");\n      return;\n    } else {\n      //generate first instant\n      newData[`${lastKey + 1}`] = {\n        \"text\": \"\",\n        \"x\": tempX1,\n        \"y\": values.yValue1 ? tempY1 : lastInstant ? lastInstant.y : 0,\n        // if y not specified, take value of last instant\n        \"scale\": [values.xScale, values.yScale],\n        \"target\": [`${lastKey + 2}`],\n        ...(values.text && {\n          \"intervalText\": values.text\n        }),\n        ...(values.color && {\n          \"intervalColor\": values.color,\n          \"color\": values.color\n        }),\n        ...(values.width && {\n          \"intervalWidth\": values.width\n        }),\n        ...(values.opacity && {\n          \"intervalOpacity\": values.opacity,\n          \"opacity\": values.opacity\n        })\n      }; //generate second instant\n\n      newData[`${lastKey + 2}`] = {\n        \"text\": \"\",\n        \"x\": tempX2,\n        \"y\": values.yValue2 ? tempY2 : lastInstant ? lastInstant.y : 0,\n        // if y not specified, take value of last instant\n        \"scale\": [values.xScale, values.yScale],\n        \"target\": null,\n        ...(values.color && {\n          \"color\": values.color\n        }),\n        ...(values.opacity && {\n          \"opacity\": values.opacity\n        })\n      };\n    }\n\n    ;\n    updateSrc(newData);\n  };\n\n  const handleClose = e => {\n    setToggle(null);\n    e.preventDefault();\n  };\n  /*\n  <label>\n    Dashed\n    <input\n      type=\"text\"\n      placeholder=\"i.e: 5\"\n      value={dashed}\n      onChange={handleChange}\n    />\n  </label><br/><br/>\n  */\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"ui absolute center container\",\n    children: [/*#__PURE__*/_jsxDEV(InputFormText, {\n      label: \"Label\",\n      name: \"text\",\n      onChange: handleChange,\n      value: values.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormScale, {\n      scales: scales.x,\n      label: \"X Scale\",\n      name: \"xSelect\",\n      value: values.xSelect,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormScale, {\n      scales: scales.y,\n      label: \"Y Scale\",\n      name: \"ySelect\",\n      value: values.ySelect,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"textSecondary bold\",\n      children: \"Start:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Time\",\n      name: \"xValue1\",\n      placeholder: \"numbers only for now\",\n      value: values.xValue1,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Y Value\",\n      name: \"yValue1\",\n      placeholder: \"numbers only for now\",\n      value: values.yValue1,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"textSecondary bold\",\n      children: \"End:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Time\",\n      name: \"xValue2\",\n      placeholder: \"numbers only for now\",\n      value: values.xValue2,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Y Value\",\n      placeholder: \"numbers only for now\",\n      name: \"yValue2\",\n      value: values.yValue2,\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"textSecondary bold\",\n      children: \"Properties:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormText, {\n      label: \"Color\",\n      name: \"color\",\n      placeholder: \"blue, #4DA6FF, etc.\",\n      value: values.color,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Certainty\",\n      name: \"opacity\",\n      placeholder: \"0 to 1 (default 1)\",\n      value: values.opacity,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputFormNum, {\n      label: \"Width\",\n      name: \"width\",\n      placeholder: \"(default 3)\",\n      value: values.width,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexCenter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSecondary\",\n        onClick: handleClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonSecondary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewIntervalForm, \"DkRe+uB5+ve8A+Pg0nWq8lW+/9k=\");\n\n_c = NewIntervalForm;\nexport default NewIntervalForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewIntervalForm\");","map":{"version":3,"sources":["/Users/skye/Desktop/Portfolio/chronovis/src/components/NewIntervalForm.js"],"names":["React","useState","InputFormScale","InputFormText","InputFormNum","NewIntervalForm","data","updateSrc","setToggle","scales","activeScale","history","setHistory","values","setValues","text","xValue1","yValue1","xValue2","yValue2","xScale","yScale","color","opacity","width","handleChange","e","preventDefault","value","name","target","handleSubmit","newData","lastKey","Object","keys","pop","parseInt","lastInstant","tempX1","parseFloat","tempY1","tempX2","tempY2","isNaN","alert","y","handleClose","x","xSelect","ySelect"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport InputFormScale from './InputFormScale';\nimport InputFormText from './InputFormText';\nimport InputFormNum from './InputFormNum';\n\nfunction NewIntervalForm({data, updateSrc, setToggle, scales, activeScale, history, setHistory}) {\n\n  const [values, setValues] = useState({\n    text: '',\n    xValue1:'',\n    yValue1:'',\n    xValue2:'',\n    yValue2:'',\n    xScale:activeScale[0],\n    yScale:activeScale[1],\n    color:'',\n    opacity:'',\n    width:''\n  });\n\n  // const [text, setText] = useState(\"\");\n  // const [xValue1, setXValue1] = useState(\"\");\n  // const [yValue1, setYValue1] = useState(\"\");\n  // const [xValue2, setXValue2] = useState(\"\");\n  // const [yValue2, setYValue2] = useState(\"\");\n  // const [select, setSelect] = useState(activeScale);\n  // // const scalesList = Object.keys(scales).map((key, i) => {\n  // //   return <option value={key} key={i}>{key}</option>\n  // // });\n  // //optional parameters\n  // const [color, setColor] = useState(\"\");\n  // const [opacity, setOpacity] = useState(\"\");\n  // const [width, setWidth] = useState(\"\");\n  // const [dashed, setDashed] = useState(\"\");\n\n  const handleChange = (e) => {\n    e.preventDefault();\n    //checkbox is being weird (value updates 1 render behind), setting its values directly\n    const { value, name } = e.target;\n    setValues({\n      ...values,\n      [name]: value,\n    });\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const newData = {...data};\n    const lastKey = Object.keys(newData).pop() ? parseInt(Object.keys(newData).pop()) : -1;\n    const lastInstant = newData[lastKey]; //last instant of data\n\n    const tempX1 = parseFloat(values.xValue1);\n    const tempY1 = values.yValue1 ? parseFloat(values.yValue1) : null; //if y pos specified, convert to float. otherwise, return null\n    const tempX2 = parseFloat(values.xValue2);\n    const tempY2 = values.yValue2 ? parseFloat(values.yValue2) : null;\n\n    //error handling. btw, isNan(null) === false\n    if (isNaN(tempX1)) {\n      alert(\"Enter a value for Start Time!\");\n      return;\n    } else if (isNaN(tempY1)) {\n      alert(\"Enter a value for Start Y Value!\");\n      return;\n    } else if (isNaN(tempX2)) {\n      alert(\"Enter a value for End Time!\");\n      return;\n    } else if (isNaN(tempY2)) {\n      alert(\"Enter a value for End Y Value!\");\n      return;\n    } else {\n      //generate first instant\n      newData[`${lastKey+1}`] = {\n        \"text\": \"\",\n        \"x\":tempX1,\n        \"y\": values.yValue1 ? tempY1 : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": [values.xScale, values.yScale],\n        \"target\": [`${lastKey+2}`],\n        ...(values.text && {\"intervalText\": values.text}),\n        ...(values.color && {\"intervalColor\": values.color, \"color\":values.color}),\n        ...(values.width && {\"intervalWidth\": values.width}),\n        ...(values.opacity && {\"intervalOpacity\": values.opacity, \"opacity\":values.opacity})\n      };\n      //generate second instant\n      newData[`${lastKey+2}`] = {\n        \"text\": \"\",\n        \"x\":tempX2,\n        \"y\": values.yValue2 ? tempY2 : ( lastInstant ? lastInstant.y : 0 ), // if y not specified, take value of last instant\n        \"scale\": [values.xScale, values.yScale],\n        \"target\": null,\n        ...(values.color && {\"color\":values.color}),\n        ...(values.opacity && {\"opacity\":values.opacity})\n      };\n    };\n\n    updateSrc(newData);\n  };\n\n  const handleClose = (e) => {\n    setToggle(null);\n    e.preventDefault();\n  }\n\n/*\n<label>\n  Dashed\n  <input\n    type=\"text\"\n    placeholder=\"i.e: 5\"\n    value={dashed}\n    onChange={handleChange}\n  />\n</label><br/><br/>\n*/\n  return (\n    <form className=\"ui absolute center container\">\n      <InputFormText\n        label=\"Label\"\n        name=\"text\"\n        onChange={handleChange}\n        value={values.text}\n      />\n      <InputFormScale\n        scales={scales.x}\n        label=\"X Scale\"\n        name=\"xSelect\"\n        value={values.xSelect}\n        onChange={handleChange}\n      />\n      <InputFormScale\n        scales={scales.y}\n        label=\"Y Scale\"\n        name=\"ySelect\"\n        value={values.ySelect}\n        onChange={handleChange}\n      /><br/>\n      <span className=\"textSecondary bold\">Start:</span>\n      <InputFormNum\n        label=\"Time\"\n        name=\"xValue1\"\n        placeholder=\"numbers only for now\"\n        value={values.xValue1}\n        onChange={handleChange}\n        required\n      />\n      <InputFormNum\n        label=\"Y Value\"\n        name=\"yValue1\"\n        placeholder=\"numbers only for now\"\n        value={values.yValue1}\n        onChange={handleChange}\n        required\n      /><br/>\n      <span className=\"textSecondary bold\">End:</span>\n      <InputFormNum\n        label=\"Time\"\n        name=\"xValue2\"\n        placeholder=\"numbers only for now\"\n        value={values.xValue2}\n        onChange={handleChange}\n        required\n      />\n      <InputFormNum\n        label=\"Y Value\"\n        placeholder=\"numbers only for now\"\n        name=\"yValue2\"\n        value={values.yValue2}\n        onChange={handleChange}\n        required\n      /><br/>\n      <span className=\"textSecondary bold\">Properties:</span>\n      <InputFormText\n        label=\"Color\"\n        name=\"color\"\n        placeholder=\"blue, #4DA6FF, etc.\"\n        value={values.color}\n        onChange={handleChange}\n      />\n      <InputFormNum\n        label=\"Certainty\"\n        name=\"opacity\"\n        placeholder=\"0 to 1 (default 1)\"\n        value={values.opacity}\n        onChange={handleChange}\n      />\n      <InputFormNum\n        label=\"Width\"\n        name=\"width\"\n        placeholder=\"(default 3)\"\n        value={values.width}\n        onChange={handleChange}\n      /><br/>\n      <div className=\"flexCenter\">\n        <button className=\"buttonSecondary\" onClick={handleClose}>Cancel</button> &nbsp;\n        <button className=\"buttonSecondary\" onClick={handleSubmit}>Submit</button>\n      </div>\n    </form>\n  )\n}\n\nexport default NewIntervalForm;\n"]},"metadata":{},"sourceType":"module"}